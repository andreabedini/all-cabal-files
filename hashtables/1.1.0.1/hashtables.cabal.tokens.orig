[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "Name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 22 )
    ( TokSym "hashtables" )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "Version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 22 )
    ( TokSym "1.1.0.1" )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "x-revision" )
, L
    ( Position 3 11 ) Colon
, L
    ( Position 3 13 )
    ( TokSym "3" )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "Synopsis" )
, L
    ( Position 4 9 ) Colon
, L
    ( Position 4 22 )
    ( TokSym "Mutable" )
, L
    ( Position 4 30 )
    ( TokSym "hash" )
, L
    ( Position 4 35 )
    ( TokSym "tables" )
, L
    ( Position 4 42 )
    ( TokSym "in" )
, L
    ( Position 4 45 )
    ( TokSym "the" )
, L
    ( Position 4 49 )
    ( TokSym "ST" )
, L
    ( Position 4 52 )
    ( TokSym "monad" )
, L
    ( Position 5 1 )
    ( Indent 0 )
, L
    ( Position 5 1 )
    ( TokSym "Homepage" )
, L
    ( Position 5 9 ) Colon
, L
    ( Position 5 22 )
    ( TokSym "http" )
, L
    ( Position 5 26 ) Colon
, L
    ( Position 5 27 )
    ( TokOther "//" )
, L
    ( Position 5 29 )
    ( TokSym "github.com" )
, L
    ( Position 5 39 )
    ( TokOther "/" )
, L
    ( Position 5 40 )
    ( TokSym "gregorycollins" )
, L
    ( Position 5 54 )
    ( TokOther "/" )
, L
    ( Position 5 55 )
    ( TokSym "hashtables" )
, L
    ( Position 6 1 )
    ( Indent 0 )
, L
    ( Position 6 1 )
    ( TokSym "License" )
, L
    ( Position 6 8 ) Colon
, L
    ( Position 6 22 )
    ( TokSym "BSD3" )
, L
    ( Position 7 1 )
    ( Indent 0 )
, L
    ( Position 7 1 )
    ( TokSym "License-file" )
, L
    ( Position 7 13 ) Colon
, L
    ( Position 7 22 )
    ( TokSym "LICENSE" )
, L
    ( Position 8 1 )
    ( Indent 0 )
, L
    ( Position 8 1 )
    ( TokSym "Author" )
, L
    ( Position 8 7 ) Colon
, L
    ( Position 8 22 )
    ( TokSym "Gregory" )
, L
    ( Position 8 30 )
    ( TokSym "Collins" )
, L
    ( Position 9 1 )
    ( Indent 0 )
, L
    ( Position 9 1 )
    ( TokSym "Maintainer" )
, L
    ( Position 9 11 ) Colon
, L
    ( Position 9 22 )
    ( TokSym "greg" )
, L
    ( Position 9 26 )
    ( TokOther "@" )
, L
    ( Position 9 27 )
    ( TokSym "gregorycollins.net" )
, L
    ( Position 10 1 )
    ( Indent 0 )
, L
    ( Position 10 1 )
    ( TokSym "Copyright" )
, L
    ( Position 10 10 ) Colon
, L
    ( Position 10 22 )
    ( TokOther "(" )
, L
    ( Position 10 23 )
    ( TokSym "c" )
, L
    ( Position 10 24 )
    ( TokOther ")" )
, L
    ( Position 10 26 )
    ( TokSym "2011-2012" )
, L
    ( Position 10 35 )
    ( TokOther "," )
, L
    ( Position 10 37 )
    ( TokSym "Google" )
, L
    ( Position 10 43 )
    ( TokOther "," )
, L
    ( Position 10 45 )
    ( TokSym "Inc." )
, L
    ( Position 11 1 )
    ( Indent 0 )
, L
    ( Position 11 1 )
    ( TokSym "Category" )
, L
    ( Position 11 9 ) Colon
, L
    ( Position 11 22 )
    ( TokSym "Data" )
, L
    ( Position 12 1 )
    ( Indent 0 )
, L
    ( Position 12 1 )
    ( TokSym "Build-type" )
, L
    ( Position 12 11 ) Colon
, L
    ( Position 12 22 )
    ( TokSym "Simple" )
, L
    ( Position 13 1 )
    ( Indent 0 )
, L
    ( Position 13 1 )
    ( TokSym "Cabal-version" )
, L
    ( Position 13 14 ) Colon
, L
    ( Position 13 22 )
    ( TokOther ">=" )
, L
    ( Position 13 25 )
    ( TokSym "1.8" )
, L
    ( Position 15 1 )
    ( Indent 0 )
, L
    ( Position 15 1 )
    ( TokSym "Description" )
, L
    ( Position 15 12 ) Colon
, L
    ( Position 16 1 )
    ( Indent 2 )
, L
    ( Position 16 3 )
    ( TokSym "This" )
, L
    ( Position 16 8 )
    ( TokSym "package" )
, L
    ( Position 16 16 )
    ( TokSym "provides" )
, L
    ( Position 16 25 )
    ( TokSym "a" )
, L
    ( Position 16 27 )
    ( TokSym "couple" )
, L
    ( Position 16 34 )
    ( TokSym "of" )
, L
    ( Position 16 37 )
    ( TokSym "different" )
, L
    ( Position 16 47 )
    ( TokSym "implementations" )
, L
    ( Position 16 63 )
    ( TokSym "of" )
, L
    ( Position 16 66 )
    ( TokSym "mutable" )
, L
    ( Position 16 74 )
    ( TokSym "hash" )
, L
    ( Position 17 1 )
    ( Indent 2 )
, L
    ( Position 17 3 )
    ( TokSym "tables" )
, L
    ( Position 17 10 )
    ( TokSym "in" )
, L
    ( Position 17 13 )
    ( TokSym "the" )
, L
    ( Position 17 17 )
    ( TokSym "ST" )
, L
    ( Position 17 20 )
    ( TokSym "monad" )
, L
    ( Position 17 25 )
    ( TokOther "," )
, L
    ( Position 17 27 )
    ( TokSym "as" )
, L
    ( Position 17 30 )
    ( TokSym "well" )
, L
    ( Position 17 35 )
    ( TokSym "as" )
, L
    ( Position 17 38 )
    ( TokSym "a" )
, L
    ( Position 17 40 )
    ( TokSym "typeclass" )
, L
    ( Position 17 50 )
    ( TokSym "abstracting" )
, L
    ( Position 17 62 )
    ( TokSym "their" )
, L
    ( Position 17 68 )
    ( TokSym "common" )
, L
    ( Position 18 1 )
    ( Indent 2 )
, L
    ( Position 18 3 )
    ( TokSym "operations" )
, L
    ( Position 18 13 )
    ( TokOther "," )
, L
    ( Position 18 15 )
    ( TokSym "and" )
, L
    ( Position 18 19 )
    ( TokSym "a" )
, L
    ( Position 18 21 )
    ( TokSym "set" )
, L
    ( Position 18 25 )
    ( TokSym "of" )
, L
    ( Position 18 28 )
    ( TokSym "wrappers" )
, L
    ( Position 18 37 )
    ( TokSym "to" )
, L
    ( Position 18 40 )
    ( TokSym "use" )
, L
    ( Position 18 44 )
    ( TokSym "the" )
, L
    ( Position 18 48 )
    ( TokSym "hash" )
, L
    ( Position 18 53 )
    ( TokSym "tables" )
, L
    ( Position 18 60 )
    ( TokSym "in" )
, L
    ( Position 18 63 )
    ( TokSym "the" )
, L
    ( Position 18 67 )
    ( TokSym "IO" )
, L
    ( Position 18 70 )
    ( TokSym "monad." )
, L
    ( Position 19 1 )
    ( Indent 2 )
, L
    ( Position 19 3 )
    ( TokSym "." )
, L
    ( Position 20 1 )
    ( Indent 2 )
, L
    ( Position 20 3 )
    ( TokOther "/" )
, L
    ( Position 20 4 )
    ( TokSym "QUICK" )
, L
    ( Position 20 10 )
    ( TokSym "START" )
, L
    ( Position 20 15 )
    ( TokOther "/" )
, L
    ( Position 20 16 ) Colon
, L
    ( Position 20 18 )
    ( TokSym "documentation" )
, L
    ( Position 20 32 )
    ( TokSym "for" )
, L
    ( Position 20 36 )
    ( TokSym "the" )
, L
    ( Position 20 40 )
    ( TokSym "hash" )
, L
    ( Position 20 45 )
    ( TokSym "table" )
, L
    ( Position 20 51 )
    ( TokSym "operations" )
, L
    ( Position 20 62 )
    ( TokSym "is" )
, L
    ( Position 20 65 )
    ( TokSym "provided" )
, L
    ( Position 20 74 )
    ( TokSym "in" )
, L
    ( Position 20 77 )
    ( TokSym "the" )
, L
    ( Position 21 1 )
    ( Indent 2 )
, L
    ( Position 21 3 )
    ( TokStr "Data.HashTable.Class" )
, L
    ( Position 21 26 )
    ( TokSym "module" )
, L
    ( Position 21 32 )
    ( TokOther "," )
, L
    ( Position 21 34 )
    ( TokSym "and" )
, L
    ( Position 21 38 )
    ( TokSym "the" )
, L
    ( Position 21 42 )
    ( TokSym "IO" )
, L
    ( Position 21 45 )
    ( TokSym "wrappers" )
, L
    ( Position 21 54 )
    ( TokOther "(" )
, L
    ( Position 21 55 )
    ( TokSym "which" )
, L
    ( Position 21 61 )
    ( TokSym "most" )
, L
    ( Position 21 66 )
    ( TokSym "users" )
, L
    ( Position 21 72 )
    ( TokSym "will" )
, L
    ( Position 22 1 )
    ( Indent 2 )
, L
    ( Position 22 3 )
    ( TokSym "probably" )
, L
    ( Position 22 12 )
    ( TokSym "prefer" )
, L
    ( Position 22 18 )
    ( TokOther ")" )
, L
    ( Position 22 20 )
    ( TokSym "are" )
, L
    ( Position 22 24 )
    ( TokSym "located" )
, L
    ( Position 22 32 )
    ( TokSym "in" )
, L
    ( Position 22 35 )
    ( TokSym "the" )
, L
    ( Position 22 39 )
    ( TokStr "Data.HashTable.IO" )
, L
    ( Position 22 59 )
    ( TokSym "module." )
, L
    ( Position 23 1 )
    ( Indent 2 )
, L
    ( Position 23 3 )
    ( TokSym "." )
, L
    ( Position 24 1 )
    ( Indent 2 )
, L
    ( Position 24 3 )
    ( TokSym "This" )
, L
    ( Position 24 8 )
    ( TokSym "package" )
, L
    ( Position 24 16 )
    ( TokSym "currently" )
, L
    ( Position 24 26 )
    ( TokSym "contains" )
, L
    ( Position 24 35 )
    ( TokSym "three" )
, L
    ( Position 24 41 )
    ( TokSym "hash" )
, L
    ( Position 24 46 )
    ( TokSym "table" )
, L
    ( Position 24 52 )
    ( TokSym "implementations" )
, L
    ( Position 24 67 ) Colon
, L
    ( Position 25 1 )
    ( Indent 2 )
, L
    ( Position 25 3 )
    ( TokSym "." )
, L
    ( Position 26 1 )
    ( Indent 4 )
, L
    ( Position 26 5 )
    ( TokSym "1." )
, L
    ( Position 26 8 )
    ( TokStr "Data.HashTable.ST.Basic" )
, L
    ( Position 26 34 )
    ( TokSym "contains" )
, L
    ( Position 26 43 )
    ( TokSym "a" )
, L
    ( Position 26 45 )
    ( TokSym "basic" )
, L
    ( Position 26 51 )
    ( TokSym "open-addressing" )
, L
    ( Position 26 67 )
    ( TokSym "hash" )
, L
    ( Position 26 72 )
    ( TokSym "table" )
, L
    ( Position 27 1 )
    ( Indent 7 )
, L
    ( Position 27 8 )
    ( TokSym "using" )
, L
    ( Position 27 14 )
    ( TokSym "linear" )
, L
    ( Position 27 21 )
    ( TokSym "probing" )
, L
    ( Position 27 29 )
    ( TokSym "as" )
, L
    ( Position 27 32 )
    ( TokSym "the" )
, L
    ( Position 27 36 )
    ( TokSym "collision" )
, L
    ( Position 27 46 )
    ( TokSym "strategy." )
, L
    ( Position 27 56 )
    ( TokSym "On" )
, L
    ( Position 27 59 )
    ( TokSym "a" )
, L
    ( Position 27 61 )
    ( TokSym "pure" )
, L
    ( Position 27 66 )
    ( TokSym "speed" )
, L
    ( Position 27 72 )
    ( TokSym "basis" )
, L
    ( Position 27 78 )
    ( TokSym "it" )
, L
    ( Position 28 1 )
    ( Indent 7 )
, L
    ( Position 28 8 )
    ( TokSym "should" )
, L
    ( Position 28 15 )
    ( TokSym "currently" )
, L
    ( Position 28 25 )
    ( TokSym "be" )
, L
    ( Position 28 28 )
    ( TokSym "the" )
, L
    ( Position 28 32 )
    ( TokSym "fastest" )
, L
    ( Position 28 40 )
    ( TokSym "available" )
, L
    ( Position 28 50 )
    ( TokSym "Haskell" )
, L
    ( Position 28 58 )
    ( TokSym "hash" )
, L
    ( Position 28 63 )
    ( TokSym "table" )
, L
    ( Position 29 1 )
    ( Indent 7 )
, L
    ( Position 29 8 )
    ( TokSym "implementation" )
, L
    ( Position 29 23 )
    ( TokSym "for" )
, L
    ( Position 29 27 )
    ( TokSym "lookups" )
, L
    ( Position 29 34 )
    ( TokOther "," )
, L
    ( Position 29 36 )
    ( TokSym "although" )
, L
    ( Position 29 45 )
    ( TokSym "it" )
, L
    ( Position 29 48 )
    ( TokSym "has" )
, L
    ( Position 29 52 )
    ( TokSym "a" )
, L
    ( Position 29 54 )
    ( TokSym "higher" )
, L
    ( Position 29 61 )
    ( TokSym "memory" )
, L
    ( Position 29 68 )
    ( TokSym "overhead" )
, L
    ( Position 30 1 )
    ( Indent 7 )
, L
    ( Position 30 8 )
    ( TokSym "than" )
, L
    ( Position 30 13 )
    ( TokSym "the" )
, L
    ( Position 30 17 )
    ( TokSym "other" )
, L
    ( Position 30 23 )
    ( TokSym "tables" )
, L
    ( Position 30 30 )
    ( TokSym "and" )
, L
    ( Position 30 34 )
    ( TokSym "can" )
, L
    ( Position 30 38 )
    ( TokSym "suffer" )
, L
    ( Position 30 45 )
    ( TokSym "from" )
, L
    ( Position 30 50 )
    ( TokSym "long" )
, L
    ( Position 30 55 )
    ( TokSym "delays" )
, L
    ( Position 30 62 )
    ( TokSym "when" )
, L
    ( Position 30 67 )
    ( TokSym "the" )
, L
    ( Position 30 71 )
    ( TokSym "table" )
, L
    ( Position 30 77 )
    ( TokSym "is" )
, L
    ( Position 31 1 )
    ( Indent 7 )
, L
    ( Position 31 8 )
    ( TokSym "resized" )
, L
    ( Position 31 16 )
    ( TokSym "because" )
, L
    ( Position 31 24 )
    ( TokSym "all" )
, L
    ( Position 31 28 )
    ( TokSym "of" )
, L
    ( Position 31 31 )
    ( TokSym "the" )
, L
    ( Position 31 35 )
    ( TokSym "elements" )
, L
    ( Position 31 44 )
    ( TokSym "in" )
, L
    ( Position 31 47 )
    ( TokSym "the" )
, L
    ( Position 31 51 )
    ( TokSym "table" )
, L
    ( Position 31 57 )
    ( TokSym "need" )
, L
    ( Position 31 62 )
    ( TokSym "to" )
, L
    ( Position 31 65 )
    ( TokSym "be" )
, L
    ( Position 31 68 )
    ( TokSym "rehashed." )
, L
    ( Position 32 1 )
    ( Indent 2 )
, L
    ( Position 32 3 )
    ( TokSym "." )
, L
    ( Position 33 1 )
    ( Indent 4 )
, L
    ( Position 33 5 )
    ( TokSym "2." )
, L
    ( Position 33 8 )
    ( TokStr "Data.HashTable.ST.Cuckoo" )
, L
    ( Position 33 35 )
    ( TokSym "contains" )
, L
    ( Position 33 44 )
    ( TokSym "an" )
, L
    ( Position 33 47 )
    ( TokSym "implementation" )
, L
    ( Position 33 62 )
    ( TokSym "of" )
, L
    ( Position 33 65 )
    ( TokOther "\" )
, L
    ( Position 33 73 )
    ( LexicalError "\xd
           hashing\" as introduced by Pagh and Rodler in 2001 (see\xd
           <http://en.wikipedia.org/wiki/Cuckoo_hashing>). Cuckoo hashing has\xd
           worst-case /O(1)/ lookups and can reach a high \"load factor\", in which\xd
           the table can perform acceptably well even when more than 90% full.\xd
           Randomized testing shows this implementation of cuckoo hashing to be\xd
           slightly faster on insert and slightly slower on lookup than\xd
           "Data.Hashtable.ST.Basic", while being more space efficient by about a\xd
           half-word per key-value mapping. Cuckoo hashing, like the basic hash\xd
           table implementation using linear probing, can suffer from long delays\xd
           when the table is resized.\xd
      .\xd
        3. "Data.HashTable.ST.Linear" contains a linear hash table (see\xd
           <http://en.wikipedia.org/wiki/Linear_hashing>), which trades some insert\xd
           and lookup performance for higher space efficiency and much shorter\xd
           delays when expanding the table. In most cases, benchmarks show this\xd
           table to be currently slightly faster than @Data.HashTable@ from the\xd
           Haskell base library.\xd
      .\xd
      It is recommended to create a concrete type alias in your code when using this\xd
      package, i.e.:\xd
      .\xd
      > import qualified Data.HashTable.IO as H\xd
      >\xd
      > type HashTable k v = H.BasicHashTable k v\xd
      >\xd
      > foo :: IO (HashTable Int Int)\xd
      > foo = do\xd
      >     ht <- H.new\xd
      >     H.insert ht 1 1\xd
      >     return ht\xd
      .\xd
      Firstly, this makes it easy to switch to a different hash table implementation,\xd
      and secondly, using a concrete type rather than leaving your functions abstract\xd
      in the HashTable class should allow GHC to optimize away the typeclass\xd
      dictionaries.\xd
      .\xd
      This package accepts a couple of different cabal flags:\xd
      .\xd
        * @unsafe-tricks@, default /ON/. If this flag is enabled, we use some\xd
          unsafe GHC-specific tricks to save indirections (namely @unsafeCoerce#@\xd
          and @reallyUnsafePtrEquality#@. These techniques rely on assumptions\xd
          about the behaviour of the GHC runtime system and, although they've been\xd
          tested and should be safe under normal conditions, are slightly\xd
          dangerous. Caveat emptor. In particular, these techniques are\xd
          incompatible with HPC code coverage reports.\xd
      .\xd
        * @sse41@, default /OFF/. If this flag is enabled, we use some SSE 4.1\xd
          instructions (see <http://en.wikipedia.org/wiki/SSE4>, first available on\xd
          Intel Core 2 processors) to speed up cache-line searches for cuckoo\xd
          hashing.\xd
      .\xd
        * @bounds-checking@, default /OFF/. If this flag is enabled, array accesses\xd
          are bounds-checked.\xd
      .\xd
        * @debug@, default /OFF/. If turned on, we'll rudely spew debug output to\xd
          stdout.\xd
      .\xd
        * @portable@, default /OFF/. If this flag is enabled, we use only pure\xd
          Haskell code and try not to use unportable GHC extensions. Turning this\xd
          flag on forces @unsafe-tricks@ and @sse41@ /OFF/.\xd
      .\xd
      This package has been tested with GHC 7.0.3, on:\xd
      .\xd
        * a MacBook Pro running Snow Leopard with an Intel Core i5 processor,\xd
          running GHC 7.0.3 in 64-bit mode.\xd
      .\xd
        * an Arch Linux desktop with an AMD Phenom II X4 940 quad-core processor.\xd
      .\xd
        * a MacBook Pro running Snow Leopard with an Intel Core 2 Duo processor,\xd
          running GHC 6.12.3 in 32-bit mode.\xd
      .\xd
      Please send bug reports to\xd
      <https://github.com/gregorycollins/hashtables/issues>.\xd
    \xd
    Extra-Source-Files:\xd
      README.md,\xd
      haddock.sh,\xd
      benchmark/hashtable-benchmark.cabal,\xd
      benchmark/LICENSE,\xd
      benchmark/src/Criterion/Collection/Internal/Types.hs,\xd
      benchmark/src/Criterion/Collection/Chart.hs,\xd
      benchmark/src/Criterion/Collection/Main.hs,\xd
      benchmark/src/Criterion/Collection/Types.hs,\xd
      benchmark/src/Criterion/Collection/Sample.hs,\xd
      benchmark/src/Main.hs,\xd
      benchmark/src/Data/Vector/Algorithms/Shuffle.hs,\xd
      benchmark/src/Data/Benchmarks/UnorderedCollections/Distributions.hs,\xd
      benchmark/src/Data/Benchmarks/UnorderedCollections/Types.hs,\xd
      test/compute-overhead/ComputeOverhead.hs,\xd
      test/hashtables-test.cabal,\xd
      test/runTestsAndCoverage.sh,\xd
      test/runTestsNoCoverage.sh,\xd
      test/suite/Data/HashTable/Test/Common.hs,\xd
      test/suite/TestSuite.hs\xd
    \xd
    \xd
    ------------------------------------------------------------------------------\xd
    Flag unsafe-tricks\xd
      Description: turn on unsafe GHC tricks\xd
      Default:   True\xd
    \xd
    Flag bounds-checking\xd
      Description: if on, use bounds-checking array accesses\xd
      Default: False\xd
    \xd
    Flag debug\xd
      Description: if on, spew debugging output to stdout\xd
      Default: False\xd
    \xd
    Flag sse41\xd
      Description: if on, use SSE 4.1 extensions to search cache lines very\xd
                   efficiently. The portable flag forces this off.\xd
      Default: False\xd
    \xd
    Flag portable\xd
      Description: if on, use only pure Haskell code and no GHC extensions.\xd
      Default: False\xd
    \xd
    \xd
    Library\xd
      hs-source-dirs:    src\xd
    \xd
      if !flag(portable)\xd
        C-sources:       cbits/cfuncs.c\xd
    \xd
      Exposed-modules:   Data.HashTable.Class,\xd
                         Data.HashTable.IO,\xd
                         Data.HashTable.ST.Basic,\xd
                         Data.HashTable.ST.Cuckoo,\xd
                         Data.HashTable.ST.Linear\xd
    \xd
      Other-modules:     Data.HashTable.Internal.Array,\xd
                         Data.HashTable.Internal.IntArray,\xd
                         Data.HashTable.Internal.CacheLine,\xd
                         Data.HashTable.Internal.CheapPseudoRandomBitStream,\xd
                         Data.HashTable.Internal.UnsafeTricks,\xd
                         Data.HashTable.Internal.Utils,\xd
                         Data.HashTable.Internal.Linear.Bucket\xd
    \xd
      Build-depends:     base      >= 4.4 && <4.7,\xd
                         hashable  >= 1.1 && <2,\xd
                         primitive < 0.7,\xd
                         vector    >= 0.7 && < 0.11\xd
    \xd
      if flag(portable)\xd
        cpp-options: -DNO_C_SEARCH -DPORTABLE\xd
    \xd
      if !flag(portable) && flag(unsafe-tricks) && impl(ghc)\xd
        build-depends: ghc-prim\xd
        -- invalid syntax\xd
        -- cpp-options = -DUNSAFETRICKS\xd
    \xd
      if flag(debug)\xd
        cpp-options: -DDEBUG\xd
    \xd
      if flag(bounds-checking)\xd
        cpp-options: -DBOUNDS_CHECKING\xd
    \xd
      if flag(sse41) && !flag(portable)\xd
        cc-options: -DUSE_SSE_4_1 -msse4.1\xd
        cpp-options: -DUSE_SSE_4_1\xd
    \xd
      ghc-prof-options: -prof -auto-all\xd
    \xd
      if impl(ghc >= 6.12.0)\xd
        ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2\xd
                     -fno-warn-unused-do-bind\xd
      else\xd
        ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2\xd
    \xd
    " )
, L
    ( Position 33 66 ) EOF
]
