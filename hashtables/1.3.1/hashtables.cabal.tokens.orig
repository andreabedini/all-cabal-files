[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "Cabal-Version" )
, L
    ( Position 1 14 ) Colon
, L
    ( Position 1 16 )
    ( TokSym "2.2" )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "Name" )
, L
    ( Position 2 5 ) Colon
, L
    ( Position 2 22 )
    ( TokSym "hashtables" )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "Version" )
, L
    ( Position 3 8 ) Colon
, L
    ( Position 3 22 )
    ( TokSym "1.3.1" )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "Synopsis" )
, L
    ( Position 4 9 ) Colon
, L
    ( Position 4 22 )
    ( TokSym "Mutable" )
, L
    ( Position 4 30 )
    ( TokSym "hash" )
, L
    ( Position 4 35 )
    ( TokSym "tables" )
, L
    ( Position 4 42 )
    ( TokSym "in" )
, L
    ( Position 4 45 )
    ( TokSym "the" )
, L
    ( Position 4 49 )
    ( TokSym "ST" )
, L
    ( Position 4 52 )
    ( TokSym "monad" )
, L
    ( Position 5 1 )
    ( Indent 0 )
, L
    ( Position 5 1 )
    ( TokSym "Homepage" )
, L
    ( Position 5 9 ) Colon
, L
    ( Position 5 22 )
    ( TokSym "http" )
, L
    ( Position 5 26 ) Colon
, L
    ( Position 5 27 )
    ( TokOther "//" )
, L
    ( Position 5 29 )
    ( TokSym "github.com" )
, L
    ( Position 5 39 )
    ( TokOther "/" )
, L
    ( Position 5 40 )
    ( TokSym "gregorycollins" )
, L
    ( Position 5 54 )
    ( TokOther "/" )
, L
    ( Position 5 55 )
    ( TokSym "hashtables" )
, L
    ( Position 6 1 )
    ( Indent 0 )
, L
    ( Position 6 1 )
    ( TokSym "License" )
, L
    ( Position 6 8 ) Colon
, L
    ( Position 6 22 )
    ( TokSym "BSD-3-Clause" )
, L
    ( Position 7 1 )
    ( Indent 0 )
, L
    ( Position 7 1 )
    ( TokSym "License-file" )
, L
    ( Position 7 13 ) Colon
, L
    ( Position 7 22 )
    ( TokSym "LICENSE" )
, L
    ( Position 8 1 )
    ( Indent 0 )
, L
    ( Position 8 1 )
    ( TokSym "Author" )
, L
    ( Position 8 7 ) Colon
, L
    ( Position 8 22 )
    ( TokSym "Gregory" )
, L
    ( Position 8 30 )
    ( TokSym "Collins" )
, L
    ( Position 9 1 )
    ( Indent 0 )
, L
    ( Position 9 1 )
    ( TokSym "Maintainer" )
, L
    ( Position 9 11 ) Colon
, L
    ( Position 9 22 )
    ( TokSym "greg" )
, L
    ( Position 9 26 )
    ( TokOther "@" )
, L
    ( Position 9 27 )
    ( TokSym "gregorycollins.net" )
, L
    ( Position 9 45 )
    ( TokOther "," )
, L
    ( Position 9 47 )
    ( TokSym "mgoremeier" )
, L
    ( Position 9 57 )
    ( TokOther "@" )
, L
    ( Position 9 58 )
    ( TokSym "gmail.com" )
, L
    ( Position 9 67 )
    ( TokOther "," )
, L
    ( Position 9 69 )
    ( TokSym "erikd" )
, L
    ( Position 9 74 )
    ( TokOther "@" )
, L
    ( Position 9 75 )
    ( TokSym "mega-nerd.com" )
, L
    ( Position 10 1 )
    ( Indent 0 )
, L
    ( Position 10 1 )
    ( TokSym "Copyright" )
, L
    ( Position 10 10 ) Colon
, L
    ( Position 10 22 )
    ( TokOther "(" )
, L
    ( Position 10 23 )
    ( TokSym "c" )
, L
    ( Position 10 24 )
    ( TokOther ")" )
, L
    ( Position 10 26 )
    ( TokSym "2011-2014" )
, L
    ( Position 10 35 )
    ( TokOther "," )
, L
    ( Position 10 37 )
    ( TokSym "Google" )
, L
    ( Position 10 43 )
    ( TokOther "," )
, L
    ( Position 10 45 )
    ( TokSym "Inc." )
, L
    ( Position 10 49 )
    ( TokOther "," )
, L
    ( Position 10 51 )
    ( TokSym "2016-present" )
, L
    ( Position 10 64 )
    ( TokSym "contributors" )
, L
    ( Position 11 1 )
    ( Indent 0 )
, L
    ( Position 11 1 )
    ( TokSym "Category" )
, L
    ( Position 11 9 ) Colon
, L
    ( Position 11 22 )
    ( TokSym "Data" )
, L
    ( Position 12 1 )
    ( Indent 0 )
, L
    ( Position 12 1 )
    ( TokSym "Build-type" )
, L
    ( Position 12 11 ) Colon
, L
    ( Position 12 22 )
    ( TokSym "Simple" )
, L
    ( Position 15 1 )
    ( Indent 0 )
, L
    ( Position 15 1 )
    ( TokSym "tested-with" )
, L
    ( Position 15 12 ) Colon
, L
    ( Position 16 1 )
    ( Indent 2 )
, L
    ( Position 16 3 )
    ( TokSym "GHC" )
, L
    ( Position 16 7 )
    ( TokOther "==" )
, L
    ( Position 16 10 )
    ( TokSym "7.8.4" )
, L
    ( Position 17 1 )
    ( Indent 2 )
, L
    ( Position 17 3 )
    ( TokSym "GHC" )
, L
    ( Position 17 7 )
    ( TokOther "==" )
, L
    ( Position 17 10 )
    ( TokSym "7.10.3" )
, L
    ( Position 18 1 )
    ( Indent 2 )
, L
    ( Position 18 3 )
    ( TokSym "GHC" )
, L
    ( Position 18 7 )
    ( TokOther "==" )
, L
    ( Position 18 10 )
    ( TokSym "8.0.2" )
, L
    ( Position 19 1 )
    ( Indent 2 )
, L
    ( Position 19 3 )
    ( TokSym "GHC" )
, L
    ( Position 19 7 )
    ( TokOther "==" )
, L
    ( Position 19 10 )
    ( TokSym "8.2.2" )
, L
    ( Position 20 1 )
    ( Indent 2 )
, L
    ( Position 20 3 )
    ( TokSym "GHC" )
, L
    ( Position 20 7 )
    ( TokOther "==" )
, L
    ( Position 20 10 )
    ( TokSym "8.4.4" )
, L
    ( Position 21 1 )
    ( Indent 2 )
, L
    ( Position 21 3 )
    ( TokSym "GHC" )
, L
    ( Position 21 7 )
    ( TokOther "==" )
, L
    ( Position 21 10 )
    ( TokSym "8.6.5" )
, L
    ( Position 22 1 )
    ( Indent 2 )
, L
    ( Position 22 3 )
    ( TokSym "GHC" )
, L
    ( Position 22 7 )
    ( TokOther "==" )
, L
    ( Position 22 10 )
    ( TokSym "8.8.4" )
, L
    ( Position 23 1 )
    ( Indent 2 )
, L
    ( Position 23 3 )
    ( TokSym "GHC" )
, L
    ( Position 23 7 )
    ( TokOther "==" )
, L
    ( Position 23 10 )
    ( TokSym "8.10.7" )
, L
    ( Position 24 1 )
    ( Indent 2 )
, L
    ( Position 24 3 )
    ( TokSym "GHC" )
, L
    ( Position 24 7 )
    ( TokOther "==" )
, L
    ( Position 24 10 )
    ( TokSym "9.0.1" )
, L
    ( Position 25 1 )
    ( Indent 2 )
, L
    ( Position 25 3 )
    ( TokSym "GHC" )
, L
    ( Position 25 7 )
    ( TokOther "==" )
, L
    ( Position 25 10 )
    ( TokSym "9.2.4" )
, L
    ( Position 26 1 )
    ( Indent 2 )
, L
    ( Position 26 3 )
    ( TokSym "GHC" )
, L
    ( Position 26 7 )
    ( TokOther "==" )
, L
    ( Position 26 10 )
    ( TokSym "9.4.2" )
, L
    ( Position 28 1 )
    ( Indent 0 )
, L
    ( Position 28 1 )
    ( TokSym "Description" )
, L
    ( Position 28 12 ) Colon
, L
    ( Position 29 1 )
    ( Indent 2 )
, L
    ( Position 29 3 )
    ( TokSym "This" )
, L
    ( Position 29 8 )
    ( TokSym "package" )
, L
    ( Position 29 16 )
    ( TokSym "provides" )
, L
    ( Position 29 25 )
    ( TokSym "a" )
, L
    ( Position 29 27 )
    ( TokSym "couple" )
, L
    ( Position 29 34 )
    ( TokSym "of" )
, L
    ( Position 29 37 )
    ( TokSym "different" )
, L
    ( Position 29 47 )
    ( TokSym "implementations" )
, L
    ( Position 29 63 )
    ( TokSym "of" )
, L
    ( Position 29 66 )
    ( TokSym "mutable" )
, L
    ( Position 29 74 )
    ( TokSym "hash" )
, L
    ( Position 30 1 )
    ( Indent 2 )
, L
    ( Position 30 3 )
    ( TokSym "tables" )
, L
    ( Position 30 10 )
    ( TokSym "in" )
, L
    ( Position 30 13 )
    ( TokSym "the" )
, L
    ( Position 30 17 )
    ( TokSym "ST" )
, L
    ( Position 30 20 )
    ( TokSym "monad" )
, L
    ( Position 30 25 )
    ( TokOther "," )
, L
    ( Position 30 27 )
    ( TokSym "as" )
, L
    ( Position 30 30 )
    ( TokSym "well" )
, L
    ( Position 30 35 )
    ( TokSym "as" )
, L
    ( Position 30 38 )
    ( TokSym "a" )
, L
    ( Position 30 40 )
    ( TokSym "typeclass" )
, L
    ( Position 30 50 )
    ( TokSym "abstracting" )
, L
    ( Position 30 62 )
    ( TokSym "their" )
, L
    ( Position 30 68 )
    ( TokSym "common" )
, L
    ( Position 31 1 )
    ( Indent 2 )
, L
    ( Position 31 3 )
    ( TokSym "operations" )
, L
    ( Position 31 13 )
    ( TokOther "," )
, L
    ( Position 31 15 )
    ( TokSym "and" )
, L
    ( Position 31 19 )
    ( TokSym "a" )
, L
    ( Position 31 21 )
    ( TokSym "set" )
, L
    ( Position 31 25 )
    ( TokSym "of" )
, L
    ( Position 31 28 )
    ( TokSym "wrappers" )
, L
    ( Position 31 37 )
    ( TokSym "to" )
, L
    ( Position 31 40 )
    ( TokSym "use" )
, L
    ( Position 31 44 )
    ( TokSym "the" )
, L
    ( Position 31 48 )
    ( TokSym "hash" )
, L
    ( Position 31 53 )
    ( TokSym "tables" )
, L
    ( Position 31 60 )
    ( TokSym "in" )
, L
    ( Position 31 63 )
    ( TokSym "the" )
, L
    ( Position 31 67 )
    ( TokSym "IO" )
, L
    ( Position 31 70 )
    ( TokSym "monad." )
, L
    ( Position 32 1 )
    ( Indent 2 )
, L
    ( Position 32 3 )
    ( TokSym "." )
, L
    ( Position 33 1 )
    ( Indent 2 )
, L
    ( Position 33 3 )
    ( TokOther "/" )
, L
    ( Position 33 4 )
    ( TokSym "QUICK" )
, L
    ( Position 33 10 )
    ( TokSym "START" )
, L
    ( Position 33 15 )
    ( TokOther "/" )
, L
    ( Position 33 16 ) Colon
, L
    ( Position 33 18 )
    ( TokSym "documentation" )
, L
    ( Position 33 32 )
    ( TokSym "for" )
, L
    ( Position 33 36 )
    ( TokSym "the" )
, L
    ( Position 33 40 )
    ( TokSym "hash" )
, L
    ( Position 33 45 )
    ( TokSym "table" )
, L
    ( Position 33 51 )
    ( TokSym "operations" )
, L
    ( Position 33 62 )
    ( TokSym "is" )
, L
    ( Position 33 65 )
    ( TokSym "provided" )
, L
    ( Position 33 74 )
    ( TokSym "in" )
, L
    ( Position 33 77 )
    ( TokSym "the" )
, L
    ( Position 34 1 )
    ( Indent 2 )
, L
    ( Position 34 3 )
    ( TokStr "Data.HashTable.Class" )
, L
    ( Position 34 26 )
    ( TokSym "module" )
, L
    ( Position 34 32 )
    ( TokOther "," )
, L
    ( Position 34 34 )
    ( TokSym "and" )
, L
    ( Position 34 38 )
    ( TokSym "the" )
, L
    ( Position 34 42 )
    ( TokSym "IO" )
, L
    ( Position 34 45 )
    ( TokSym "wrappers" )
, L
    ( Position 34 54 )
    ( TokOther "(" )
, L
    ( Position 34 55 )
    ( TokSym "which" )
, L
    ( Position 34 61 )
    ( TokSym "most" )
, L
    ( Position 34 66 )
    ( TokSym "users" )
, L
    ( Position 34 72 )
    ( TokSym "will" )
, L
    ( Position 35 1 )
    ( Indent 2 )
, L
    ( Position 35 3 )
    ( TokSym "probably" )
, L
    ( Position 35 12 )
    ( TokSym "prefer" )
, L
    ( Position 35 18 )
    ( TokOther ")" )
, L
    ( Position 35 20 )
    ( TokSym "are" )
, L
    ( Position 35 24 )
    ( TokSym "located" )
, L
    ( Position 35 32 )
    ( TokSym "in" )
, L
    ( Position 35 35 )
    ( TokSym "the" )
, L
    ( Position 35 39 )
    ( TokStr "Data.HashTable.IO" )
, L
    ( Position 35 59 )
    ( TokSym "module." )
, L
    ( Position 36 1 )
    ( Indent 2 )
, L
    ( Position 36 3 )
    ( TokSym "." )
, L
    ( Position 37 1 )
    ( Indent 2 )
, L
    ( Position 37 3 )
    ( TokSym "This" )
, L
    ( Position 37 8 )
    ( TokSym "package" )
, L
    ( Position 37 16 )
    ( TokSym "currently" )
, L
    ( Position 37 26 )
    ( TokSym "contains" )
, L
    ( Position 37 35 )
    ( TokSym "three" )
, L
    ( Position 37 41 )
    ( TokSym "hash" )
, L
    ( Position 37 46 )
    ( TokSym "table" )
, L
    ( Position 37 52 )
    ( TokSym "implementations" )
, L
    ( Position 37 67 ) Colon
, L
    ( Position 38 1 )
    ( Indent 2 )
, L
    ( Position 38 3 )
    ( TokSym "." )
, L
    ( Position 39 1 )
    ( Indent 4 )
, L
    ( Position 39 5 )
    ( TokSym "1." )
, L
    ( Position 39 8 )
    ( TokStr "Data.HashTable.ST.Cuckoo" )
, L
    ( Position 39 35 )
    ( TokSym "contains" )
, L
    ( Position 39 44 )
    ( TokSym "an" )
, L
    ( Position 39 47 )
    ( TokSym "implementation" )
, L
    ( Position 39 62 )
    ( TokSym "of" )
, L
    ( Position 39 65 )
    ( TokOther "\" )
, L
    ( Position 39 73 )
    ( LexicalError "
           hashing\" as introduced by Pagh and Rodler in 2001 (see
           <http://en.wikipedia.org/wiki/Cuckoo_hashing>). Cuckoo hashing has
           worst-case /O(1)/ lookups and can reach a high \"load factor\", in which
           the table can perform acceptably well even when approaching 90% full.
           Randomized testing shows this implementation of cuckoo hashing to be
           slightly faster on insert and slightly slower on lookup than
           "Data.HashTable.ST.Basic", while being more space efficient by about a
           half-word per key-value mapping. Cuckoo hashing, like the basic hash
           table implementation using linear probing, can suffer from long delays
           when the table is resized.
      .
        2. "Data.HashTable.ST.Basic" contains a basic open-addressing hash table
           using linear probing as the collision strategy. On a pure speed basis it
           should currently be the fastest available Haskell hash table
           implementation for lookups, although it has a higher memory overhead
           than the other tables and can suffer from long delays when the table is
           resized because all of the elements in the table need to be rehashed.
      .
        3. "Data.HashTable.ST.Linear" contains a linear hash table (see
           <http://en.wikipedia.org/wiki/Linear_hashing>), which trades some insert
           and lookup performance for higher space efficiency and much shorter
           delays when expanding the table. In most cases, benchmarks show this
           table to be currently slightly faster than @Data.HashTable@ from the
           Haskell base library.
      .
      It is recommended to create a concrete type alias in your code when using this
      package, i.e.:
      .
      > import qualified Data.HashTable.IO as H
      >
      > type HashTable k v = H.BasicHashTable k v
      >
      > foo :: IO (HashTable Int Int)
      > foo = do
      >     ht <- H.new
      >     H.insert ht 1 1
      >     return ht
      .
      Firstly, this makes it easy to switch to a different hash table implementation,
      and secondly, using a concrete type rather than leaving your functions abstract
      in the HashTable class should allow GHC to optimize away the typeclass
      dictionaries.
      .
      This package accepts a couple of different cabal flags:
      .
        * @unsafe-tricks@, default /ON/. If this flag is enabled, we use some
          unsafe GHC-specific tricks to save indirections (namely @unsafeCoerce#@
          and @reallyUnsafePtrEquality#@. These techniques rely on assumptions
          about the behaviour of the GHC runtime system and, although they've been
          tested and should be safe under normal conditions, are slightly
          dangerous. Caveat emptor. In particular, these techniques are
          incompatible with HPC code coverage reports.
      .
        * @sse42@, default /OFF/. If this flag is enabled, we use some SSE 4.2
          instructions (see <http://en.wikipedia.org/wiki/SSE4>, first available on
          Intel Core 2 processors) to speed up cache-line searches for cuckoo
          hashing.
      .
        * @bounds-checking@, default /OFF/. If this flag is enabled, array accesses
          are bounds-checked.
      .
        * @debug@, default /OFF/. If turned on, we'll rudely spew debug output to
          stdout.
      .
        * @portable@, default /OFF/. If this flag is enabled, we use only pure
          Haskell code and try not to use unportable GHC extensions. Turning this
          flag on forces @unsafe-tricks@ and @sse42@ /OFF/.
      .
      Please send bug reports to
      <https://github.com/gregorycollins/hashtables/issues>.

    Extra-Source-Files:
      README.md,
      cabal.project,
      haddock.sh,
      benchmark/hashtable-benchmark.cabal,
      benchmark/LICENSE,
      benchmark/src/Criterion/Collection/Internal/Types.hs,
      benchmark/src/Criterion/Collection/Chart.hs,
      benchmark/src/Criterion/Collection/Main.hs,
      benchmark/src/Criterion/Collection/Types.hs,
      benchmark/src/Criterion/Collection/Sample.hs,
      benchmark/src/Main.hs,
      benchmark/src/Data/Vector/Algorithms/Shuffle.hs,
      benchmark/src/Data/Benchmarks/UnorderedCollections/Distributions.hs,
      benchmark/src/Data/Benchmarks/UnorderedCollections/Types.hs,
      cbits/Makefile,
      cbits/check.c,
      cbits/defs.h,
      cbits/sse-42-check.c,
      changelog.md,
      test/compute-overhead/ComputeOverhead.hs,
      test/hashtables-test.cabal,
      test/suite/Data/HashTable/Test/Common.hs,
      test/suite/TestSuite.hs


    ------------------------------------------------------------------------------
    Flag unsafe-tricks
      Description: turn on unsafe GHC tricks
      Default:   True

    Flag bounds-checking
      Description: if on, use bounds-checking array accesses
      Default: False

    Flag debug
      Description: if on, spew debugging output to stdout
      Default: False
      Manual: True

    Flag detailed-profiling
      Description: add detailed profiling information to profiled build-depends
      Default: False
      Manual: True

    Flag sse42
      Description: if on, use SSE 4.2 extensions to search cache lines very
                   efficiently. The portable flag forces this off.
      Default: False

    Flag portable
      Description: if on, use only pure Haskell code and no GHC extensions.
      Default: False


    Library
      Default-Language: Haskell2010
      hs-source-dirs:    src

      if flag(sse42) && !flag(portable)
        cc-options:  -DUSE_SSE_4_2 -msse4.2
        cpp-options: -DUSE_SSE_4_2
        C-sources:   cbits/sse-42.c

      if !flag(portable) && !flag(sse42)
        C-sources:       cbits/default.c

      if !flag(portable)
        C-sources:       cbits/common.c

      Exposed-modules:   Data.HashTable.Class,
                         Data.HashTable.IO,
                         Data.HashTable.ST.Basic,
                         Data.HashTable.ST.Cuckoo,
                         Data.HashTable.ST.Linear

      Other-modules:     Data.HashTable.Internal.Array,
                         Data.HashTable.Internal.IntArray,
                         Data.HashTable.Internal.CacheLine,
                         Data.HashTable.Internal.CheapPseudoRandomBitStream,
                         Data.HashTable.Internal.UnsafeTricks,
                         Data.HashTable.Internal.Utils,
                         Data.HashTable.Internal.Linear.Bucket

      Build-depends:     base      >= 4.7 && <5,
                         hashable  >= 1.4 && < 1.5,
                         primitive,
                         vector    >= 0.7 && <0.14

      if flag(portable)
        cpp-options: -DNO_C_SEARCH -DPORTABLE

      if !flag(portable) && flag(unsafe-tricks) && impl(ghc)
        build-depends: ghc-prim
        cpp-options: -DUNSAFETRICKS

      if flag(debug)
        cpp-options: -DDEBUG

      if flag(bounds-checking)
        cpp-options: -DBOUNDS_CHECKING

      if flag(detailed-profiling)
        if impl(ghc >= 7.4.1)
         ghc-prof-options: -fprof-auto
        if impl(ghc < 7.4.1)
         ghc-prof-options: -auto-all

      if impl(ghc >= 6.12.0)
        ghc-options: -Wall -fwarn-tabs -funbox-strict-fields
                     -fno-warn-unused-do-bind
      else
        ghc-options: -Wall -fwarn-tabs -funbox-strict-fields

    test-suite testsuite
      Default-Language: Haskell2010
      hs-source-dirs:    src test/suite
      main-is:           TestSuite.hs
      type: exitcode-stdio-1.0

      other-modules:
            Data.HashTable.Class
            Data.HashTable.IO
            Data.HashTable.Internal.Array
            Data.HashTable.Internal.CacheLine
            Data.HashTable.Internal.CheapPseudoRandomBitStream
            Data.HashTable.Internal.IntArray
            Data.HashTable.Internal.Linear.Bucket
            Data.HashTable.Internal.UnsafeTricks
            Data.HashTable.Internal.Utils
            Data.HashTable.ST.Basic
            Data.HashTable.ST.Cuckoo
            Data.HashTable.ST.Linear
            Data.HashTable.Test.Common

      if flag(sse42) && !flag(portable)
        cc-options:  -DUSE_SSE_4_2 -msse4.2
        cpp-options: -DUSE_SSE_4_2
        C-sources:   cbits/sse-42.c

      if !flag(portable) && !flag(sse42)
        C-sources:       cbits/default.c

      if !flag(portable)
        C-sources:       cbits/common.c

      if flag(detailed-profiling)
        ghc-prof-options:  -auto-all

      if flag(portable)
        cpp-options: -DNO_C_SEARCH -DPORTABLE

      if !flag(portable) && flag(unsafe-tricks) && impl(ghc)
        cpp-options: -DUNSAFETRICKS
        build-depends: ghc-prim

      if flag(debug)
        cpp-options: -DDEBUG

      if flag(bounds-checking)
        cpp-options: -DBOUNDS_CHECKING

      Build-depends:     base                       >= 4     && <5,
                         hashable                   >= 1.4 && < 1.5,
                         mwc-random                 >= 0.8   && <0.16,
                         primitive,
                         QuickCheck                 >= 2.3.0.2,
                         HUnit                      >= 1.2   && <2,
                         test-framework             >= 0.3.1 && <0.9,
                         test-framework-quickcheck2 >= 0.2.6 && <0.4,
                         test-framework-hunit       >= 0.2.6 && <3,
                         vector                     >= 0.7

      cpp-options: -DTESTSUITE

      if impl(ghc >= 7)
        ghc-options: -rtsopts

      if impl(ghc >= 6.12.0)
        ghc-options: -Wall -fwarn-tabs -funbox-strict-fields
                     -fno-warn-unused-do-bind -threaded
      else
        ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -threaded



    source-repository head
      type:     git
      location: https://github.com/gregorycollins/hashtables.git
    " )
, L
    ( Position 39 66 ) EOF
]
