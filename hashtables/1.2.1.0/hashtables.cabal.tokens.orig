[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "Name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 22 )
    ( TokSym "hashtables" )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "Version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 22 )
    ( TokSym "1.2.1.0" )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "x-revision" )
, L
    ( Position 3 11 ) Colon
, L
    ( Position 3 13 )
    ( TokSym "1" )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "Synopsis" )
, L
    ( Position 4 9 ) Colon
, L
    ( Position 4 22 )
    ( TokSym "Mutable" )
, L
    ( Position 4 30 )
    ( TokSym "hash" )
, L
    ( Position 4 35 )
    ( TokSym "tables" )
, L
    ( Position 4 42 )
    ( TokSym "in" )
, L
    ( Position 4 45 )
    ( TokSym "the" )
, L
    ( Position 4 49 )
    ( TokSym "ST" )
, L
    ( Position 4 52 )
    ( TokSym "monad" )
, L
    ( Position 5 1 )
    ( Indent 0 )
, L
    ( Position 5 1 )
    ( TokSym "Homepage" )
, L
    ( Position 5 9 ) Colon
, L
    ( Position 5 22 )
    ( TokSym "http" )
, L
    ( Position 5 26 ) Colon
, L
    ( Position 5 27 )
    ( TokOther "//" )
, L
    ( Position 5 29 )
    ( TokSym "github.com" )
, L
    ( Position 5 39 )
    ( TokOther "/" )
, L
    ( Position 5 40 )
    ( TokSym "gregorycollins" )
, L
    ( Position 5 54 )
    ( TokOther "/" )
, L
    ( Position 5 55 )
    ( TokSym "hashtables" )
, L
    ( Position 6 1 )
    ( Indent 0 )
, L
    ( Position 6 1 )
    ( TokSym "License" )
, L
    ( Position 6 8 ) Colon
, L
    ( Position 6 22 )
    ( TokSym "BSD3" )
, L
    ( Position 7 1 )
    ( Indent 0 )
, L
    ( Position 7 1 )
    ( TokSym "License-file" )
, L
    ( Position 7 13 ) Colon
, L
    ( Position 7 22 )
    ( TokSym "LICENSE" )
, L
    ( Position 8 1 )
    ( Indent 0 )
, L
    ( Position 8 1 )
    ( TokSym "Author" )
, L
    ( Position 8 7 ) Colon
, L
    ( Position 8 22 )
    ( TokSym "Gregory" )
, L
    ( Position 8 30 )
    ( TokSym "Collins" )
, L
    ( Position 9 1 )
    ( Indent 0 )
, L
    ( Position 9 1 )
    ( TokSym "Maintainer" )
, L
    ( Position 9 11 ) Colon
, L
    ( Position 9 22 )
    ( TokSym "greg" )
, L
    ( Position 9 26 )
    ( TokOther "@" )
, L
    ( Position 9 27 )
    ( TokSym "gregorycollins.net" )
, L
    ( Position 10 1 )
    ( Indent 0 )
, L
    ( Position 10 1 )
    ( TokSym "Copyright" )
, L
    ( Position 10 10 ) Colon
, L
    ( Position 10 22 )
    ( TokOther "(" )
, L
    ( Position 10 23 )
    ( TokSym "c" )
, L
    ( Position 10 24 )
    ( TokOther ")" )
, L
    ( Position 10 26 )
    ( TokSym "2011-2014" )
, L
    ( Position 10 35 )
    ( TokOther "," )
, L
    ( Position 10 37 )
    ( TokSym "Google" )
, L
    ( Position 10 43 )
    ( TokOther "," )
, L
    ( Position 10 45 )
    ( TokSym "Inc." )
, L
    ( Position 11 1 )
    ( Indent 0 )
, L
    ( Position 11 1 )
    ( TokSym "Category" )
, L
    ( Position 11 9 ) Colon
, L
    ( Position 11 22 )
    ( TokSym "Data" )
, L
    ( Position 12 1 )
    ( Indent 0 )
, L
    ( Position 12 1 )
    ( TokSym "Build-type" )
, L
    ( Position 12 11 ) Colon
, L
    ( Position 12 22 )
    ( TokSym "Simple" )
, L
    ( Position 13 1 )
    ( Indent 0 )
, L
    ( Position 13 1 )
    ( TokSym "Cabal-version" )
, L
    ( Position 13 14 ) Colon
, L
    ( Position 13 22 )
    ( TokOther ">=" )
, L
    ( Position 13 25 )
    ( TokSym "1.8" )
, L
    ( Position 15 1 )
    ( Indent 0 )
, L
    ( Position 15 1 )
    ( TokSym "Description" )
, L
    ( Position 15 12 ) Colon
, L
    ( Position 16 1 )
    ( Indent 2 )
, L
    ( Position 16 3 )
    ( TokSym "This" )
, L
    ( Position 16 8 )
    ( TokSym "package" )
, L
    ( Position 16 16 )
    ( TokSym "provides" )
, L
    ( Position 16 25 )
    ( TokSym "a" )
, L
    ( Position 16 27 )
    ( TokSym "couple" )
, L
    ( Position 16 34 )
    ( TokSym "of" )
, L
    ( Position 16 37 )
    ( TokSym "different" )
, L
    ( Position 16 47 )
    ( TokSym "implementations" )
, L
    ( Position 16 63 )
    ( TokSym "of" )
, L
    ( Position 16 66 )
    ( TokSym "mutable" )
, L
    ( Position 16 74 )
    ( TokSym "hash" )
, L
    ( Position 17 1 )
    ( Indent 2 )
, L
    ( Position 17 3 )
    ( TokSym "tables" )
, L
    ( Position 17 10 )
    ( TokSym "in" )
, L
    ( Position 17 13 )
    ( TokSym "the" )
, L
    ( Position 17 17 )
    ( TokSym "ST" )
, L
    ( Position 17 20 )
    ( TokSym "monad" )
, L
    ( Position 17 25 )
    ( TokOther "," )
, L
    ( Position 17 27 )
    ( TokSym "as" )
, L
    ( Position 17 30 )
    ( TokSym "well" )
, L
    ( Position 17 35 )
    ( TokSym "as" )
, L
    ( Position 17 38 )
    ( TokSym "a" )
, L
    ( Position 17 40 )
    ( TokSym "typeclass" )
, L
    ( Position 17 50 )
    ( TokSym "abstracting" )
, L
    ( Position 17 62 )
    ( TokSym "their" )
, L
    ( Position 17 68 )
    ( TokSym "common" )
, L
    ( Position 18 1 )
    ( Indent 2 )
, L
    ( Position 18 3 )
    ( TokSym "operations" )
, L
    ( Position 18 13 )
    ( TokOther "," )
, L
    ( Position 18 15 )
    ( TokSym "and" )
, L
    ( Position 18 19 )
    ( TokSym "a" )
, L
    ( Position 18 21 )
    ( TokSym "set" )
, L
    ( Position 18 25 )
    ( TokSym "of" )
, L
    ( Position 18 28 )
    ( TokSym "wrappers" )
, L
    ( Position 18 37 )
    ( TokSym "to" )
, L
    ( Position 18 40 )
    ( TokSym "use" )
, L
    ( Position 18 44 )
    ( TokSym "the" )
, L
    ( Position 18 48 )
    ( TokSym "hash" )
, L
    ( Position 18 53 )
    ( TokSym "tables" )
, L
    ( Position 18 60 )
    ( TokSym "in" )
, L
    ( Position 18 63 )
    ( TokSym "the" )
, L
    ( Position 18 67 )
    ( TokSym "IO" )
, L
    ( Position 18 70 )
    ( TokSym "monad." )
, L
    ( Position 19 1 )
    ( Indent 2 )
, L
    ( Position 19 3 )
    ( TokSym "." )
, L
    ( Position 20 1 )
    ( Indent 2 )
, L
    ( Position 20 3 )
    ( TokOther "/" )
, L
    ( Position 20 4 )
    ( TokSym "QUICK" )
, L
    ( Position 20 10 )
    ( TokSym "START" )
, L
    ( Position 20 15 )
    ( TokOther "/" )
, L
    ( Position 20 16 ) Colon
, L
    ( Position 20 18 )
    ( TokSym "documentation" )
, L
    ( Position 20 32 )
    ( TokSym "for" )
, L
    ( Position 20 36 )
    ( TokSym "the" )
, L
    ( Position 20 40 )
    ( TokSym "hash" )
, L
    ( Position 20 45 )
    ( TokSym "table" )
, L
    ( Position 20 51 )
    ( TokSym "operations" )
, L
    ( Position 20 62 )
    ( TokSym "is" )
, L
    ( Position 20 65 )
    ( TokSym "provided" )
, L
    ( Position 20 74 )
    ( TokSym "in" )
, L
    ( Position 20 77 )
    ( TokSym "the" )
, L
    ( Position 21 1 )
    ( Indent 2 )
, L
    ( Position 21 3 )
    ( TokStr "Data.HashTable.Class" )
, L
    ( Position 21 26 )
    ( TokSym "module" )
, L
    ( Position 21 32 )
    ( TokOther "," )
, L
    ( Position 21 34 )
    ( TokSym "and" )
, L
    ( Position 21 38 )
    ( TokSym "the" )
, L
    ( Position 21 42 )
    ( TokSym "IO" )
, L
    ( Position 21 45 )
    ( TokSym "wrappers" )
, L
    ( Position 21 54 )
    ( TokOther "(" )
, L
    ( Position 21 55 )
    ( TokSym "which" )
, L
    ( Position 21 61 )
    ( TokSym "most" )
, L
    ( Position 21 66 )
    ( TokSym "users" )
, L
    ( Position 21 72 )
    ( TokSym "will" )
, L
    ( Position 22 1 )
    ( Indent 2 )
, L
    ( Position 22 3 )
    ( TokSym "probably" )
, L
    ( Position 22 12 )
    ( TokSym "prefer" )
, L
    ( Position 22 18 )
    ( TokOther ")" )
, L
    ( Position 22 20 )
    ( TokSym "are" )
, L
    ( Position 22 24 )
    ( TokSym "located" )
, L
    ( Position 22 32 )
    ( TokSym "in" )
, L
    ( Position 22 35 )
    ( TokSym "the" )
, L
    ( Position 22 39 )
    ( TokStr "Data.HashTable.IO" )
, L
    ( Position 22 59 )
    ( TokSym "module." )
, L
    ( Position 23 1 )
    ( Indent 2 )
, L
    ( Position 23 3 )
    ( TokSym "." )
, L
    ( Position 24 1 )
    ( Indent 2 )
, L
    ( Position 24 3 )
    ( TokSym "This" )
, L
    ( Position 24 8 )
    ( TokSym "package" )
, L
    ( Position 24 16 )
    ( TokSym "currently" )
, L
    ( Position 24 26 )
    ( TokSym "contains" )
, L
    ( Position 24 35 )
    ( TokSym "three" )
, L
    ( Position 24 41 )
    ( TokSym "hash" )
, L
    ( Position 24 46 )
    ( TokSym "table" )
, L
    ( Position 24 52 )
    ( TokSym "implementations" )
, L
    ( Position 24 67 ) Colon
, L
    ( Position 25 1 )
    ( Indent 2 )
, L
    ( Position 25 3 )
    ( TokSym "." )
, L
    ( Position 26 1 )
    ( Indent 4 )
, L
    ( Position 26 5 )
    ( TokSym "1." )
, L
    ( Position 26 8 )
    ( TokStr "Data.HashTable.ST.Cuckoo" )
, L
    ( Position 26 35 )
    ( TokSym "contains" )
, L
    ( Position 26 44 )
    ( TokSym "an" )
, L
    ( Position 26 47 )
    ( TokSym "implementation" )
, L
    ( Position 26 62 )
    ( TokSym "of" )
, L
    ( Position 26 65 )
    ( TokOther "\" )
, L
    ( Position 26 73 )
    ( LexicalError "
           hashing\" as introduced by Pagh and Rodler in 2001 (see
           <http://en.wikipedia.org/wiki/Cuckoo_hashing>). Cuckoo hashing has
           worst-case /O(1)/ lookups and can reach a high \"load factor\", in which
           the table can perform acceptably well even when approaching 90% full.
           Randomized testing shows this implementation of cuckoo hashing to be
           slightly faster on insert and slightly slower on lookup than
           "Data.Hashtable.ST.Basic", while being more space efficient by about a
           half-word per key-value mapping. Cuckoo hashing, like the basic hash
           table implementation using linear probing, can suffer from long delays
           when the table is resized.
      .
        2. "Data.HashTable.ST.Basic" contains a basic open-addressing hash table
           using linear probing as the collision strategy. On a pure speed basis it
           should currently be the fastest available Haskell hash table
           implementation for lookups, although it has a higher memory overhead
           than the other tables and can suffer from long delays when the table is
           resized because all of the elements in the table need to be rehashed.
      .
        3. "Data.HashTable.ST.Linear" contains a linear hash table (see
           <http://en.wikipedia.org/wiki/Linear_hashing>), which trades some insert
           and lookup performance for higher space efficiency and much shorter
           delays when expanding the table. In most cases, benchmarks show this
           table to be currently slightly faster than @Data.HashTable@ from the
           Haskell base library.
      .
      It is recommended to create a concrete type alias in your code when using this
      package, i.e.:
      .
      > import qualified Data.HashTable.IO as H
      >
      > type HashTable k v = H.BasicHashTable k v
      >
      > foo :: IO (HashTable Int Int)
      > foo = do
      >     ht <- H.new
      >     H.insert ht 1 1
      >     return ht
      .
      Firstly, this makes it easy to switch to a different hash table implementation,
      and secondly, using a concrete type rather than leaving your functions abstract
      in the HashTable class should allow GHC to optimize away the typeclass
      dictionaries.
      .
      This package accepts a couple of different cabal flags:
      .
        * @unsafe-tricks@, default /ON/. If this flag is enabled, we use some
          unsafe GHC-specific tricks to save indirections (namely @unsafeCoerce#@
          and @reallyUnsafePtrEquality#@. These techniques rely on assumptions
          about the behaviour of the GHC runtime system and, although they've been
          tested and should be safe under normal conditions, are slightly
          dangerous. Caveat emptor. In particular, these techniques are
          incompatible with HPC code coverage reports.
      .
        * @sse42@, default /OFF/. If this flag is enabled, we use some SSE 4.2
          instructions (see <http://en.wikipedia.org/wiki/SSE4>, first available on
          Intel Core 2 processors) to speed up cache-line searches for cuckoo
          hashing.
      .
        * @bounds-checking@, default /OFF/. If this flag is enabled, array accesses
          are bounds-checked.
      .
        * @debug@, default /OFF/. If turned on, we'll rudely spew debug output to
          stdout.
      .
        * @portable@, default /OFF/. If this flag is enabled, we use only pure
          Haskell code and try not to use unportable GHC extensions. Turning this
          flag on forces @unsafe-tricks@ and @sse42@ /OFF/.
      .
      Please send bug reports to
      <https://github.com/gregorycollins/hashtables/issues>.

    Extra-Source-Files:
      README.md,
      haddock.sh,
      benchmark/hashtable-benchmark.cabal,
      benchmark/LICENSE,
      benchmark/src/Criterion/Collection/Internal/Types.hs,
      benchmark/src/Criterion/Collection/Chart.hs,
      benchmark/src/Criterion/Collection/Main.hs,
      benchmark/src/Criterion/Collection/Types.hs,
      benchmark/src/Criterion/Collection/Sample.hs,
      benchmark/src/Main.hs,
      benchmark/src/Data/Vector/Algorithms/Shuffle.hs,
      benchmark/src/Data/Benchmarks/UnorderedCollections/Distributions.hs,
      benchmark/src/Data/Benchmarks/UnorderedCollections/Types.hs,
      cbits/Makefile,
      cbits/check.c,
      cbits/defs.h,
      cbits/sse-42-check.c,
      changelog.md,
      test/compute-overhead/ComputeOverhead.hs,
      test/hashtables-test.cabal,
      test/runTestsAndCoverage.sh,
      test/runTestsNoCoverage.sh,
      test/suite/Data/HashTable/Test/Common.hs,
      test/suite/TestSuite.hs


    ------------------------------------------------------------------------------
    Flag unsafe-tricks
      Description: turn on unsafe GHC tricks
      Default:   True

    Flag bounds-checking
      Description: if on, use bounds-checking array accesses
      Default: False

    Flag debug
      Description: if on, spew debugging output to stdout
      Default: False

    Flag sse42
      Description: if on, use SSE 4.2 extensions to search cache lines very
                   efficiently. The portable flag forces this off.
      Default: False

    Flag portable
      Description: if on, use only pure Haskell code and no GHC extensions.
      Default: False


    Library
      hs-source-dirs:    src

      if flag(sse42) && !flag(portable)
        cc-options:  -DUSE_SSE_4_2 -msse4.2
        cpp-options: -DUSE_SSE_4_2
        C-sources:   cbits/sse-42.c

      if !flag(portable) && !flag(sse42)
        C-sources:       cbits/default.c

      if !flag(portable)
        C-sources:       cbits/common.c

      Exposed-modules:   Data.HashTable.Class,
                         Data.HashTable.IO,
                         Data.HashTable.ST.Basic,
                         Data.HashTable.ST.Cuckoo,
                         Data.HashTable.ST.Linear

      Other-modules:     Data.HashTable.Internal.Array,
                         Data.HashTable.Internal.IntArray,
                         Data.HashTable.Internal.CacheLine,
                         Data.HashTable.Internal.CheapPseudoRandomBitStream,
                         Data.HashTable.Internal.UnsafeTricks,
                         Data.HashTable.Internal.Utils,
                         Data.HashTable.Internal.Linear.Bucket

      Build-depends:     base      >= 4   && <5,
                         hashable  >= 1.1 && <1.2 || >= 1.2.1 && <1.3,
                         primitive < 0.7,
                         vector    >= 0.7 && <0.12

      if flag(portable)
        cpp-options: -DNO_C_SEARCH -DPORTABLE

      if !flag(portable) && flag(unsafe-tricks) && impl(ghc)
        build-depends: ghc-prim
        cpp-options: -DUNSAFETRICKS

      if flag(debug)
        cpp-options: -DDEBUG

      if flag(bounds-checking)
        cpp-options: -DBOUNDS_CHECKING

      ghc-prof-options: -prof -auto-all

      if impl(ghc >= 6.12.0)
        ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2
                     -fno-warn-unused-do-bind
      else
        ghc-options: -Wall -fwarn-tabs -funbox-strict-fields -O2
    " )
, L
    ( Position 26 66 ) EOF
]
