[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 6 )
    ( Whitespace "                " )
, L
    ( Position 1 22 )
    ( TokSym "syntax-example" )
, L
    ( Position 1 36 )
    ( Whitespace "
    " )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 9 )
    ( Whitespace "             " )
, L
    ( Position 2 22 )
    ( TokSym "0.3.0.0" )
, L
    ( Position 2 29 )
    ( Whitespace "
    " )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "synopsis" )
, L
    ( Position 3 9 ) Colon
, L
    ( Position 3 10 )
    ( Whitespace "            " )
, L
    ( Position 3 22 )
    ( TokSym "Example" )
, L
    ( Position 3 29 )
    ( Whitespace " " )
, L
    ( Position 3 30 )
    ( TokSym "application" )
, L
    ( Position 3 41 )
    ( Whitespace " " )
, L
    ( Position 3 42 )
    ( TokSym "using" )
, L
    ( Position 3 47 )
    ( Whitespace " " )
, L
    ( Position 3 48 )
    ( TokSym "syntax" )
, L
    ( Position 3 54 )
    ( TokOther "," )
, L
    ( Position 3 55 )
    ( Whitespace " " )
, L
    ( Position 3 56 )
    ( TokSym "a" )
, L
    ( Position 3 57 )
    ( Whitespace " " )
, L
    ( Position 3 58 )
    ( TokSym "library" )
, L
    ( Position 3 65 )
    ( Whitespace " " )
, L
    ( Position 3 66 )
    ( TokSym "for" )
, L
    ( Position 3 69 )
    ( Whitespace " " )
, L
    ( Position 3 70 )
    ( TokSym "abstract" )
, L
    ( Position 3 78 )
    ( Whitespace " " )
, L
    ( Position 3 79 )
    ( TokSym "syntax" )
, L
    ( Position 3 85 )
    ( Whitespace " " )
, L
    ( Position 3 86 )
    ( TokSym "descriptions." )
, L
    ( Position 3 99 )
    ( Whitespace "
    " )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "description" )
, L
    ( Position 4 12 ) Colon
, L
    ( Position 4 13 )
    ( Whitespace "
    " )
, L
    ( Position 5 1 )
    ( Indent 2 )
, L
    ( Position 5 3 )
    ( TokSym "Example" )
, L
    ( Position 5 10 )
    ( Whitespace " " )
, L
    ( Position 5 11 )
    ( TokSym "application" )
, L
    ( Position 5 22 )
    ( Whitespace " " )
, L
    ( Position 5 23 )
    ( TokSym "using" )
, L
    ( Position 5 28 )
    ( Whitespace " " )
, L
    ( Position 5 29 )
    ( TokSym "syntax" )
, L
    ( Position 5 35 )
    ( TokOther "," )
, L
    ( Position 5 36 )
    ( Whitespace " " )
, L
    ( Position 5 37 )
    ( TokSym "a" )
, L
    ( Position 5 38 )
    ( Whitespace " " )
, L
    ( Position 5 39 )
    ( TokSym "library" )
, L
    ( Position 5 46 )
    ( Whitespace " " )
, L
    ( Position 5 47 )
    ( TokSym "for" )
, L
    ( Position 5 50 )
    ( Whitespace " " )
, L
    ( Position 5 51 )
    ( TokSym "abstract" )
, L
    ( Position 5 59 )
    ( Whitespace " " )
, L
    ( Position 5 60 )
    ( TokSym "syntax" )
, L
    ( Position 5 66 )
    ( Whitespace " " )
, L
    ( Position 5 67 )
    ( TokSym "descriptions." )
, L
    ( Position 5 80 )
    ( Whitespace "
    " )
, L
    ( Position 6 1 )
    ( Indent 2 )
, L
    ( Position 6 3 )
    ( TokSym "." )
, L
    ( Position 6 4 )
    ( Whitespace "
    " )
, L
    ( Position 7 1 )
    ( Indent 2 )
, L
    ( Position 7 3 )
    ( TokOther "/" )
, L
    ( Position 7 4 )
    ( TokSym "The" )
, L
    ( Position 7 7 )
    ( Whitespace " " )
, L
    ( Position 7 8 )
    ( TokSym "code." )
, L
    ( Position 7 13 )
    ( TokOther "/" )
, L
    ( Position 7 14 )
    ( Whitespace "
    " )
, L
    ( Position 8 1 )
    ( Indent 2 )
, L
    ( Position 8 3 )
    ( TokSym "." )
, L
    ( Position 8 4 )
    ( Whitespace "
    " )
, L
    ( Position 9 1 )
    ( Indent 2 )
, L
    ( Position 9 3 )
    ( TokOther ">" )
, L
    ( Position 9 4 )
    ( Whitespace " " )
, L
    ( Position 9 5 )
    ( TokSym "import" )
, L
    ( Position 9 11 )
    ( Whitespace "           " )
, L
    ( Position 9 22 )
    ( TokSym "Control.Applicative" )
, L
    ( Position 9 41 )
    ( Whitespace "
    " )
, L
    ( Position 10 1 )
    ( Indent 2 )
, L
    ( Position 10 3 )
    ( TokOther ">" )
, L
    ( Position 10 4 )
    ( Whitespace " " )
, L
    ( Position 10 5 )
    ( TokSym "import" )
, L
    ( Position 10 11 )
    ( Whitespace "           " )
, L
    ( Position 10 22 )
    ( TokSym "Control.Lens.Cons" )
, L
    ( Position 10 39 )
    ( Whitespace "
    " )
, L
    ( Position 11 1 )
    ( Indent 2 )
, L
    ( Position 11 3 )
    ( TokOther ">" )
, L
    ( Position 11 4 )
    ( Whitespace " " )
, L
    ( Position 11 5 )
    ( TokSym "import" )
, L
    ( Position 11 11 )
    ( Whitespace "           " )
, L
    ( Position 11 22 )
    ( TokSym "Control.Lens.SemiIso" )
, L
    ( Position 11 42 )
    ( Whitespace "
    " )
, L
    ( Position 12 1 )
    ( Indent 2 )
, L
    ( Position 12 3 )
    ( TokOther ">" )
, L
    ( Position 12 4 )
    ( Whitespace " " )
, L
    ( Position 12 5 )
    ( TokSym "import" )
, L
    ( Position 12 11 )
    ( Whitespace "           " )
, L
    ( Position 12 22 )
    ( TokSym "Control.Lens.TH" )
, L
    ( Position 12 37 )
    ( Whitespace "
    " )
, L
    ( Position 13 1 )
    ( Indent 2 )
, L
    ( Position 13 3 )
    ( TokOther ">" )
, L
    ( Position 13 4 )
    ( Whitespace " " )
, L
    ( Position 13 5 )
    ( TokSym "import" )
, L
    ( Position 13 11 )
    ( Whitespace " " )
, L
    ( Position 13 12 )
    ( TokSym "qualified" )
, L
    ( Position 13 21 )
    ( Whitespace " " )
, L
    ( Position 13 22 )
    ( TokSym "Data.Attoparsec.Text" )
, L
    ( Position 13 42 )
    ( Whitespace " " )
, L
    ( Position 13 43 )
    ( TokSym "as" )
, L
    ( Position 13 45 )
    ( Whitespace " " )
, L
    ( Position 13 46 )
    ( TokSym "AP" )
, L
    ( Position 13 48 )
    ( Whitespace "
    " )
, L
    ( Position 14 1 )
    ( Indent 2 )
, L
    ( Position 14 3 )
    ( TokOther ">" )
, L
    ( Position 14 4 )
    ( Whitespace " " )
, L
    ( Position 14 5 )
    ( TokSym "import" )
, L
    ( Position 14 11 )
    ( Whitespace "           " )
, L
    ( Position 14 22 )
    ( TokSym "Data.Char" )
, L
    ( Position 14 31 )
    ( Whitespace "
    " )
, L
    ( Position 15 1 )
    ( Indent 2 )
, L
    ( Position 15 3 )
    ( TokOther ">" )
, L
    ( Position 15 4 )
    ( Whitespace " " )
, L
    ( Position 15 5 )
    ( TokSym "import" )
, L
    ( Position 15 11 )
    ( Whitespace "           " )
, L
    ( Position 15 22 )
    ( TokSym "Data.Scientific" )
, L
    ( Position 15 37 )
    ( Whitespace " " )
, L
    ( Position 15 38 )
    ( TokOther "(" )
, L
    ( Position 15 39 )
    ( TokSym "Scientific" )
, L
    ( Position 15 49 )
    ( TokOther ")" )
, L
    ( Position 15 50 )
    ( Whitespace "
    " )
, L
    ( Position 16 1 )
    ( Indent 2 )
, L
    ( Position 16 3 )
    ( TokOther ">" )
, L
    ( Position 16 4 )
    ( Whitespace " " )
, L
    ( Position 16 5 )
    ( TokSym "import" )
, L
    ( Position 16 11 )
    ( Whitespace "           " )
, L
    ( Position 16 22 )
    ( TokSym "Data.SemiIsoFunctor" )
, L
    ( Position 16 41 )
    ( Whitespace "
    " )
, L
    ( Position 17 1 )
    ( Indent 2 )
, L
    ( Position 17 3 )
    ( TokOther ">" )
, L
    ( Position 17 4 )
    ( Whitespace " " )
, L
    ( Position 17 5 )
    ( TokSym "import" )
, L
    ( Position 17 11 )
    ( Whitespace "           " )
, L
    ( Position 17 22 )
    ( TokSym "Data.Syntax" )
, L
    ( Position 17 33 )
    ( Whitespace " " )
, L
    ( Position 17 34 )
    ( TokOther "(" )
, L
    ( Position 17 35 )
    ( TokSym "Syntax" )
, L
    ( Position 17 41 )
    ( TokOther ")" )
, L
    ( Position 17 42 )
    ( Whitespace "
    " )
, L
    ( Position 18 1 )
    ( Indent 2 )
, L
    ( Position 18 3 )
    ( TokOther ">" )
, L
    ( Position 18 4 )
    ( Whitespace " " )
, L
    ( Position 18 5 )
    ( TokSym "import" )
, L
    ( Position 18 11 )
    ( Whitespace " " )
, L
    ( Position 18 12 )
    ( TokSym "qualified" )
, L
    ( Position 18 21 )
    ( Whitespace " " )
, L
    ( Position 18 22 )
    ( TokSym "Data.Syntax" )
, L
    ( Position 18 33 )
    ( Whitespace " " )
, L
    ( Position 18 34 )
    ( TokSym "as" )
, L
    ( Position 18 36 )
    ( Whitespace " " )
, L
    ( Position 18 37 )
    ( TokSym "S" )
, L
    ( Position 18 38 )
    ( Whitespace "
    " )
, L
    ( Position 19 1 )
    ( Indent 2 )
, L
    ( Position 19 3 )
    ( TokOther ">" )
, L
    ( Position 19 4 )
    ( Whitespace " " )
, L
    ( Position 19 5 )
    ( TokSym "import" )
, L
    ( Position 19 11 )
    ( Whitespace " " )
, L
    ( Position 19 12 )
    ( TokSym "qualified" )
, L
    ( Position 19 21 )
    ( Whitespace " " )
, L
    ( Position 19 22 )
    ( TokSym "Data.Syntax.Attoparsec.Text" )
, L
    ( Position 19 49 )
    ( Whitespace " " )
, L
    ( Position 19 50 )
    ( TokSym "as" )
, L
    ( Position 19 52 )
    ( Whitespace " " )
, L
    ( Position 19 53 )
    ( TokSym "S" )
, L
    ( Position 19 54 )
    ( Whitespace "
    " )
, L
    ( Position 20 1 )
    ( Indent 2 )
, L
    ( Position 20 3 )
    ( TokOther ">" )
, L
    ( Position 20 4 )
    ( Whitespace " " )
, L
    ( Position 20 5 )
    ( TokSym "import" )
, L
    ( Position 20 11 )
    ( Whitespace "           " )
, L
    ( Position 20 22 )
    ( TokSym "Data.Syntax.Char" )
, L
    ( Position 20 38 )
    ( Whitespace " " )
, L
    ( Position 20 39 )
    ( TokOther "(" )
, L
    ( Position 20 40 )
    ( TokSym "SyntaxChar" )
, L
    ( Position 20 50 )
    ( TokOther ")" )
, L
    ( Position 20 51 )
    ( Whitespace "
    " )
, L
    ( Position 21 1 )
    ( Indent 2 )
, L
    ( Position 21 3 )
    ( TokOther ">" )
, L
    ( Position 21 4 )
    ( Whitespace " " )
, L
    ( Position 21 5 )
    ( TokSym "import" )
, L
    ( Position 21 11 )
    ( Whitespace " " )
, L
    ( Position 21 12 )
    ( TokSym "qualified" )
, L
    ( Position 21 21 )
    ( Whitespace " " )
, L
    ( Position 21 22 )
    ( TokSym "Data.Syntax.Char" )
, L
    ( Position 21 38 )
    ( Whitespace " " )
, L
    ( Position 21 39 )
    ( TokSym "as" )
, L
    ( Position 21 41 )
    ( Whitespace " " )
, L
    ( Position 21 42 )
    ( TokSym "S" )
, L
    ( Position 21 43 )
    ( Whitespace "
    " )
, L
    ( Position 22 1 )
    ( Indent 2 )
, L
    ( Position 22 3 )
    ( TokOther ">" )
, L
    ( Position 22 4 )
    ( Whitespace " " )
, L
    ( Position 22 5 )
    ( TokSym "import" )
, L
    ( Position 22 11 )
    ( Whitespace " " )
, L
    ( Position 22 12 )
    ( TokSym "qualified" )
, L
    ( Position 22 21 )
    ( Whitespace " " )
, L
    ( Position 22 22 )
    ( TokSym "Data.Syntax.Combinator" )
, L
    ( Position 22 44 )
    ( Whitespace " " )
, L
    ( Position 22 45 )
    ( TokSym "as" )
, L
    ( Position 22 47 )
    ( Whitespace " " )
, L
    ( Position 22 48 )
    ( TokSym "S" )
, L
    ( Position 22 49 )
    ( Whitespace "
    " )
, L
    ( Position 23 1 )
    ( Indent 2 )
, L
    ( Position 23 3 )
    ( TokOther ">" )
, L
    ( Position 23 4 )
    ( Whitespace " " )
, L
    ( Position 23 5 )
    ( TokSym "import" )
, L
    ( Position 23 11 )
    ( Whitespace " " )
, L
    ( Position 23 12 )
    ( TokSym "qualified" )
, L
    ( Position 23 21 )
    ( Whitespace " " )
, L
    ( Position 23 22 )
    ( TokSym "Data.Syntax.Pretty" )
, L
    ( Position 23 40 )
    ( Whitespace " " )
, L
    ( Position 23 41 )
    ( TokSym "as" )
, L
    ( Position 23 43 )
    ( Whitespace " " )
, L
    ( Position 23 44 )
    ( TokSym "S" )
, L
    ( Position 23 45 )
    ( Whitespace "
    " )
, L
    ( Position 24 1 )
    ( Indent 2 )
, L
    ( Position 24 3 )
    ( TokOther ">" )
, L
    ( Position 24 4 )
    ( Whitespace " " )
, L
    ( Position 24 5 )
    ( TokSym "import" )
, L
    ( Position 24 11 )
    ( Whitespace "           " )
, L
    ( Position 24 22 )
    ( TokSym "Data.Text" )
, L
    ( Position 24 31 )
    ( Whitespace " " )
, L
    ( Position 24 32 )
    ( TokOther "(" )
, L
    ( Position 24 33 )
    ( TokSym "Text" )
, L
    ( Position 24 37 )
    ( TokOther ")" )
, L
    ( Position 24 38 )
    ( Whitespace "
    " )
, L
    ( Position 25 1 )
    ( Indent 2 )
, L
    ( Position 25 3 )
    ( TokOther ">" )
, L
    ( Position 25 4 )
    ( Whitespace " " )
, L
    ( Position 25 5 )
    ( TokSym "import" )
, L
    ( Position 25 11 )
    ( Whitespace " " )
, L
    ( Position 25 12 )
    ( TokSym "qualified" )
, L
    ( Position 25 21 )
    ( Whitespace " " )
, L
    ( Position 25 22 )
    ( TokSym "Data.Text.IO" )
, L
    ( Position 25 34 )
    ( Whitespace " " )
, L
    ( Position 25 35 )
    ( TokSym "as" )
, L
    ( Position 25 37 )
    ( Whitespace " " )
, L
    ( Position 25 38 )
    ( TokSym "T" )
, L
    ( Position 25 39 )
    ( Whitespace "
    " )
, L
    ( Position 26 1 )
    ( Indent 2 )
, L
    ( Position 26 3 )
    ( TokOther ">" )
, L
    ( Position 26 4 )
    ( Whitespace " " )
, L
    ( Position 26 5 )
    ( TokSym "import" )
, L
    ( Position 26 11 )
    ( Whitespace " " )
, L
    ( Position 26 12 )
    ( TokSym "qualified" )
, L
    ( Position 26 21 )
    ( Whitespace " " )
, L
    ( Position 26 22 )
    ( TokSym "Text.PrettyPrint" )
, L
    ( Position 26 38 )
    ( Whitespace " " )
, L
    ( Position 26 39 )
    ( TokSym "as" )
, L
    ( Position 26 41 )
    ( Whitespace " " )
, L
    ( Position 26 42 )
    ( TokSym "P" )
, L
    ( Position 26 43 )
    ( Whitespace "
    " )
, L
    ( Position 27 1 )
    ( Indent 2 )
, L
    ( Position 27 3 )
    ( TokOther ">" )
, L
    ( Position 27 4 )
    ( Whitespace " " )
, L
    ( Position 27 5 )
    ( Whitespace "
    " )
, L
    ( Position 28 1 )
    ( Indent 2 )
, L
    ( Position 28 3 )
    ( TokOther ">" )
, L
    ( Position 28 4 )
    ( Whitespace " " )
, L
    ( Position 28 5 )
    ( Comment "-- A simple lambda calculus." )
, L
    ( Position 28 33 )
    ( Whitespace "
    " )
, L
    ( Position 29 1 )
    ( Indent 2 )
, L
    ( Position 29 3 )
    ( TokOther ">" )
, L
    ( Position 29 4 )
    ( Whitespace " " )
, L
    ( Position 29 5 )
    ( Whitespace "
    " )
, L
    ( Position 30 1 )
    ( Indent 2 )
, L
    ( Position 30 3 )
    ( TokOther ">" )
, L
    ( Position 30 4 )
    ( Whitespace " " )
, L
    ( Position 30 5 )
    ( TokSym "data" )
, L
    ( Position 30 9 )
    ( Whitespace " " )
, L
    ( Position 30 10 )
    ( TokSym "Literal" )
, L
    ( Position 30 17 )
    ( Whitespace " " )
, L
    ( Position 30 18 )
    ( TokOther "=" )
, L
    ( Position 30 19 )
    ( Whitespace " " )
, L
    ( Position 30 20 )
    ( TokSym "LitStr" )
, L
    ( Position 30 26 )
    ( Whitespace " " )
, L
    ( Position 30 27 )
    ( TokSym "Text" )
, L
    ( Position 30 31 )
    ( Whitespace "
    " )
, L
    ( Position 31 1 )
    ( Indent 2 )
, L
    ( Position 31 3 )
    ( TokOther ">" )
, L
    ( Position 31 4 )
    ( Whitespace "              " )
, L
    ( Position 31 18 )
    ( TokOther "|" )
, L
    ( Position 31 19 )
    ( Whitespace " " )
, L
    ( Position 31 20 )
    ( TokSym "LitNum" )
, L
    ( Position 31 26 )
    ( Whitespace " " )
, L
    ( Position 31 27 )
    ( TokSym "Scientific" )
, L
    ( Position 31 37 )
    ( Whitespace "
    " )
, L
    ( Position 32 1 )
    ( Indent 2 )
, L
    ( Position 32 3 )
    ( TokOther ">" )
, L
    ( Position 32 4 )
    ( Whitespace "     " )
, L
    ( Position 32 9 )
    ( TokSym "deriving" )
, L
    ( Position 32 17 )
    ( Whitespace " " )
, L
    ( Position 32 18 )
    ( TokOther "(" )
, L
    ( Position 32 19 )
    ( TokSym "Show" )
, L
    ( Position 32 23 )
    ( TokOther ")" )
, L
    ( Position 32 24 )
    ( Whitespace "
    " )
, L
    ( Position 33 1 )
    ( Indent 2 )
, L
    ( Position 33 3 )
    ( TokOther ">" )
, L
    ( Position 33 4 )
    ( Whitespace " " )
, L
    ( Position 33 5 )
    ( Whitespace "
    " )
, L
    ( Position 34 1 )
    ( Indent 2 )
, L
    ( Position 34 3 )
    ( TokOther ">" )
, L
    ( Position 34 4 )
    ( Whitespace " " )
, L
    ( Position 34 5 )
    ( TokOther "$" )
, L
    ( Position 34 6 )
    ( TokOther "(" )
, L
    ( Position 34 7 )
    ( TokSym "makePrisms" )
, L
    ( Position 34 17 )
    ( Whitespace " " )
, L
    ( Position 34 18 )
    ( TokSym "''Literal" )
, L
    ( Position 34 27 )
    ( TokOther ")" )
, L
    ( Position 34 28 )
    ( Whitespace "
    " )
, L
    ( Position 35 1 )
    ( Indent 2 )
, L
    ( Position 35 3 )
    ( TokOther ">" )
, L
    ( Position 35 4 )
    ( Whitespace " " )
, L
    ( Position 35 5 )
    ( Whitespace "
    " )
, L
    ( Position 36 1 )
    ( Indent 2 )
, L
    ( Position 36 3 )
    ( TokOther ">" )
, L
    ( Position 36 4 )
    ( Whitespace " " )
, L
    ( Position 36 5 )
    ( TokSym "data" )
, L
    ( Position 36 9 )
    ( Whitespace " " )
, L
    ( Position 36 10 )
    ( TokSym "AST" )
, L
    ( Position 36 13 )
    ( Whitespace " " )
, L
    ( Position 36 14 )
    ( TokOther "=" )
, L
    ( Position 36 15 )
    ( Whitespace " " )
, L
    ( Position 36 16 )
    ( TokSym "Var" )
, L
    ( Position 36 19 )
    ( Whitespace " " )
, L
    ( Position 36 20 )
    ( TokSym "Text" )
, L
    ( Position 36 24 )
    ( Whitespace "
    " )
, L
    ( Position 37 1 )
    ( Indent 2 )
, L
    ( Position 37 3 )
    ( TokOther ">" )
, L
    ( Position 37 4 )
    ( Whitespace "          " )
, L
    ( Position 37 14 )
    ( TokOther "|" )
, L
    ( Position 37 15 )
    ( Whitespace " " )
, L
    ( Position 37 16 )
    ( TokSym "Lit" )
, L
    ( Position 37 19 )
    ( Whitespace " " )
, L
    ( Position 37 20 )
    ( TokSym "Literal" )
, L
    ( Position 37 27 )
    ( Whitespace "
    " )
, L
    ( Position 38 1 )
    ( Indent 2 )
, L
    ( Position 38 3 )
    ( TokOther ">" )
, L
    ( Position 38 4 )
    ( Whitespace "          " )
, L
    ( Position 38 14 )
    ( TokOther "|" )
, L
    ( Position 38 15 )
    ( Whitespace " " )
, L
    ( Position 38 16 )
    ( TokSym "App" )
, L
    ( Position 38 19 )
    ( Whitespace " " )
, L
    ( Position 38 20 )
    ( TokSym "AST" )
, L
    ( Position 38 23 )
    ( Whitespace " " )
, L
    ( Position 38 24 )
    ( TokSym "AST" )
, L
    ( Position 38 27 )
    ( Whitespace "
    " )
, L
    ( Position 39 1 )
    ( Indent 2 )
, L
    ( Position 39 3 )
    ( TokOther ">" )
, L
    ( Position 39 4 )
    ( Whitespace "          " )
, L
    ( Position 39 14 )
    ( TokOther "|" )
, L
    ( Position 39 15 )
    ( Whitespace " " )
, L
    ( Position 39 16 )
    ( TokSym "Abs" )
, L
    ( Position 39 19 )
    ( Whitespace " " )
, L
    ( Position 39 20 )
    ( TokSym "Text" )
, L
    ( Position 39 24 )
    ( Whitespace " " )
, L
    ( Position 39 25 )
    ( TokSym "AST" )
, L
    ( Position 39 28 )
    ( Whitespace "
    " )
, L
    ( Position 40 1 )
    ( Indent 2 )
, L
    ( Position 40 3 )
    ( TokOther ">" )
, L
    ( Position 40 4 )
    ( Whitespace "          " )
, L
    ( Position 40 14 )
    ( TokOther "|" )
, L
    ( Position 40 15 )
    ( Whitespace " " )
, L
    ( Position 40 16 )
    ( TokSym "Let" )
, L
    ( Position 40 19 )
    ( Whitespace " " )
, L
    ( Position 40 20 )
    ( TokSym "Text" )
, L
    ( Position 40 24 )
    ( Whitespace " " )
, L
    ( Position 40 25 )
    ( TokSym "AST" )
, L
    ( Position 40 28 )
    ( Whitespace " " )
, L
    ( Position 40 29 )
    ( TokSym "AST" )
, L
    ( Position 40 32 )
    ( Whitespace "
    " )
, L
    ( Position 41 1 )
    ( Indent 2 )
, L
    ( Position 41 3 )
    ( TokOther ">" )
, L
    ( Position 41 4 )
    ( Whitespace "     " )
, L
    ( Position 41 9 )
    ( TokSym "deriving" )
, L
    ( Position 41 17 )
    ( Whitespace " " )
, L
    ( Position 41 18 )
    ( TokOther "(" )
, L
    ( Position 41 19 )
    ( TokSym "Show" )
, L
    ( Position 41 23 )
    ( TokOther ")" )
, L
    ( Position 41 24 )
    ( Whitespace "
    " )
, L
    ( Position 42 1 )
    ( Indent 2 )
, L
    ( Position 42 3 )
    ( TokOther ">" )
, L
    ( Position 42 4 )
    ( Whitespace " " )
, L
    ( Position 42 5 )
    ( Whitespace "
    " )
, L
    ( Position 43 1 )
    ( Indent 2 )
, L
    ( Position 43 3 )
    ( TokOther ">" )
, L
    ( Position 43 4 )
    ( Whitespace " " )
, L
    ( Position 43 5 )
    ( TokOther "$" )
, L
    ( Position 43 6 )
    ( TokOther "(" )
, L
    ( Position 43 7 )
    ( TokSym "makePrisms" )
, L
    ( Position 43 17 )
    ( Whitespace " " )
, L
    ( Position 43 18 )
    ( TokSym "''AST" )
, L
    ( Position 43 23 )
    ( TokOther ")" )
, L
    ( Position 43 24 )
    ( Whitespace "
    " )
, L
    ( Position 44 1 )
    ( Indent 2 )
, L
    ( Position 44 3 )
    ( TokOther ">" )
, L
    ( Position 44 4 )
    ( Whitespace " " )
, L
    ( Position 44 5 )
    ( Whitespace "
    " )
, L
    ( Position 45 1 )
    ( Indent 2 )
, L
    ( Position 45 3 )
    ( TokOther ">" )
, L
    ( Position 45 4 )
    ( Whitespace " " )
, L
    ( Position 45 5 )
    ( Comment "-- | A variable name." )
, L
    ( Position 45 26 )
    ( Whitespace "
    " )
, L
    ( Position 46 1 )
    ( Indent 2 )
, L
    ( Position 46 3 )
    ( TokOther ">" )
, L
    ( Position 46 4 )
    ( Whitespace " " )
, L
    ( Position 46 5 )
    ( TokSym "name" )
, L
    ( Position 46 9 )
    ( Whitespace " " )
, L
    ( Position 46 10 ) Colon
, L
    ( Position 46 11 ) Colon
, L
    ( Position 46 12 )
    ( Whitespace " " )
, L
    ( Position 46 13 )
    ( TokSym "Syntax" )
, L
    ( Position 46 19 )
    ( Whitespace " " )
, L
    ( Position 46 20 )
    ( TokSym "syn" )
, L
    ( Position 46 23 )
    ( Whitespace " " )
, L
    ( Position 46 24 )
    ( TokSym "Text" )
, L
    ( Position 46 28 )
    ( Whitespace " " )
, L
    ( Position 46 29 )
    ( TokOther "=>" )
, L
    ( Position 46 31 )
    ( Whitespace " " )
, L
    ( Position 46 32 )
    ( TokSym "syn" )
, L
    ( Position 46 35 )
    ( Whitespace " " )
, L
    ( Position 46 36 )
    ( TokSym "Text" )
, L
    ( Position 46 40 )
    ( Whitespace "
    " )
, L
    ( Position 47 1 )
    ( Indent 2 )
, L
    ( Position 47 3 )
    ( TokOther ">" )
, L
    ( Position 47 4 )
    ( Whitespace " " )
, L
    ( Position 47 5 )
    ( TokSym "name" )
, L
    ( Position 47 9 )
    ( Whitespace " " )
, L
    ( Position 47 10 )
    ( TokOther "=" )
, L
    ( Position 47 11 )
    ( Whitespace " " )
, L
    ( Position 47 12 )
    ( TokSym "_Cons" )
, L
    ( Position 47 17 )
    ( Whitespace " " )
, L
    ( Position 47 18 )
    ( TokOther "/$/" )
, L
    ( Position 47 21 )
    ( Whitespace " " )
, L
    ( Position 47 22 )
    ( TokSym "S.satisfy" )
, L
    ( Position 47 31 )
    ( Whitespace " " )
, L
    ( Position 47 32 )
    ( TokSym "isAlpha" )
, L
    ( Position 47 39 )
    ( Whitespace " " )
, L
    ( Position 47 40 )
    ( TokOther "/*/" )
, L
    ( Position 47 43 )
    ( Whitespace " " )
, L
    ( Position 47 44 )
    ( TokSym "S.takeWhile" )
, L
    ( Position 47 55 )
    ( Whitespace " " )
, L
    ( Position 47 56 )
    ( TokSym "isAlphaNum" )
, L
    ( Position 47 66 )
    ( Whitespace "
    " )
, L
    ( Position 48 1 )
    ( Indent 2 )
, L
    ( Position 48 3 )
    ( TokOther ">" )
, L
    ( Position 48 4 )
    ( Whitespace " " )
, L
    ( Position 48 5 )
    ( Whitespace "
    " )
, L
    ( Position 49 1 )
    ( Indent 2 )
, L
    ( Position 49 3 )
    ( TokOther ">" )
, L
    ( Position 49 4 )
    ( Whitespace " " )
, L
    ( Position 49 5 )
    ( Comment "-- | A quoted string." )
, L
    ( Position 49 26 )
    ( Whitespace "
    " )
, L
    ( Position 50 1 )
    ( Indent 2 )
, L
    ( Position 50 3 )
    ( TokOther ">" )
, L
    ( Position 50 4 )
    ( Whitespace " " )
, L
    ( Position 50 5 )
    ( TokSym "quoted" )
, L
    ( Position 50 11 )
    ( Whitespace " " )
, L
    ( Position 50 12 ) Colon
, L
    ( Position 50 13 ) Colon
, L
    ( Position 50 14 )
    ( Whitespace " " )
, L
    ( Position 50 15 )
    ( TokSym "SyntaxChar" )
, L
    ( Position 50 25 )
    ( Whitespace " " )
, L
    ( Position 50 26 )
    ( TokSym "syn" )
, L
    ( Position 50 29 )
    ( Whitespace " " )
, L
    ( Position 50 30 )
    ( TokSym "seq" )
, L
    ( Position 50 33 )
    ( Whitespace " " )
, L
    ( Position 50 34 )
    ( TokOther "=>" )
, L
    ( Position 50 36 )
    ( Whitespace " " )
, L
    ( Position 50 37 )
    ( TokSym "syn" )
, L
    ( Position 50 40 )
    ( Whitespace " " )
, L
    ( Position 50 41 )
    ( TokSym "seq" )
, L
    ( Position 50 44 )
    ( Whitespace "
    " )
, L
    ( Position 51 1 )
    ( Indent 2 )
, L
    ( Position 51 3 )
    ( TokOther ">" )
, L
    ( Position 51 4 )
    ( Whitespace " " )
, L
    ( Position 51 5 )
    ( TokSym "quoted" )
, L
    ( Position 51 11 )
    ( Whitespace " " )
, L
    ( Position 51 12 )
    ( TokOther "=" )
, L
    ( Position 51 13 )
    ( Whitespace " " )
, L
    ( Position 51 14 )
    ( TokSym "S.char" )
, L
    ( Position 51 20 )
    ( Whitespace " " )
, L
    ( Position 51 21 )
    ( TokSym "'" )
, L
    ( Position 51 22 )
    ( TokStr "' */ S.takeTill (=='" )
, L
    ( Position 51 44 )
    ( TokSym "'" )
, L
    ( Position 51 45 )
    ( TokOther ")" )
, L
    ( Position 51 46 )
    ( Whitespace " " )
, L
    ( Position 51 47 )
    ( TokOther "/*" )
, L
    ( Position 51 49 )
    ( Whitespace " " )
, L
    ( Position 51 50 )
    ( TokSym "S.char" )
, L
    ( Position 51 56 )
    ( Whitespace " " )
, L
    ( Position 51 57 )
    ( TokSym "'" )
, L
    ( Position 51 60 )
    ( LexicalError "
      > 
      > -- | Encloses a symbol in parentheses.
      > parens :: SyntaxChar syn seq => syn a -  > syn a
      > parens m = S.char '(' */ S.spaces_ */ m /* S.spaces_ /* S.char ')'
      > 
      > -- | A literal.
      > literal :: SyntaxChar syn Text => syn Literal
      > literal =  _LitNum /$/ S.scientific
      >        /|/ _LitStr /$/ quoted
      > 
      > -- | An atom is a variable, literal or an expression in parentheses.
      > atom :: SyntaxChar syn Text => syn AST
      > atom =  _Lit /$/ literal
      >     /|/ _Var /$/ name
      >     /|/ parens expr
      > 
      > -- | Parses a list of atoms and folds them with the _App prism.
      > apps :: SyntaxChar syn Text => syn AST
      > apps = bifoldl1 _App /$/ S.sepBy1 atom S.spaces1
      > 
      > -- | An expression of our lambda calculus.
      > --
      > -- Thanks to 'tuple-morph' we don't have to worry about /* and */ here.
      > -- Tuples are reassociated and units are removed by the 'morphed'
      > -- isomorphism (applied in /$~ operator).
      > expr :: SyntaxChar syn Text => syn AST
      > expr =  _Abs /$~ S.char '\\'    /*/ S.spaces_
      >              /*/ name           /*/ S.spaces
      >              /*/  S.string "->" /*/ S.spaces
      >              /*/ expr
      > 
      >     /|/ _Let /$~ S.string "let" /*/ S.spaces1
      >              /*/ name           /*/ S.spaces
      >              /*/ S.char '='     /*/ S.spaces
      >              /*/ expr           /*/ S.spaces1
      >              /*/ S.string "in"  /*/ S.spaces1
      >              /*/ expr
      > 
      >     /|/ apps
      > 
      > main :: IO ()
      > main = do
      >     -- Load the standard input.
      >     t <- T.getContents
      > 
      >     -- Try to parse it.
      >     case AP.parseOnly (S.getParser expr <* AP.skipSpace <* AP.endOfInput) t of
      >       Left err  -> putStrLn err
      >       Right ast -> do
      >         -- If parsing succeeded print the AST.
      >         print ast
      >         
      >         -- Try to pretty print it.
      >         -- (Printing cannot really fail in this example)
      >         case S.runPrinter expr ast of
      >           Left err  -> putStrLn err
      >           Right doc -> putStrLn (P.render doc)
      > 
      >     return ()
      .
    license:             MIT
    license-file:        LICENSE
    author:              PaweÅ\x82 Nowak
    maintainer:          PaweÅ\x82 Nowak <pawel834@gmail.com>
    copyright:           PaweÅ\x82 Nowak 2014
    category:            Data
    build-type:          Simple
    cabal-version:       >=1.10

    source-repository head
      type:     git
      location: git@github.com:Pawel834/syntax-example.git

    executable syntax-example
      main-is:             Main.hs
      build-depends:       base >= 4 && < 5, lens, semi-iso >= 0.4,
                           syntax >= 0.2, syntax-attoparsec >= 0.2, syntax-pretty >= 0.2,
                           attoparsec, pretty, text, scientific >= 0.3
      default-language:    Haskell2010
    " )
, L
    ( Position 51 58 ) EOF
]
