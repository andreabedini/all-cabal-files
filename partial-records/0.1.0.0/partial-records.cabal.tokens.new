[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 6 )
    ( Whitespace "                " )
, L
    ( Position 1 22 )
    ( TokSym "partial-records" )
, L
    ( Position 1 37 )
    ( Whitespace "\xd
    " )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 9 )
    ( Whitespace "             " )
, L
    ( Position 2 22 )
    ( TokSym "0.1.0.0" )
, L
    ( Position 2 29 )
    ( Whitespace "\xd
    " )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "x-revision" )
, L
    ( Position 3 11 ) Colon
, L
    ( Position 3 12 )
    ( Whitespace "          " )
, L
    ( Position 3 22 )
    ( TokSym "1" )
, L
    ( Position 3 23 )
    ( Whitespace "\xd
    " )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "synopsis" )
, L
    ( Position 4 9 ) Colon
, L
    ( Position 4 10 )
    ( Whitespace "            " )
, L
    ( Position 4 22 )
    ( TokSym "Template" )
, L
    ( Position 4 30 )
    ( Whitespace " " )
, L
    ( Position 4 31 )
    ( TokSym "haskell" )
, L
    ( Position 4 38 )
    ( Whitespace " " )
, L
    ( Position 4 39 )
    ( TokSym "utilities" )
, L
    ( Position 4 48 )
    ( Whitespace " " )
, L
    ( Position 4 49 )
    ( TokSym "for" )
, L
    ( Position 4 52 )
    ( Whitespace " " )
, L
    ( Position 4 53 )
    ( TokSym "constructing" )
, L
    ( Position 4 65 )
    ( Whitespace " " )
, L
    ( Position 4 66 )
    ( TokSym "records" )
, L
    ( Position 4 73 )
    ( Whitespace " " )
, L
    ( Position 4 74 )
    ( TokSym "with" )
, L
    ( Position 4 78 )
    ( Whitespace " " )
, L
    ( Position 4 79 )
    ( TokSym "default" )
, L
    ( Position 4 86 )
    ( Whitespace " " )
, L
    ( Position 4 87 )
    ( TokSym "values" )
, L
    ( Position 4 93 )
    ( Whitespace "\xd
    " )
, L
    ( Position 5 1 )
    ( Indent 0 )
, L
    ( Position 5 1 )
    ( TokSym "description" )
, L
    ( Position 5 12 ) Colon
, L
    ( Position 5 13 )
    ( Whitespace "         " )
, L
    ( Position 5 22 )
    ( TokSym "." )
, L
    ( Position 5 23 )
    ( Whitespace "\xd
    " )
, L
    ( Position 6 1 )
    ( Indent 2 )
, L
    ( Position 6 3 )
    ( TokSym "If" )
, L
    ( Position 6 5 )
    ( Whitespace " " )
, L
    ( Position 6 6 )
    ( TokSym "you" )
, L
    ( Position 6 9 )
    ( Whitespace " " )
, L
    ( Position 6 10 )
    ( TokSym "have" )
, L
    ( Position 6 14 )
    ( Whitespace " " )
, L
    ( Position 6 15 )
    ( TokSym "a" )
, L
    ( Position 6 16 )
    ( Whitespace " " )
, L
    ( Position 6 17 )
    ( TokSym "datatype" )
, L
    ( Position 6 25 )
    ( Whitespace " " )
, L
    ( Position 6 26 )
    ( TokSym "with" )
, L
    ( Position 6 30 )
    ( Whitespace " " )
, L
    ( Position 6 31 )
    ( TokSym "a" )
, L
    ( Position 6 32 )
    ( Whitespace " " )
, L
    ( Position 6 33 )
    ( TokSym "lot" )
, L
    ( Position 6 36 )
    ( Whitespace " " )
, L
    ( Position 6 37 )
    ( TokSym "of" )
, L
    ( Position 6 39 )
    ( Whitespace " " )
, L
    ( Position 6 40 )
    ( TokSym "default-able" )
, L
    ( Position 6 52 )
    ( Whitespace " " )
, L
    ( Position 6 53 )
    ( TokSym "fields" )
, L
    ( Position 6 59 )
    ( TokOther "," )
, L
    ( Position 6 60 )
    ( Whitespace " " )
, L
    ( Position 6 61 )
    ( TokSym "e.g." )
, L
    ( Position 6 65 )
    ( Whitespace "\xd
    " )
, L
    ( Position 7 1 )
    ( Indent 2 )
, L
    ( Position 7 3 )
    ( TokSym "." )
, L
    ( Position 7 4 )
    ( Whitespace "\xd
    " )
, L
    ( Position 8 1 )
    ( Indent 2 )
, L
    ( Position 8 3 )
    ( TokOther ">" )
, L
    ( Position 8 4 )
    ( Whitespace " " )
, L
    ( Position 8 5 )
    ( TokSym "data" )
, L
    ( Position 8 9 )
    ( Whitespace " " )
, L
    ( Position 8 10 )
    ( TokSym "Foo" )
, L
    ( Position 8 13 )
    ( Whitespace " " )
, L
    ( Position 8 14 )
    ( TokOther "=" )
, L
    ( Position 8 15 )
    ( Whitespace "\xd
    " )
, L
    ( Position 9 1 )
    ( Indent 2 )
, L
    ( Position 9 3 )
    ( TokOther ">" )
, L
    ( Position 9 4 )
    ( Whitespace "   " )
, L
    ( Position 9 7 ) OpenBrace
, L
    ( Position 9 8 )
    ( Whitespace " " )
, L
    ( Position 9 9 )
    ( TokSym "fld1" )
, L
    ( Position 9 13 )
    ( Whitespace " " )
, L
    ( Position 9 14 ) Colon
, L
    ( Position 9 15 ) Colon
, L
    ( Position 9 16 )
    ( Whitespace " " )
, L
    ( Position 9 17 )
    ( TokSym "Maybe" )
, L
    ( Position 9 22 )
    ( Whitespace " " )
, L
    ( Position 9 23 )
    ( TokSym "Int" )
, L
    ( Position 9 26 )
    ( Whitespace "\xd
    " )
, L
    ( Position 10 1 )
    ( Indent 2 )
, L
    ( Position 10 3 )
    ( TokOther ">" )
, L
    ( Position 10 4 )
    ( Whitespace "   " )
, L
    ( Position 10 7 )
    ( TokOther "," )
, L
    ( Position 10 8 )
    ( Whitespace " " )
, L
    ( Position 10 9 )
    ( TokSym "fld2" )
, L
    ( Position 10 13 )
    ( Whitespace " " )
, L
    ( Position 10 14 ) Colon
, L
    ( Position 10 15 ) Colon
, L
    ( Position 10 16 )
    ( Whitespace " " )
, L
    ( Position 10 17 )
    ( TokSym "Maybe" )
, L
    ( Position 10 22 )
    ( Whitespace " " )
, L
    ( Position 10 23 )
    ( TokSym "Char" )
, L
    ( Position 10 27 )
    ( Whitespace "\xd
    " )
, L
    ( Position 11 1 )
    ( Indent 2 )
, L
    ( Position 11 3 )
    ( TokOther ">" )
, L
    ( Position 11 4 )
    ( Whitespace "   " )
, L
    ( Position 11 7 )
    ( TokOther "," )
, L
    ( Position 11 8 )
    ( Whitespace " " )
, L
    ( Position 11 9 )
    ( TokSym "fld3" )
, L
    ( Position 11 13 )
    ( Whitespace " " )
, L
    ( Position 11 14 ) Colon
, L
    ( Position 11 15 ) Colon
, L
    ( Position 11 16 )
    ( Whitespace " " )
, L
    ( Position 11 17 )
    ( TokSym "Word" )
, L
    ( Position 11 21 )
    ( Whitespace "\xd
    " )
, L
    ( Position 12 1 )
    ( Indent 2 )
, L
    ( Position 12 3 )
    ( TokOther ">" )
, L
    ( Position 12 4 )
    ( Whitespace "   " )
, L
    ( Position 12 7 ) CloseBrace
, L
    ( Position 12 8 )
    ( Whitespace "\xd
    " )
, L
    ( Position 13 1 )
    ( Indent 2 )
, L
    ( Position 13 3 )
    ( TokSym "." )
, L
    ( Position 13 4 )
    ( Whitespace "\xd
    " )
, L
    ( Position 14 1 )
    ( Indent 2 )
, L
    ( Position 14 3 )
    ( TokSym "and" )
, L
    ( Position 14 6 )
    ( Whitespace " " )
, L
    ( Position 14 7 )
    ( TokSym "you" )
, L
    ( Position 14 10 )
    ( Whitespace " " )
, L
    ( Position 14 11 )
    ( TokSym "want" )
, L
    ( Position 14 15 )
    ( Whitespace " " )
, L
    ( Position 14 16 )
    ( TokSym "to" )
, L
    ( Position 14 18 )
    ( Whitespace " " )
, L
    ( Position 14 19 )
    ( TokSym "avoid" )
, L
    ( Position 14 24 )
    ( Whitespace " " )
, L
    ( Position 14 25 )
    ( TokSym "the" )
, L
    ( Position 14 28 )
    ( Whitespace " " )
, L
    ( Position 14 29 )
    ( TokSym "the" )
, L
    ( Position 14 32 )
    ( Whitespace " " )
, L
    ( Position 14 33 )
    ( TokSym "boilerplate" )
, L
    ( Position 14 44 )
    ( Whitespace " " )
, L
    ( Position 14 45 )
    ( TokSym "of" )
, L
    ( Position 14 47 )
    ( Whitespace " " )
, L
    ( Position 14 48 )
    ( TokSym "writing" )
, L
    ( Position 14 55 )
    ( Whitespace " " )
, L
    ( Position 14 56 )
    ( TokSym "all" )
, L
    ( Position 14 59 )
    ( Whitespace " " )
, L
    ( Position 14 60 )
    ( TokSym "the" )
, L
    ( Position 14 63 )
    ( Whitespace " " )
, L
    ( Position 14 64 )
    ( TokSym "default" )
, L
    ( Position 14 71 )
    ( Whitespace " " )
, L
    ( Position 14 72 )
    ( TokSym "values" )
, L
    ( Position 14 78 )
    ( Whitespace "\xd
    " )
, L
    ( Position 15 1 )
    ( Indent 2 )
, L
    ( Position 15 3 )
    ( TokSym "every" )
, L
    ( Position 15 8 )
    ( Whitespace " " )
, L
    ( Position 15 9 )
    ( TokSym "time" )
, L
    ( Position 15 13 )
    ( Whitespace " " )
, L
    ( Position 15 14 )
    ( TokSym "you" )
, L
    ( Position 15 17 )
    ( Whitespace " " )
, L
    ( Position 15 18 )
    ( TokSym "construct" )
, L
    ( Position 15 27 )
    ( Whitespace " " )
, L
    ( Position 15 28 )
    ( TokSym "a" )
, L
    ( Position 15 29 )
    ( Whitespace " " )
, L
    ( Position 15 30 )
    ( TokSym "record" )
, L
    ( Position 15 36 )
    ( Whitespace " " )
, L
    ( Position 15 37 )
    ( TokSym "of" )
, L
    ( Position 15 39 )
    ( Whitespace " " )
, L
    ( Position 15 40 )
    ( TokSym "this" )
, L
    ( Position 15 44 )
    ( Whitespace " " )
, L
    ( Position 15 45 )
    ( TokSym "type" )
, L
    ( Position 15 49 )
    ( TokOther "," )
, L
    ( Position 15 50 )
    ( Whitespace " " )
, L
    ( Position 15 51 )
    ( TokSym "you" )
, L
    ( Position 15 54 )
    ( Whitespace " " )
, L
    ( Position 15 55 )
    ( TokSym "could" )
, L
    ( Position 15 60 )
    ( Whitespace " " )
, L
    ( Position 15 61 )
    ( TokSym "write" )
, L
    ( Position 15 66 )
    ( Whitespace " " )
, L
    ( Position 15 67 )
    ( TokSym "a" )
, L
    ( Position 15 68 )
    ( Whitespace " " )
, L
    ( Position 15 77 )
    ( LexicalError "\xd
      value" of this type:\xd
      .\xd
      > defaultFoo :: Foo\xd
      > defaultFoo = Foo { fld1 = Nothing, fld2 = Nothing, fld3 = 0 }\xd
      .\xd
      You could then use record modification syntax to make necessary changes to\xd
      this value. But perhaps you can't / don't want to provide default values for\xd
      /all/ of the fields, but only some of them? You could implement a "default\xd
      smart constructor" that would take the non-optional arguments and then fill in\xd
      the optional ones like so:\xd
      .\xd
      > defaultFoo :: Word -> Foo\xd
      > defaultFoo x = Foo { fld1 = Nothing, fld2 = Nothing, fld3 = x }\xd
      .\xd
      But then you lose the benefit of record syntax: you can't name the fields\xd
      you're providing values for.\xd
      .\xd
      This package reconciles the two problems: with only a little bit of Template\xd
      Haskell it provides a way to construct a record with optional fields while\xd
      also letting you refer to the names of those fields. You make two splices:\xd
      .\xd
      > mkToPartial ''Foo\xd
      >   -- defines 'mkfld1', 'mkfld2', 'mkfld3'\xd
      > mkFromPartial "mkFoo" [t|Foo|] [|Foo { fld1 = Nothing, fld2 = Nothing }\xd
      >   |]\xd
      >   -- defines 'mkFoo'\xd
      .\xd
      And then you can use them like so:\xd
      .\xd
      > val :: Foo\xd
      > val = mkFoo\xd
      >   $ mkfld3 123\xd
      >   ? mkfld1 (Just 456)\xd
      > -- val = Foo { fld1 = Just 456, fld2 = Nothing, fld3 = 123 }\xd
      .\xd
      The Template Haskell splice lets you define default values for a subset of the\xd
      fields, and those defaults will be used when you call @mkFoo@. You can list\xd
      fields in any order, but if you omit a mandatory field (one that doesn't have\xd
      a default), that would be a type error at compile time.\xd
      .\xd
      You can make multiple 'Data.Partial.TH.mkFromPartial' splices, this is\xd
      occasionally useful for parameterized types, for example:\xd
      .\xd
      > data Bar a =\xd
      >   { bar1 :: Maybe Int\xd
      >   , bar2 :: a\xd
      >   }\xd
      > mkToPartial ''Bar\xd
      > mkFromPartial "mkBar" [t|forall a. Bar a|]\xd
      >   [|Bar { bar1 = Nothing }\xd
      >   |]\xd
      >   -- mkBar :: ... -> Bar a, and bar2 is a required field\xd
      > mkFromPartial "mkBarMaybe" [t|forall a. Bar (Maybe a)|]\xd
      >   [|Bar { bar1 = Nothing, bar2 = Nothing }\xd
      >   |]\xd
      >   -- mkBarMaybe :: ... -> Bar (Maybe a), and bar2 is an optional field\xd
    homepage:            https://github.com/mniip/partial-records\xd
    license:             BSD3\xd
    license-file:        LICENSE\xd
    author:              mniip\xd
    maintainer:          mniip@mniip.com\xd
    copyright:           (C) mniip 2019\xd
    category:            Data\xd
    build-type:          Simple\xd
    cabal-version:       >=1.10\xd
    \xd
    library\xd
      exposed-modules:       Data.Partial\xd
                           , Data.Partial.TH\xd
                           , Data.Partial.Utils\xd
      build-depends:         base >= 4.9 && <= 4.13\xd
                           , tagged >= 0.8\xd
                           , template-haskell >= 2.11\xd
                           , transformers >= 0.5\xd
      hs-source-dirs:      src\xd
      default-language:    Haskell2010" )
, L
    ( Position 15 69 ) EOF
]
