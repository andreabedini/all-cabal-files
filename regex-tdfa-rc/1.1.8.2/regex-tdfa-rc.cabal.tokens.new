[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "Name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 6 )
    ( Whitespace "                   " )
, L
    ( Position 1 25 )
    ( TokSym "regex-tdfa-rc" )
, L
    ( Position 1 38 )
    ( Whitespace "\xd
    " )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "Version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 9 )
    ( Whitespace "                " )
, L
    ( Position 2 25 )
    ( TokSym "1.1.8.2" )
, L
    ( Position 2 32 )
    ( Whitespace "\xd
    " )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "x-revision" )
, L
    ( Position 3 11 ) Colon
, L
    ( Position 3 12 )
    ( Whitespace " " )
, L
    ( Position 3 13 )
    ( TokSym "1" )
, L
    ( Position 3 14 )
    ( Whitespace "\xd
    " )
, L
    ( Position 4 1 )
    ( Comment "-- 0.99.4 tests pnonempty' = \ p -> POr [ PEmpty, p ] instead of PNonEmpty" )
, L
    ( Position 4 75 )
    ( Whitespace "\xd
    " )
, L
    ( Position 5 1 )
    ( Comment "-- 0.99.5 remove PNonEmpty constructor" )
, L
    ( Position 5 39 )
    ( Whitespace "\xd
    " )
, L
    ( Position 6 1 )
    ( Comment "-- 0.99.6 change to nested nonEmpty calls for PBound" )
, L
    ( Position 6 53 )
    ( Whitespace "\xd
    " )
, L
    ( Position 7 1 )
    ( Comment "-- 0.99.7 Use (PGroup Nothing) in Pattern to decompose PBound" )
, L
    ( Position 7 62 )
    ( Whitespace "\xd
    " )
, L
    ( Position 8 1 )
    ( Comment "-- 0.99.8 testing chaning Maximize to Minimize for Tags, decide (a*)* is canonical problem" )
, L
    ( Position 8 91 )
    ( Whitespace "\xd
    " )
, L
    ( Position 9 1 )
    ( Comment "-- 0.99.9 testing changing bestTrans/chooseWith/choose to include enterOrbit/newFlags/(_,True) info" )
, L
    ( Position 9 100 )
    ( Whitespace "\xd
    " )
, L
    ( Position 10 1 )
    ( Comment "-- 0.99.10 fixed ((.?)*)* patterns by changing PStar nullView when mayFirstBeNull" )
, L
    ( Position 10 82 )
    ( Whitespace "\xd
    " )
, L
    ( Position 11 1 )
    ( Comment "-- 0.99.11 improve above fix and make stuff work better -- HAS BUG, along with old TDFA!" )
, L
    ( Position 11 89 )
    ( Whitespace "\xd
    " )
, L
    ( Position 12 1 )
    ( Comment "-- 0.99.12 try to debug 0.99.11 : fixed updateWinner" )
, L
    ( Position 12 53 )
    ( Whitespace "\xd
    " )
, L
    ( Position 13 1 )
    ( Comment "-- 0.99.13 more cleanup" )
, L
    ( Position 13 24 )
    ( Whitespace "\xd
    " )
, L
    ( Position 14 1 )
    ( Comment "-- 0.99.14 start changing to the new real DFA" )
, L
    ( Position 14 46 )
    ( Whitespace "\xd
    " )
, L
    ( Position 15 1 )
    ( Comment "-- 0.99.15 get string with NewDFA testing, unit tests and 1000 random regex pass" )
, L
    ( Position 15 81 )
    ( Whitespace "\xd
    " )
, L
    ( Position 16 1 )
    ( Comment "-- 0.99.16 performance? up to v15" )
, L
    ( Position 16 34 )
    ( Whitespace "\xd
    " )
, L
    ( Position 17 1 )
    ( Comment "-- 0.99.17 radical removal of flag array and adding of SetVal to handle groups" )
, L
    ( Position 17 79 )
    ( Whitespace "\xd
    " )
, L
    ( Position 18 1 )
    ( Comment "-- 0.99.18 try alternate lazy/strict strategy in NewDFA.  Fix offset laziness." )
, L
    ( Position 18 79 )
    ( Whitespace "\xd
    " )
, L
    ( Position 19 1 )
    ( Comment "-- 0.99.19 try for pre-comparison of orbit-logs!" )
, L
    ( Position 19 49 )
    ( Whitespace "\xd
    " )
, L
    ( Position 20 1 )
    ( Comment "-- 0.99.20 go to many vs single?" )
, L
    ( Position 20 33 )
    ( Whitespace "\xd
    " )
, L
    ( Position 21 1 )
    ( Comment "-- 1.0.0" )
, L
    ( Position 21 9 )
    ( Whitespace "\xd
    " )
, L
    ( Position 22 1 )
    ( Comment "-- 1.0.1 add NewDFATest.hs" )
, L
    ( Position 22 27 )
    ( Whitespace "\xd
    " )
, L
    ( Position 23 1 )
    ( Comment "-- 1.0.2 arg, the prof is fast and the normal slow!" )
, L
    ( Position 23 52 )
    ( Whitespace "\xd
    " )
, L
    ( Position 24 1 )
    ( Comment "-- 1.0.3 try to alter matchTest to not have the Bool args? No" )
, L
    ( Position 24 62 )
    ( Whitespace "\xd
    " )
, L
    ( Position 25 1 )
    ( Comment "--  np2  comment out all Testing code? No" )
, L
    ( Position 25 42 )
    ( Whitespace "\xd
    " )
, L
    ( Position 26 1 )
    ( Comment "--  np3  !off the multi? No" )
, L
    ( Position 26 28 )
    ( Whitespace "\xd
    " )
, L
    ( Position 27 1 )
    ( Comment "--  np4  comment out all Single0 and Single code? No" )
, L
    ( Position 27 53 )
    ( Whitespace "\xd
    " )
, L
    ( Position 28 1 )
    ( Comment "--  np5  comment out all Multi0 code? No" )
, L
    ( Position 28 41 )
    ( Whitespace "\xd
    " )
, L
    ( Position 29 1 )
    ( Comment "--  np6  comment out ans check? No" )
, L
    ( Position 29 35 )
    ( Whitespace "\xd
    " )
, L
    ( Position 30 1 )
    ( Comment "--  np7  just return True? Fast" )
, L
    ( Position 30 32 )
    ( Whitespace "\xd
    " )
, L
    ( Position 31 1 )
    ( Comment "--  np8  np6 and NOINLINE endOff? No" )
, L
    ( Position 31 37 )
    ( Whitespace "\xd
    " )
, L
    ( Position 32 1 )
    ( Comment "--  np9  INLINE endOf? No" )
, L
    ( Position 32 26 )
    ( Whitespace "\xd
    " )
, L
    ( Position 33 1 )
    ( Comment "--  np10 Peel off CharMap/IntMap and DFA/DT with pattern matching? No" )
, L
    ( Position 33 70 )
    ( Whitespace "\xd
    " )
, L
    ( Position 34 1 )
    ( Comment "--  np11 break multi to not look at o and just return True? Yes !!!!" )
, L
    ( Position 34 69 )
    ( Whitespace "\xd
    " )
, L
    ( Position 35 1 )
    ( Comment "--  np12 expand o in the case where t lookup get Nothing? Yes--this is the fix!?" )
, L
    ( Position 35 81 )
    ( Whitespace "\xd
    " )
, L
    ( Position 36 1 )
    ( Comment "--  np13 try to improve readability with the "mm" combinator? Yes!" )
, L
    ( Position 36 67 )
    ( Whitespace "\xd
    " )
, L
    ( Position 37 1 )
    ( Comment "-- 1.0.4 try repaired NewDFATest_SBS" )
, L
    ( Position 37 37 )
    ( Whitespace "\xd
    " )
, L
    ( Position 38 1 )
    ( Comment "-- 1.0.5 use "uncons" on SBS" )
, L
    ( Position 38 29 )
    ( Whitespace "\xd
    " )
, L
    ( Position 39 1 )
    ( Comment "-- 1.0.6 try NewDFATest_SBS with uncons" )
, L
    ( Position 39 40 )
    ( Whitespace "\xd
    " )
, L
    ( Position 40 1 )
    ( Comment "-- 1.0.7 make NewDFA directory and String_NC" )
, L
    ( Position 40 45 )
    ( Whitespace "\xd
    " )
, L
    ( Position 41 1 )
    ( Comment "-- 1.1.0 NewDFA code working" )
, L
    ( Position 41 29 )
    ( Whitespace "\xd
    " )
, L
    ( Position 42 1 )
    ( Comment "-- 1.1.1 add gnu escapes" )
, L
    ( Position 42 25 )
    ( Whitespace "\xd
    " )
, L
    ( Position 43 1 )
    ( Comment "-- 1.1.2 worked" )
, L
    ( Position 43 16 )
    ( Whitespace "\xd
    " )
, L
    ( Position 44 1 )
    ( Comment "-- 1.1.3 BROKEN after 100 characters the compressOrbit dies!" )
, L
    ( Position 44 61 )
    ( Whitespace "\xd
    " )
, L
    ( Position 45 1 )
    ( Comment "-- 1.1.4 fixed " )
, L
    ( Position 45 16 )
    ( Whitespace "\xd
    " )
, L
    ( Position 46 1 )
    ( Comment "-- 1.1.5 try needUniqTags in POr in CorePattern.hs, try (toAdvice b) for PStar child" )
, L
    ( Position 46 85 )
    ( Whitespace "\xd
    " )
, L
    ( Position 47 1 )
    ( Comment "-- 1.1.6 Fix bug preventing []] [-] [^]] [^-] (thanks to Maxime Henrion)" )
, L
    ( Position 47 73 )
    ( Whitespace "\xd
    " )
, L
    ( Position 48 1 )
    ( Comment "-- 1.1.7 fix url below" )
, L
    ( Position 48 23 )
    ( Whitespace "\xd
    " )
, L
    ( Position 49 1 )
    ( Comment "-- 1.1.8 Make ghc-7.0.2 on platorm 2011.2.0.0.0 happy" )
, L
    ( Position 49 54 )
    ( Whitespace "\xd
    " )
, L
    ( Position 50 1 )
    ( Comment "-- 1.1.8.1 Fix for ghc 7.8" )
, L
    ( Position 50 27 )
    ( Whitespace "\xd
    " )
, L
    ( Position 51 1 )
    ( Comment "-- 1.1.8.2 Remove Show instances" )
, L
    ( Position 51 33 )
    ( Whitespace "\xd
    " )
, L
    ( Position 52 1 )
    ( Indent 0 )
, L
    ( Position 52 1 )
    ( TokSym "License" )
, L
    ( Position 52 8 ) Colon
, L
    ( Position 52 9 )
    ( Whitespace "                " )
, L
    ( Position 52 25 )
    ( TokSym "BSD3" )
, L
    ( Position 52 29 )
    ( Whitespace "\xd
    " )
, L
    ( Position 53 1 )
    ( Indent 0 )
, L
    ( Position 53 1 )
    ( TokSym "License-File" )
, L
    ( Position 53 13 ) Colon
, L
    ( Position 53 14 )
    ( Whitespace "           " )
, L
    ( Position 53 25 )
    ( TokSym "LICENSE" )
, L
    ( Position 53 32 )
    ( Whitespace "\xd
    " )
, L
    ( Position 54 1 )
    ( Indent 0 )
, L
    ( Position 54 1 )
    ( TokSym "Copyright" )
, L
    ( Position 54 10 ) Colon
, L
    ( Position 54 11 )
    ( Whitespace "              " )
, L
    ( Position 54 25 )
    ( TokSym "Copyright" )
, L
    ( Position 54 34 )
    ( Whitespace " " )
, L
    ( Position 54 35 )
    ( TokOther "(" )
, L
    ( Position 54 36 )
    ( TokSym "c" )
, L
    ( Position 54 37 )
    ( TokOther ")" )
, L
    ( Position 54 38 )
    ( Whitespace " " )
, L
    ( Position 54 39 )
    ( TokSym "2007" )
, L
    ( Position 54 43 )
    ( TokOther "," )
, L
    ( Position 54 44 )
    ( Whitespace " " )
, L
    ( Position 54 45 )
    ( TokSym "Christopher" )
, L
    ( Position 54 56 )
    ( Whitespace " " )
, L
    ( Position 54 57 )
    ( TokSym "Kuklewicz" )
, L
    ( Position 54 66 )
    ( Whitespace "\xd
    " )
, L
    ( Position 55 1 )
    ( Indent 0 )
, L
    ( Position 55 1 )
    ( TokSym "Author" )
, L
    ( Position 55 7 ) Colon
, L
    ( Position 55 8 )
    ( Whitespace "                 " )
, L
    ( Position 55 25 )
    ( TokSym "Christopher" )
, L
    ( Position 55 36 )
    ( Whitespace " " )
, L
    ( Position 55 37 )
    ( TokSym "Kuklewicz" )
, L
    ( Position 55 46 )
    ( Whitespace "\xd
    " )
, L
    ( Position 56 1 )
    ( Indent 0 )
, L
    ( Position 56 1 )
    ( TokSym "Maintainer" )
, L
    ( Position 56 11 ) Colon
, L
    ( Position 56 12 )
    ( Whitespace "             " )
, L
    ( Position 56 25 )
    ( TokSym "Roman" )
, L
    ( Position 56 30 )
    ( Whitespace " " )
, L
    ( Position 56 31 )
    ( TokSym "Cheplyaka" )
, L
    ( Position 56 40 )
    ( Whitespace "\xd
    " )
, L
    ( Position 57 1 )
    ( Indent 0 )
, L
    ( Position 57 1 )
    ( TokSym "Stability" )
, L
    ( Position 57 10 ) Colon
, L
    ( Position 57 11 )
    ( Whitespace "              " )
, L
    ( Position 57 25 )
    ( TokSym "Seems" )
, L
    ( Position 57 30 )
    ( Whitespace " " )
, L
    ( Position 57 31 )
    ( TokSym "to" )
, L
    ( Position 57 33 )
    ( Whitespace " " )
, L
    ( Position 57 34 )
    ( TokSym "work" )
, L
    ( Position 57 38 )
    ( TokOther "," )
, L
    ( Position 57 39 )
    ( Whitespace " " )
, L
    ( Position 57 40 )
    ( TokSym "but" )
, L
    ( Position 57 43 )
    ( Whitespace " " )
, L
    ( Position 57 44 )
    ( TokSym "not" )
, L
    ( Position 57 47 )
    ( Whitespace " " )
, L
    ( Position 57 48 )
    ( TokSym "POSIX" )
, L
    ( Position 57 53 )
    ( Whitespace " " )
, L
    ( Position 57 54 )
    ( TokSym "yet" )
, L
    ( Position 57 57 )
    ( Whitespace "\xd
    " )
, L
    ( Position 58 1 )
    ( Indent 0 )
, L
    ( Position 58 1 )
    ( TokSym "Homepage" )
, L
    ( Position 58 9 ) Colon
, L
    ( Position 58 10 )
    ( Whitespace "               " )
, L
    ( Position 58 25 )
    ( TokSym "http" )
, L
    ( Position 58 29 ) Colon
, L
    ( Position 58 30 )
    ( TokOther "//" )
, L
    ( Position 58 32 )
    ( TokSym "hackage.haskell.org" )
, L
    ( Position 58 51 )
    ( TokOther "/" )
, L
    ( Position 58 52 )
    ( TokSym "package" )
, L
    ( Position 58 59 )
    ( TokOther "/" )
, L
    ( Position 58 60 )
    ( TokSym "regex-tdfa" )
, L
    ( Position 58 70 )
    ( Whitespace "\xd
    " )
, L
    ( Position 59 1 )
    ( Indent 0 )
, L
    ( Position 59 1 )
    ( TokSym "Package-URL" )
, L
    ( Position 59 12 ) Colon
, L
    ( Position 59 13 )
    ( Whitespace "            " )
, L
    ( Position 59 25 )
    ( TokSym "http" )
, L
    ( Position 59 29 ) Colon
, L
    ( Position 59 30 )
    ( TokOther "//" )
, L
    ( Position 59 32 )
    ( TokSym "code.haskell.org" )
, L
    ( Position 59 48 )
    ( TokOther "/" )
, L
    ( Position 59 49 )
    ( TokSym "regex-tdfa" )
, L
    ( Position 59 59 )
    ( TokOther "/" )
, L
    ( Position 59 60 )
    ( Whitespace "\xd
    " )
, L
    ( Position 60 1 )
    ( Indent 0 )
, L
    ( Position 60 1 )
    ( TokSym "Synopsis" )
, L
    ( Position 60 9 ) Colon
, L
    ( Position 60 10 )
    ( Whitespace "               " )
, L
    ( Position 60 25 )
    ( TokSym "Replaces" )
, L
    ( Position 60 33 )
    ( TokOther "/" )
, L
    ( Position 60 34 )
    ( TokSym "Enhances" )
, L
    ( Position 60 42 )
    ( Whitespace " " )
, L
    ( Position 60 43 )
    ( TokSym "Text.Regex" )
, L
    ( Position 60 53 )
    ( Whitespace "\xd
    " )
, L
    ( Position 61 1 )
    ( Indent 0 )
, L
    ( Position 61 1 )
    ( TokSym "Description" )
, L
    ( Position 61 12 ) Colon
, L
    ( Position 61 13 )
    ( Whitespace "            " )
, L
    ( Position 61 25 )
    ( TokSym "A" )
, L
    ( Position 61 26 )
    ( Whitespace " " )
, L
    ( Position 61 27 )
    ( TokSym "new" )
, L
    ( Position 61 30 )
    ( Whitespace " " )
, L
    ( Position 61 31 )
    ( TokSym "all" )
, L
    ( Position 61 34 )
    ( Whitespace " " )
, L
    ( Position 61 35 )
    ( TokSym "Haskell" )
, L
    ( Position 61 42 )
    ( Whitespace " " )
, L
    ( Position 61 43 )
    ( TokStr "tagged" )
, L
    ( Position 61 51 )
    ( Whitespace " " )
, L
    ( Position 61 52 )
    ( TokSym "DFA" )
, L
    ( Position 61 55 )
    ( Whitespace " " )
, L
    ( Position 61 56 )
    ( TokSym "regex" )
, L
    ( Position 61 61 )
    ( Whitespace " " )
, L
    ( Position 61 62 )
    ( TokSym "engine" )
, L
    ( Position 61 68 )
    ( TokOther "," )
, L
    ( Position 61 69 )
    ( Whitespace " " )
, L
    ( Position 61 70 )
    ( TokSym "inspired" )
, L
    ( Position 61 78 )
    ( Whitespace " " )
, L
    ( Position 61 79 )
    ( TokSym "by" )
, L
    ( Position 61 81 )
    ( Whitespace " " )
, L
    ( Position 61 82 )
    ( TokSym "libtre" )
, L
    ( Position 61 88 )
    ( Whitespace " " )
, L
    ( Position 61 89 )
    ( TokOther "(" )
, L
    ( Position 61 90 )
    ( TokSym "fork" )
, L
    ( Position 61 94 )
    ( Whitespace " " )
, L
    ( Position 61 95 )
    ( TokSym "by" )
, L
    ( Position 61 97 )
    ( Whitespace " " )
, L
    ( Position 61 98 )
    ( TokSym "Roman" )
, L
    ( Position 61 103 )
    ( Whitespace " " )
, L
    ( Position 61 104 )
    ( TokSym "Cheplyaka" )
, L
    ( Position 61 113 )
    ( TokOther ")" )
, L
    ( Position 61 114 )
    ( Whitespace "\xd
    " )
, L
    ( Position 62 1 )
    ( Indent 0 )
, L
    ( Position 62 1 )
    ( TokSym "Category" )
, L
    ( Position 62 9 ) Colon
, L
    ( Position 62 10 )
    ( Whitespace "               " )
, L
    ( Position 62 25 )
    ( TokSym "Text" )
, L
    ( Position 62 29 )
    ( Whitespace "\xd
    " )
, L
    ( Position 63 1 )
    ( Indent 0 )
, L
    ( Position 63 1 )
    ( TokSym "Tested-With" )
, L
    ( Position 63 12 ) Colon
, L
    ( Position 63 13 )
    ( Whitespace "            " )
, L
    ( Position 63 25 )
    ( TokSym "GHC" )
, L
    ( Position 63 28 )
    ( Whitespace "\xd
    " )
, L
    ( Position 64 1 )
    ( Indent 0 )
, L
    ( Position 64 1 )
    ( TokSym "Build-Type" )
, L
    ( Position 64 11 ) Colon
, L
    ( Position 64 12 )
    ( Whitespace "             " )
, L
    ( Position 64 25 )
    ( TokSym "Simple" )
, L
    ( Position 64 31 )
    ( Whitespace "\xd
    " )
, L
    ( Position 65 1 )
    ( Indent 0 )
, L
    ( Position 65 1 )
    ( TokSym "Cabal-Version" )
, L
    ( Position 65 14 ) Colon
, L
    ( Position 65 15 )
    ( Whitespace "          " )
, L
    ( Position 65 25 )
    ( TokOther ">=" )
, L
    ( Position 65 27 )
    ( Whitespace " " )
, L
    ( Position 65 28 )
    ( TokSym "1.2.3" )
, L
    ( Position 65 33 )
    ( Whitespace "\xd
    " )
, L
    ( Position 66 1 )
    ( Whitespace "\xd
    " )
, L
    ( Position 67 1 )
    ( Indent 0 )
, L
    ( Position 67 1 )
    ( TokSym "flag" )
, L
    ( Position 67 5 )
    ( Whitespace " " )
, L
    ( Position 67 6 )
    ( TokSym "base4" )
, L
    ( Position 67 11 )
    ( Whitespace "\xd
    " )
, L
    ( Position 68 1 )
    ( Whitespace "\xd
    " )
, L
    ( Position 69 1 )
    ( Indent 0 )
, L
    ( Position 69 1 )
    ( TokSym "library" )
, L
    ( Position 69 8 )
    ( Whitespace " " )
, L
    ( Position 69 9 )
    ( Whitespace "\xd
    " )
, L
    ( Position 70 1 )
    ( Indent 2 )
, L
    ( Position 70 3 )
    ( TokSym "Build-Depends" )
, L
    ( Position 70 16 ) Colon
, L
    ( Position 70 17 )
    ( Whitespace "        " )
, L
    ( Position 70 25 )
    ( TokSym "regex-base" )
, L
    ( Position 70 35 )
    ( Whitespace " " )
, L
    ( Position 70 36 )
    ( TokOther ">=" )
, L
    ( Position 70 38 )
    ( Whitespace " " )
, L
    ( Position 70 39 )
    ( TokSym "0.93.1" )
, L
    ( Position 70 45 )
    ( Whitespace " " )
, L
    ( Position 70 46 )
    ( TokOther "&&" )
, L
    ( Position 70 48 )
    ( Whitespace " " )
, L
    ( Position 70 49 )
    ( TokOther "<" )
, L
    ( Position 70 50 )
    ( Whitespace " " )
, L
    ( Position 70 51 )
    ( TokSym "0.94" )
, L
    ( Position 70 55 )
    ( TokOther "," )
, L
    ( Position 70 56 )
    ( Whitespace " " )
, L
    ( Position 70 57 )
    ( TokSym "parsec" )
, L
    ( Position 70 63 )
    ( TokOther "," )
, L
    ( Position 70 64 )
    ( Whitespace " " )
, L
    ( Position 70 65 )
    ( TokSym "mtl" )
, L
    ( Position 70 68 )
    ( TokOther "," )
, L
    ( Position 70 69 )
    ( Whitespace " " )
, L
    ( Position 70 70 )
    ( TokSym "containers" )
, L
    ( Position 70 80 )
    ( TokOther "," )
, L
    ( Position 70 81 )
    ( Whitespace " " )
, L
    ( Position 70 82 )
    ( TokSym "array" )
, L
    ( Position 70 87 )
    ( Whitespace " " )
, L
    ( Position 70 88 )
    ( TokOther ">=" )
, L
    ( Position 70 90 )
    ( Whitespace " " )
, L
    ( Position 70 91 )
    ( TokSym "0.4" )
, L
    ( Position 70 94 )
    ( TokOther "," )
, L
    ( Position 70 95 )
    ( Whitespace " " )
, L
    ( Position 70 96 )
    ( TokSym "bytestring" )
, L
    ( Position 70 106 )
    ( Whitespace "\xd
    " )
, L
    ( Position 71 1 )
    ( Indent 2 )
, L
    ( Position 71 3 )
    ( TokSym "if" )
, L
    ( Position 71 5 )
    ( Whitespace " " )
, L
    ( Position 71 6 )
    ( TokSym "flag" )
, L
    ( Position 71 10 )
    ( TokOther "(" )
, L
    ( Position 71 11 )
    ( TokSym "base4" )
, L
    ( Position 71 16 )
    ( TokOther ")" )
, L
    ( Position 71 17 )
    ( Whitespace "\xd
    " )
, L
    ( Position 72 1 )
    ( Indent 4 )
, L
    ( Position 72 5 )
    ( TokSym "Build-Depends" )
, L
    ( Position 72 18 ) Colon
, L
    ( Position 72 19 )
    ( Whitespace "      " )
, L
    ( Position 72 25 )
    ( TokSym "base" )
, L
    ( Position 72 29 )
    ( Whitespace " " )
, L
    ( Position 72 30 )
    ( TokOther ">=" )
, L
    ( Position 72 32 )
    ( Whitespace " " )
, L
    ( Position 72 33 )
    ( TokSym "4.6" )
, L
    ( Position 72 36 )
    ( Whitespace " " )
, L
    ( Position 72 37 )
    ( TokOther "&&" )
, L
    ( Position 72 39 )
    ( Whitespace " " )
, L
    ( Position 72 40 )
    ( TokOther "<" )
, L
    ( Position 72 41 )
    ( Whitespace " " )
, L
    ( Position 72 42 )
    ( TokSym "4.11" )
, L
    ( Position 72 46 )
    ( TokOther "," )
, L
    ( Position 72 47 )
    ( Whitespace " " )
, L
    ( Position 72 48 )
    ( TokSym "ghc-prim" )
, L
    ( Position 72 56 )
    ( Whitespace "\xd
    " )
, L
    ( Position 73 1 )
    ( Indent 2 )
, L
    ( Position 73 3 )
    ( TokSym "else" )
, L
    ( Position 73 7 )
    ( Whitespace "\xd
    " )
, L
    ( Position 74 1 )
    ( Indent 4 )
, L
    ( Position 74 5 )
    ( TokSym "Build-Depends" )
, L
    ( Position 74 18 ) Colon
, L
    ( Position 74 19 )
    ( Whitespace "      " )
, L
    ( Position 74 25 )
    ( TokSym "base" )
, L
    ( Position 74 29 )
    ( Whitespace " " )
, L
    ( Position 74 30 )
    ( TokOther "<" )
, L
    ( Position 74 31 )
    ( Whitespace " " )
, L
    ( Position 74 32 )
    ( TokSym "4.0" )
, L
    ( Position 74 35 )
    ( Whitespace "\xd
    " )
, L
    ( Position 75 1 )
    ( Whitespace "\xd
    " )
, L
    ( Position 76 1 )
    ( Indent 2 )
, L
    ( Position 76 3 )
    ( TokSym "other-modules" )
, L
    ( Position 76 16 ) Colon
, L
    ( Position 76 17 )
    ( Whitespace "          " )
, L
    ( Position 76 27 )
    ( TokSym "Paths_regex_tdfa_rc" )
, L
    ( Position 76 46 )
    ( Whitespace "\xd
    " )
, L
    ( Position 77 1 )
    ( Indent 2 )
, L
    ( Position 77 3 )
    ( TokSym "Exposed-Modules" )
, L
    ( Position 77 18 ) Colon
, L
    ( Position 77 19 )
    ( Whitespace "        " )
, L
    ( Position 77 27 )
    ( TokSym "Data.IntMap.CharMap2" )
, L
    ( Position 77 47 )
    ( Whitespace "\xd
    " )
, L
    ( Position 78 1 )
    ( Indent 26 )
, L
    ( Position 78 27 )
    ( TokSym "Data.IntMap.EnumMap2" )
, L
    ( Position 78 47 )
    ( Whitespace "\xd
    " )
, L
    ( Position 79 1 )
    ( Indent 26 )
, L
    ( Position 79 27 )
    ( TokSym "Data.IntSet.EnumSet2" )
, L
    ( Position 79 47 )
    ( Whitespace "\xd
    " )
, L
    ( Position 80 1 )
    ( Indent 26 )
, L
    ( Position 80 27 )
    ( TokSym "Text.Regex.TDFA" )
, L
    ( Position 80 42 )
    ( Whitespace "\xd
    " )
, L
    ( Position 81 1 )
    ( Indent 26 )
, L
    ( Position 81 27 )
    ( TokSym "Text.Regex.TDFA.ByteString" )
, L
    ( Position 81 53 )
    ( Whitespace "\xd
    " )
, L
    ( Position 82 1 )
    ( Indent 26 )
, L
    ( Position 82 27 )
    ( TokSym "Text.Regex.TDFA.ByteString.Lazy" )
, L
    ( Position 82 58 )
    ( Whitespace "\xd
    " )
, L
    ( Position 83 1 )
    ( Indent 26 )
, L
    ( Position 83 27 )
    ( TokSym "Text.Regex.TDFA.Common" )
, L
    ( Position 83 49 )
    ( Whitespace "\xd
    " )
, L
    ( Position 84 1 )
    ( Indent 26 )
, L
    ( Position 84 27 )
    ( TokSym "Text.Regex.TDFA.CorePattern" )
, L
    ( Position 84 54 )
    ( Whitespace "\xd
    " )
, L
    ( Position 85 1 )
    ( Indent 26 )
, L
    ( Position 85 27 )
    ( TokSym "Text.Regex.TDFA.IntArrTrieSet" )
, L
    ( Position 85 56 )
    ( Whitespace "\xd
    " )
, L
    ( Position 86 1 )
    ( Indent 26 )
, L
    ( Position 86 27 )
    ( TokSym "Text.Regex.TDFA.NewDFA.Engine" )
, L
    ( Position 86 56 )
    ( Whitespace "\xd
    " )
, L
    ( Position 87 1 )
    ( Indent 26 )
, L
    ( Position 87 27 )
    ( TokSym "Text.Regex.TDFA.NewDFA.Engine_FA" )
, L
    ( Position 87 59 )
    ( Whitespace "\xd
    " )
, L
    ( Position 88 1 )
    ( Indent 26 )
, L
    ( Position 88 27 )
    ( TokSym "Text.Regex.TDFA.NewDFA.Engine_NC" )
, L
    ( Position 88 59 )
    ( Whitespace "\xd
    " )
, L
    ( Position 89 1 )
    ( Indent 26 )
, L
    ( Position 89 27 )
    ( TokSym "Text.Regex.TDFA.NewDFA.Engine_NC_FA" )
, L
    ( Position 89 62 )
    ( Whitespace "\xd
    " )
, L
    ( Position 90 1 )
    ( Indent 26 )
, L
    ( Position 90 27 )
    ( TokSym "Text.Regex.TDFA.NewDFA.Tester" )
, L
    ( Position 90 56 )
    ( Whitespace "\xd
    " )
, L
    ( Position 91 1 )
    ( Indent 26 )
, L
    ( Position 91 27 )
    ( TokSym "Text.Regex.TDFA.NewDFA.Uncons" )
, L
    ( Position 91 56 )
    ( Whitespace "\xd
    " )
, L
    ( Position 92 1 )
    ( Indent 26 )
, L
    ( Position 92 27 )
    ( TokSym "Text.Regex.TDFA.NewDFA.MakeTest" )
, L
    ( Position 92 58 )
    ( Whitespace "\xd
    " )
, L
    ( Position 93 1 )
    ( Indent 26 )
, L
    ( Position 93 27 )
    ( TokSym "Text.Regex.TDFA.Pattern" )
, L
    ( Position 93 50 )
    ( Whitespace "\xd
    " )
, L
    ( Position 94 1 )
    ( Indent 26 )
, L
    ( Position 94 27 )
    ( TokSym "Text.Regex.TDFA.ReadRegex" )
, L
    ( Position 94 52 )
    ( Whitespace "\xd
    " )
, L
    ( Position 95 1 )
    ( Indent 26 )
, L
    ( Position 95 27 )
    ( TokSym "Text.Regex.TDFA.Sequence" )
, L
    ( Position 95 51 )
    ( Whitespace "\xd
    " )
, L
    ( Position 96 1 )
    ( Indent 26 )
, L
    ( Position 96 27 )
    ( TokSym "Text.Regex.TDFA.String" )
, L
    ( Position 96 49 )
    ( Whitespace "\xd
    " )
, L
    ( Position 97 1 )
    ( Indent 26 )
, L
    ( Position 97 27 )
    ( TokSym "Text.Regex.TDFA.TDFA" )
, L
    ( Position 97 47 )
    ( Whitespace "\xd
    " )
, L
    ( Position 98 1 )
    ( Indent 26 )
, L
    ( Position 98 27 )
    ( TokSym "Text.Regex.TDFA.TNFA" )
, L
    ( Position 98 47 )
    ( Whitespace "\xd
    " )
, L
    ( Position 99 1 )
    ( Indent 2 )
, L
    ( Position 99 3 )
    ( TokSym "Buildable" )
, L
    ( Position 99 12 ) Colon
, L
    ( Position 99 13 )
    ( Whitespace "              " )
, L
    ( Position 99 27 )
    ( TokSym "True" )
, L
    ( Position 99 31 )
    ( Whitespace "\xd
    " )
, L
    ( Position 100 1 )
    ( Indent 2 )
, L
    ( Position 100 3 )
    ( TokSym "Extensions" )
, L
    ( Position 100 13 ) Colon
, L
    ( Position 100 14 )
    ( Whitespace "             " )
, L
    ( Position 100 27 )
    ( TokSym "MultiParamTypeClasses" )
, L
    ( Position 100 48 )
    ( TokOther "," )
, L
    ( Position 100 49 )
    ( Whitespace " " )
, L
    ( Position 100 50 )
    ( TokSym "FunctionalDependencies" )
, L
    ( Position 100 72 )
    ( TokOther "," )
, L
    ( Position 100 73 )
    ( Whitespace " " )
, L
    ( Position 100 74 )
    ( TokSym "BangPatterns" )
, L
    ( Position 100 86 )
    ( TokOther "," )
, L
    ( Position 100 87 )
    ( Whitespace " " )
, L
    ( Position 100 88 )
    ( TokSym "MagicHash" )
, L
    ( Position 100 97 )
    ( TokOther "," )
, L
    ( Position 100 98 )
    ( Whitespace " " )
, L
    ( Position 100 99 )
    ( TokSym "RecursiveDo" )
, L
    ( Position 100 110 )
    ( TokOther "," )
, L
    ( Position 100 111 )
    ( Whitespace " " )
, L
    ( Position 100 112 )
    ( TokSym "NoMonoPatBinds" )
, L
    ( Position 100 126 )
    ( TokOther "," )
, L
    ( Position 100 127 )
    ( Whitespace " " )
, L
    ( Position 100 128 )
    ( TokSym "ForeignFunctionInterface" )
, L
    ( Position 100 152 )
    ( TokOther "," )
, L
    ( Position 100 153 )
    ( Whitespace " " )
, L
    ( Position 100 154 )
    ( TokSym "UnboxedTuples" )
, L
    ( Position 100 167 )
    ( TokOther "," )
, L
    ( Position 100 168 )
    ( Whitespace " " )
, L
    ( Position 100 169 )
    ( TokSym "TypeOperators" )
, L
    ( Position 100 182 )
    ( TokOther "," )
, L
    ( Position 100 183 )
    ( Whitespace " " )
, L
    ( Position 100 184 )
    ( TokSym "FlexibleContexts" )
, L
    ( Position 100 200 )
    ( TokOther "," )
, L
    ( Position 100 201 )
    ( Whitespace " " )
, L
    ( Position 100 202 )
    ( TokSym "ExistentialQuantification" )
, L
    ( Position 100 227 )
    ( TokOther "," )
, L
    ( Position 100 228 )
    ( Whitespace " " )
, L
    ( Position 100 229 )
    ( TokSym "UnliftedFFITypes" )
, L
    ( Position 100 245 )
    ( TokOther "," )
, L
    ( Position 100 246 )
    ( Whitespace " " )
, L
    ( Position 100 247 )
    ( TokSym "TypeSynonymInstances" )
, L
    ( Position 100 267 )
    ( TokOther "," )
, L
    ( Position 100 268 )
    ( Whitespace " " )
, L
    ( Position 100 269 )
    ( TokSym "FlexibleInstances" )
, L
    ( Position 100 286 )
    ( Whitespace "\xd
    " )
, L
    ( Position 101 1 )
    ( Indent 2 )
, L
    ( Position 101 3 )
    ( TokSym "GHC-Options" )
, L
    ( Position 101 14 ) Colon
, L
    ( Position 101 15 )
    ( Whitespace "            " )
, L
    ( Position 101 27 )
    ( TokSym "-Wall" )
, L
    ( Position 101 32 )
    ( Whitespace " " )
, L
    ( Position 101 33 )
    ( TokSym "-funbox-strict-fields" )
, L
    ( Position 101 54 )
    ( Whitespace " " )
, L
    ( Position 101 55 )
    ( TokSym "-fspec-constr-count" )
, L
    ( Position 101 74 )
    ( TokOther "=" )
, L
    ( Position 101 75 )
    ( TokSym "10" )
, L
    ( Position 101 77 )
    ( Whitespace " " )
, L
    ( Position 101 78 )
    ( TokSym "-O2" )
, L
    ( Position 101 81 )
    ( Whitespace " " )
, L
    ( Position 101 82 )
    ( TokSym "-fno-warn-orphans" )
, L
    ( Position 101 99 )
    ( Whitespace "\xd
    " )
, L
    ( Position 102 1 )
    ( Indent 2 )
, L
    ( Position 102 3 )
    ( TokSym "GHC-Prof-Options" )
, L
    ( Position 102 19 ) Colon
, L
    ( Position 102 20 )
    ( Whitespace "       " )
, L
    ( Position 102 27 )
    ( TokSym "-auto-all" )
, L
    ( Position 102 36 )
    ( Whitespace "\xd
    " )
, L
    ( Position 103 1 ) EOF
]
