[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 6 )
    ( Whitespace "                " )
, L
    ( Position 1 22 )
    ( TokSym "streaming-bytestring" )
, L
    ( Position 1 42 )
    ( Whitespace "
    " )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 9 )
    ( Whitespace "             " )
, L
    ( Position 2 22 )
    ( TokSym "0.1.0.0" )
, L
    ( Position 2 29 )
    ( Whitespace "
    " )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "synopsis" )
, L
    ( Position 3 9 ) Colon
, L
    ( Position 3 10 )
    ( Whitespace "            " )
, L
    ( Position 3 22 )
    ( TokSym "Effectful" )
, L
    ( Position 3 31 )
    ( Whitespace " " )
, L
    ( Position 3 32 )
    ( TokSym "sequences" )
, L
    ( Position 3 41 )
    ( Whitespace " " )
, L
    ( Position 3 42 )
    ( TokSym "of" )
, L
    ( Position 3 44 )
    ( Whitespace " " )
, L
    ( Position 3 45 )
    ( TokSym "bytes." )
, L
    ( Position 3 51 )
    ( Whitespace "
    " )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "description" )
, L
    ( Position 4 12 ) Colon
, L
    ( Position 4 13 )
    ( Whitespace "         " )
, L
    ( Position 4 22 )
    ( TokSym "This" )
, L
    ( Position 4 26 )
    ( Whitespace " " )
, L
    ( Position 4 27 )
    ( TokSym "is" )
, L
    ( Position 4 29 )
    ( Whitespace " " )
, L
    ( Position 4 30 )
    ( TokSym "an" )
, L
    ( Position 4 32 )
    ( Whitespace " " )
, L
    ( Position 4 33 )
    ( TokSym "implementation" )
, L
    ( Position 4 47 )
    ( Whitespace " " )
, L
    ( Position 4 48 )
    ( TokSym "of" )
, L
    ( Position 4 50 )
    ( Whitespace " " )
, L
    ( Position 4 51 )
    ( TokSym "effectful" )
, L
    ( Position 4 60 )
    ( TokOther "," )
, L
    ( Position 4 61 )
    ( Whitespace " " )
, L
    ( Position 4 62 )
    ( TokSym "monadic" )
, L
    ( Position 4 69 )
    ( Whitespace " " )
, L
    ( Position 4 70 )
    ( TokSym "bytestrings" )
, L
    ( Position 4 81 )
    ( TokOther "," )
, L
    ( Position 4 82 )
    ( Whitespace "
    " )
, L
    ( Position 5 1 )
    ( Indent 21 )
, L
    ( Position 5 22 )
    ( TokSym "adequate" )
, L
    ( Position 5 30 )
    ( Whitespace " " )
, L
    ( Position 5 31 )
    ( TokSym "for" )
, L
    ( Position 5 34 )
    ( Whitespace " " )
, L
    ( Position 5 35 )
    ( TokSym "non-lazy-io." )
, L
    ( Position 5 47 )
    ( Whitespace " " )
, L
    ( Position 5 48 )
    ( Whitespace "
    " )
, L
    ( Position 6 1 )
    ( Indent 21 )
, L
    ( Position 6 22 )
    ( TokSym "." )
, L
    ( Position 6 23 )
    ( Whitespace "
    " )
, L
    ( Position 7 1 )
    ( Indent 21 )
, L
    ( Position 7 22 )
    ( TokSym "Interoperation" )
, L
    ( Position 7 36 )
    ( Whitespace " " )
, L
    ( Position 7 37 )
    ( TokSym "with" )
, L
    ( Position 7 41 )
    ( Whitespace " " )
, L
    ( Position 7 42 )
    ( TokOther "@" )
, L
    ( Position 7 43 )
    ( TokSym "pipes" )
, L
    ( Position 7 48 )
    ( TokOther "@" )
, L
    ( Position 7 49 )
    ( Whitespace " " )
, L
    ( Position 7 50 )
    ( TokSym "uses" )
, L
    ( Position 7 54 )
    ( Whitespace " " )
, L
    ( Position 7 55 )
    ( TokSym "this" )
, L
    ( Position 7 59 )
    ( Whitespace " " )
, L
    ( Position 7 60 )
    ( TokSym "isomorphism" )
, L
    ( Position 7 71 ) Colon
, L
    ( Position 7 72 )
    ( Whitespace "
    " )
, L
    ( Position 8 1 )
    ( Indent 21 )
, L
    ( Position 8 22 )
    ( TokSym "." )
, L
    ( Position 8 23 )
    ( Whitespace " " )
, L
    ( Position 8 24 )
    ( Whitespace "
    " )
, L
    ( Position 9 1 )
    ( Indent 21 )
, L
    ( Position 9 22 )
    ( TokOther ">" )
, L
    ( Position 9 23 )
    ( Whitespace " " )
, L
    ( Position 9 24 )
    ( TokSym "Streaming.unfoldrChunks" )
, L
    ( Position 9 47 )
    ( Whitespace " " )
, L
    ( Position 9 48 )
    ( TokSym "Pipes.next" )
, L
    ( Position 9 58 )
    ( Whitespace " " )
, L
    ( Position 9 59 ) Colon
, L
    ( Position 9 60 ) Colon
, L
    ( Position 9 61 )
    ( Whitespace " " )
, L
    ( Position 9 62 )
    ( TokSym "Monad" )
, L
    ( Position 9 67 )
    ( Whitespace " " )
, L
    ( Position 9 68 )
    ( TokSym "m" )
, L
    ( Position 9 69 )
    ( Whitespace " " )
, L
    ( Position 9 70 )
    ( TokOther "=>" )
, L
    ( Position 9 72 )
    ( Whitespace " " )
, L
    ( Position 9 73 )
    ( TokSym "Producer" )
, L
    ( Position 9 81 )
    ( Whitespace " " )
, L
    ( Position 9 82 )
    ( TokSym "ByteString" )
, L
    ( Position 9 92 )
    ( Whitespace " " )
, L
    ( Position 9 93 )
    ( TokSym "m" )
, L
    ( Position 9 94 )
    ( Whitespace " " )
, L
    ( Position 9 95 )
    ( TokSym "r" )
, L
    ( Position 9 96 )
    ( Whitespace " " )
, L
    ( Position 9 97 )
    ( TokOther "->" )
, L
    ( Position 9 99 )
    ( Whitespace " " )
, L
    ( Position 9 100 )
    ( TokSym "ByteString" )
, L
    ( Position 9 110 )
    ( Whitespace " " )
, L
    ( Position 9 111 )
    ( TokSym "m" )
, L
    ( Position 9 112 )
    ( Whitespace " " )
, L
    ( Position 9 113 )
    ( TokSym "r" )
, L
    ( Position 9 114 )
    ( Whitespace "
    " )
, L
    ( Position 10 1 )
    ( Indent 21 )
, L
    ( Position 10 22 )
    ( TokOther ">" )
, L
    ( Position 10 23 )
    ( Whitespace " " )
, L
    ( Position 10 24 )
    ( TokSym "Pipes.unfoldr" )
, L
    ( Position 10 37 )
    ( Whitespace " " )
, L
    ( Position 10 38 )
    ( TokSym "Streaming.nextChunk" )
, L
    ( Position 10 57 )
    ( Whitespace "  " )
, L
    ( Position 10 59 ) Colon
, L
    ( Position 10 60 ) Colon
, L
    ( Position 10 61 )
    ( Whitespace " " )
, L
    ( Position 10 62 )
    ( TokSym "Monad" )
, L
    ( Position 10 67 )
    ( Whitespace " " )
, L
    ( Position 10 68 )
    ( TokSym "m" )
, L
    ( Position 10 69 )
    ( Whitespace " " )
, L
    ( Position 10 70 )
    ( TokOther "=>" )
, L
    ( Position 10 72 )
    ( Whitespace " " )
, L
    ( Position 10 73 )
    ( TokSym "ByteString" )
, L
    ( Position 10 83 )
    ( Whitespace " " )
, L
    ( Position 10 84 )
    ( TokSym "m" )
, L
    ( Position 10 85 )
    ( Whitespace " " )
, L
    ( Position 10 86 )
    ( TokSym "r" )
, L
    ( Position 10 87 )
    ( Whitespace " " )
, L
    ( Position 10 88 )
    ( TokOther "->" )
, L
    ( Position 10 90 )
    ( Whitespace " " )
, L
    ( Position 10 91 )
    ( TokSym "Producer" )
, L
    ( Position 10 99 )
    ( Whitespace " " )
, L
    ( Position 10 100 )
    ( TokSym "ByteString" )
, L
    ( Position 10 110 )
    ( Whitespace " " )
, L
    ( Position 10 111 )
    ( TokSym "m" )
, L
    ( Position 10 112 )
    ( Whitespace " " )
, L
    ( Position 10 113 )
    ( TokSym "r" )
, L
    ( Position 10 114 )
    ( Whitespace "
    " )
, L
    ( Position 11 1 )
    ( Indent 21 )
, L
    ( Position 11 22 )
    ( TokSym "." )
, L
    ( Position 11 23 )
    ( Whitespace "
    " )
, L
    ( Position 12 1 )
    ( Indent 21 )
, L
    ( Position 12 22 )
    ( TokSym "Interoperation" )
, L
    ( Position 12 36 )
    ( Whitespace " " )
, L
    ( Position 12 37 )
    ( TokSym "with" )
, L
    ( Position 12 41 )
    ( Whitespace " " )
, L
    ( Position 12 42 )
    ( TokOther "@" )
, L
    ( Position 12 43 )
    ( TokSym "io-streams" )
, L
    ( Position 12 53 )
    ( TokOther "@" )
, L
    ( Position 12 54 )
    ( Whitespace " " )
, L
    ( Position 12 55 )
    ( TokSym "is" )
, L
    ( Position 12 57 )
    ( Whitespace " " )
, L
    ( Position 12 58 )
    ( TokSym "thus" )
, L
    ( Position 12 62 ) Colon
, L
    ( Position 12 63 )
    ( Whitespace "
    " )
, L
    ( Position 13 1 )
    ( Indent 21 )
, L
    ( Position 13 22 )
    ( TokSym "." )
, L
    ( Position 13 23 )
    ( Whitespace "
    " )
, L
    ( Position 14 1 )
    ( Indent 21 )
, L
    ( Position 14 22 )
    ( TokOther ">" )
, L
    ( Position 14 23 )
    ( Whitespace " " )
, L
    ( Position 14 24 )
    ( TokSym "IOStreams.unfoldM" )
, L
    ( Position 14 41 )
    ( Whitespace " " )
, L
    ( Position 14 42 )
    ( TokSym "Streaming.unconsChunk" )
, L
    ( Position 14 63 )
    ( Whitespace " " )
, L
    ( Position 14 64 ) Colon
, L
    ( Position 14 65 ) Colon
, L
    ( Position 14 66 )
    ( Whitespace " " )
, L
    ( Position 14 67 )
    ( TokSym "ByteString" )
, L
    ( Position 14 77 )
    ( Whitespace " " )
, L
    ( Position 14 78 )
    ( TokSym "IO" )
, L
    ( Position 14 80 )
    ( Whitespace " " )
, L
    ( Position 14 81 )
    ( TokOther "(" )
, L
    ( Position 14 82 )
    ( TokOther ")" )
, L
    ( Position 14 83 )
    ( Whitespace " " )
, L
    ( Position 14 84 )
    ( TokOther "->" )
, L
    ( Position 14 86 )
    ( Whitespace " " )
, L
    ( Position 14 87 )
    ( TokSym "IO" )
, L
    ( Position 14 89 )
    ( Whitespace " " )
, L
    ( Position 14 90 )
    ( TokOther "(" )
, L
    ( Position 14 91 )
    ( TokSym "InputStream" )
, L
    ( Position 14 102 )
    ( Whitespace " " )
, L
    ( Position 14 103 )
    ( TokSym "ByteString" )
, L
    ( Position 14 113 )
    ( TokOther ")" )
, L
    ( Position 14 114 )
    ( Whitespace "
    " )
, L
    ( Position 15 1 )
    ( Indent 21 )
, L
    ( Position 15 22 )
    ( TokOther ">" )
, L
    ( Position 15 23 )
    ( Whitespace " " )
, L
    ( Position 15 24 )
    ( TokSym "Streaming.reread" )
, L
    ( Position 15 40 )
    ( Whitespace " " )
, L
    ( Position 15 41 )
    ( TokSym "IOStreams.read" )
, L
    ( Position 15 55 )
    ( Whitespace "         " )
, L
    ( Position 15 64 ) Colon
, L
    ( Position 15 65 ) Colon
, L
    ( Position 15 66 )
    ( Whitespace " " )
, L
    ( Position 15 67 )
    ( TokSym "InputStream" )
, L
    ( Position 15 78 )
    ( Whitespace " " )
, L
    ( Position 15 79 )
    ( TokSym "ByteString" )
, L
    ( Position 15 89 )
    ( Whitespace " " )
, L
    ( Position 15 90 )
    ( TokOther "->" )
, L
    ( Position 15 92 )
    ( Whitespace " " )
, L
    ( Position 15 93 )
    ( TokSym "ByteString" )
, L
    ( Position 15 103 )
    ( Whitespace " " )
, L
    ( Position 15 104 )
    ( TokSym "IO" )
, L
    ( Position 15 106 )
    ( Whitespace " " )
, L
    ( Position 15 107 )
    ( TokOther "(" )
, L
    ( Position 15 108 )
    ( TokOther ")" )
, L
    ( Position 15 109 )
    ( Whitespace "
    " )
, L
    ( Position 16 1 )
    ( Indent 21 )
, L
    ( Position 16 22 )
    ( TokSym "." )
, L
    ( Position 16 23 )
    ( Whitespace "
    " )
, L
    ( Position 17 1 )
    ( Indent 21 )
, L
    ( Position 17 22 )
    ( TokSym "and" )
, L
    ( Position 17 25 )
    ( Whitespace " " )
, L
    ( Position 17 26 )
    ( TokSym "similarly" )
, L
    ( Position 17 35 )
    ( Whitespace " " )
, L
    ( Position 17 36 )
    ( TokSym "for" )
, L
    ( Position 17 39 )
    ( Whitespace " " )
, L
    ( Position 17 40 )
    ( TokSym "other" )
, L
    ( Position 17 45 )
    ( Whitespace " " )
, L
    ( Position 17 46 )
    ( TokSym "streaming" )
, L
    ( Position 17 55 )
    ( Whitespace " " )
, L
    ( Position 17 56 )
    ( TokSym "io" )
, L
    ( Position 17 58 )
    ( Whitespace " " )
, L
    ( Position 17 59 )
    ( TokSym "libraries." )
, L
    ( Position 17 69 )
    ( Whitespace "
    " )
, L
    ( Position 18 1 )
    ( Indent 21 )
, L
    ( Position 18 22 )
    ( TokSym "." )
, L
    ( Position 18 23 )
    ( Whitespace "
    " )
, L
    ( Position 19 1 )
    ( Indent 21 )
, L
    ( Position 19 22 )
    ( TokSym "The" )
, L
    ( Position 19 25 )
    ( Whitespace " " )
, L
    ( Position 19 26 )
    ( TokSym "implementation" )
, L
    ( Position 19 40 )
    ( Whitespace " " )
, L
    ( Position 19 41 )
    ( TokSym "follows" )
, L
    ( Position 19 48 )
    ( Whitespace " " )
, L
    ( Position 19 49 )
    ( TokSym "the" )
, L
    ( Position 19 52 )
    ( Whitespace "
    " )
, L
    ( Position 20 1 )
    ( Indent 21 )
, L
    ( Position 20 22 )
    ( TokSym "details" )
, L
    ( Position 20 29 )
    ( Whitespace " " )
, L
    ( Position 20 30 )
    ( TokSym "of" )
, L
    ( Position 20 32 )
    ( Whitespace " " )
, L
    ( Position 20 33 )
    ( TokOther "@" )
, L
    ( Position 20 34 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 20 54 )
    ( TokOther "@" )
, L
    ( Position 20 55 )
    ( Whitespace " " )
, L
    ( Position 20 56 )
    ( TokSym "and" )
, L
    ( Position 20 59 )
    ( Whitespace " " )
, L
    ( Position 20 60 )
    ( TokOther "@" )
, L
    ( Position 20 61 )
    ( TokSym "Data.ByteString.Lazy.Char8" )
, L
    ( Position 20 87 )
    ( TokOther "@" )
, L
    ( Position 20 88 )
    ( Whitespace "
    " )
, L
    ( Position 21 1 )
    ( Indent 21 )
, L
    ( Position 21 22 )
    ( TokSym "as" )
, L
    ( Position 21 24 )
    ( Whitespace " " )
, L
    ( Position 21 25 )
    ( TokSym "far" )
, L
    ( Position 21 28 )
    ( Whitespace " " )
, L
    ( Position 21 29 )
    ( TokSym "as" )
, L
    ( Position 21 31 )
    ( Whitespace " " )
, L
    ( Position 21 32 )
    ( TokSym "is" )
, L
    ( Position 21 34 )
    ( Whitespace " " )
, L
    ( Position 21 35 )
    ( TokSym "possible" )
, L
    ( Position 21 43 )
    ( TokOther "," )
, L
    ( Position 21 44 )
    ( Whitespace " " )
, L
    ( Position 21 45 )
    ( TokSym "substituting" )
, L
    ( Position 21 57 )
    ( Whitespace " " )
, L
    ( Position 21 58 )
    ( TokSym "the" )
, L
    ( Position 21 61 )
    ( Whitespace " " )
, L
    ( Position 21 62 )
    ( TokSym "type" )
, L
    ( Position 21 66 )
    ( Whitespace "
    " )
, L
    ( Position 22 1 )
    ( Indent 21 )
, L
    ( Position 22 22 )
    ( TokSym "." )
, L
    ( Position 22 23 )
    ( Whitespace "
    " )
, L
    ( Position 23 1 )
    ( Indent 21 )
, L
    ( Position 23 22 )
    ( TokOther ">" )
, L
    ( Position 23 23 )
    ( Whitespace " " )
, L
    ( Position 23 24 )
    ( TokSym "data" )
, L
    ( Position 23 28 )
    ( Whitespace " " )
, L
    ( Position 23 29 )
    ( TokSym "ByteString" )
, L
    ( Position 23 39 )
    ( Whitespace " " )
, L
    ( Position 23 40 )
    ( TokSym "m" )
, L
    ( Position 23 41 )
    ( Whitespace " " )
, L
    ( Position 23 42 )
    ( TokSym "r" )
, L
    ( Position 23 43 )
    ( Whitespace " " )
, L
    ( Position 23 44 )
    ( TokOther "=" )
, L
    ( Position 23 45 )
    ( Whitespace " " )
, L
    ( Position 23 46 )
    ( TokSym "Empty" )
, L
    ( Position 23 51 )
    ( Whitespace " " )
, L
    ( Position 23 52 )
    ( TokSym "r" )
, L
    ( Position 23 53 )
    ( Whitespace " " )
, L
    ( Position 23 54 )
    ( Whitespace "
    " )
, L
    ( Position 24 1 )
    ( Indent 21 )
, L
    ( Position 24 22 )
    ( TokOther ">" )
, L
    ( Position 24 23 )
    ( Whitespace "                     " )
, L
    ( Position 24 44 )
    ( TokOther "|" )
, L
    ( Position 24 45 )
    ( Whitespace " " )
, L
    ( Position 24 46 )
    ( TokSym "Chunk" )
, L
    ( Position 24 51 )
    ( Whitespace " " )
, L
    ( Position 24 52 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 24 69 )
    ( Whitespace " " )
, L
    ( Position 24 70 )
    ( TokOther "(" )
, L
    ( Position 24 71 )
    ( TokSym "ByteString" )
, L
    ( Position 24 81 )
    ( Whitespace " " )
, L
    ( Position 24 82 )
    ( TokSym "m" )
, L
    ( Position 24 83 )
    ( Whitespace " " )
, L
    ( Position 24 84 )
    ( TokSym "r" )
, L
    ( Position 24 85 )
    ( TokOther ")" )
, L
    ( Position 24 86 )
    ( Whitespace " " )
, L
    ( Position 24 87 )
    ( Whitespace "
    " )
, L
    ( Position 25 1 )
    ( Indent 21 )
, L
    ( Position 25 22 )
    ( TokOther ">" )
, L
    ( Position 25 23 )
    ( Whitespace "                     " )
, L
    ( Position 25 44 )
    ( TokOther "|" )
, L
    ( Position 25 45 )
    ( Whitespace " " )
, L
    ( Position 25 46 )
    ( TokSym "Go" )
, L
    ( Position 25 48 )
    ( Whitespace " " )
, L
    ( Position 25 49 )
    ( TokOther "(" )
, L
    ( Position 25 50 )
    ( TokSym "m" )
, L
    ( Position 25 51 )
    ( Whitespace " " )
, L
    ( Position 25 52 )
    ( TokOther "(" )
, L
    ( Position 25 53 )
    ( TokSym "ByteString" )
, L
    ( Position 25 63 )
    ( Whitespace " " )
, L
    ( Position 25 64 )
    ( TokSym "m" )
, L
    ( Position 25 65 )
    ( Whitespace " " )
, L
    ( Position 25 66 )
    ( TokSym "r" )
, L
    ( Position 25 67 )
    ( TokOther ")" )
, L
    ( Position 25 68 )
    ( TokOther ")" )
, L
    ( Position 25 69 )
    ( Whitespace "
    " )
, L
    ( Position 26 1 )
    ( Indent 21 )
, L
    ( Position 26 22 )
    ( TokSym "." )
, L
    ( Position 26 23 )
    ( Whitespace "
    " )
, L
    ( Position 27 1 )
    ( Indent 21 )
, L
    ( Position 27 22 )
    ( TokSym "for" )
, L
    ( Position 27 25 )
    ( Whitespace " " )
, L
    ( Position 27 26 )
    ( TokSym "the" )
, L
    ( Position 27 29 )
    ( Whitespace " " )
, L
    ( Position 27 30 )
    ( TokSym "type" )
, L
    ( Position 27 34 )
    ( Whitespace "
    " )
, L
    ( Position 28 1 )
    ( Indent 21 )
, L
    ( Position 28 22 )
    ( TokSym "." )
, L
    ( Position 28 23 )
    ( Whitespace " " )
, L
    ( Position 28 24 )
    ( Whitespace "
    " )
, L
    ( Position 29 1 )
    ( Indent 21 )
, L
    ( Position 29 22 )
    ( TokOther ">" )
, L
    ( Position 29 23 )
    ( Whitespace " " )
, L
    ( Position 29 24 )
    ( TokSym "data" )
, L
    ( Position 29 28 )
    ( Whitespace " " )
, L
    ( Position 29 29 )
    ( TokSym "ByteString" )
, L
    ( Position 29 39 )
    ( Whitespace " " )
, L
    ( Position 29 40 )
    ( TokOther "=" )
, L
    ( Position 29 41 )
    ( Whitespace " " )
, L
    ( Position 29 42 )
    ( TokSym "Empty" )
, L
    ( Position 29 47 )
    ( Whitespace " " )
, L
    ( Position 29 48 )
    ( Whitespace "
    " )
, L
    ( Position 30 1 )
    ( Indent 21 )
, L
    ( Position 30 22 )
    ( TokOther ">" )
, L
    ( Position 30 23 )
    ( Whitespace "                 " )
, L
    ( Position 30 40 )
    ( TokOther "|" )
, L
    ( Position 30 41 )
    ( Whitespace " " )
, L
    ( Position 30 42 )
    ( TokSym "Chunk" )
, L
    ( Position 30 47 )
    ( Whitespace " " )
, L
    ( Position 30 48 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 30 65 )
    ( Whitespace " " )
, L
    ( Position 30 66 )
    ( TokSym "ByteString" )
, L
    ( Position 30 76 )
    ( Whitespace "
    " )
, L
    ( Position 31 1 )
    ( Indent 21 )
, L
    ( Position 31 22 )
    ( TokSym "." )
, L
    ( Position 31 23 )
    ( Whitespace "
    " )
, L
    ( Position 32 1 )
    ( Indent 21 )
, L
    ( Position 32 22 )
    ( TokSym "found" )
, L
    ( Position 32 27 )
    ( Whitespace " " )
, L
    ( Position 32 28 )
    ( TokSym "in" )
, L
    ( Position 32 30 )
    ( Whitespace " " )
, L
    ( Position 32 31 )
    ( TokOther "@" )
, L
    ( Position 32 32 )
    ( TokSym "Data.ByteString.Lazy.Internal" )
, L
    ( Position 32 61 )
    ( TokOther "@." )
, L
    ( Position 32 63 )
    ( Whitespace " " )
, L
    ( Position 32 64 )
    ( TokOther "(" )
, L
    ( Position 32 65 )
    ( TokSym "Constructors" )
, L
    ( Position 32 77 )
    ( Whitespace " " )
, L
    ( Position 32 78 )
    ( TokSym "are" )
, L
    ( Position 32 81 )
    ( Whitespace " " )
, L
    ( Position 32 82 )
    ( TokSym "necessarily" )
, L
    ( Position 32 93 )
    ( Whitespace " " )
, L
    ( Position 32 94 )
    ( TokSym "hidden" )
, L
    ( Position 32 100 )
    ( Whitespace " " )
, L
    ( Position 32 101 )
    ( TokSym "in" )
, L
    ( Position 32 103 )
    ( Whitespace " " )
, L
    ( Position 32 104 )
    ( Whitespace "
    " )
, L
    ( Position 33 1 )
    ( Indent 21 )
, L
    ( Position 33 22 )
    ( TokSym "internal" )
, L
    ( Position 33 30 )
    ( Whitespace " " )
, L
    ( Position 33 31 )
    ( TokSym "modules" )
, L
    ( Position 33 38 )
    ( Whitespace " " )
, L
    ( Position 33 39 )
    ( TokSym "in" )
, L
    ( Position 33 41 )
    ( Whitespace " " )
, L
    ( Position 33 42 )
    ( TokSym "both" )
, L
    ( Position 33 46 )
    ( Whitespace " " )
, L
    ( Position 33 47 )
    ( TokSym "cases." )
, L
    ( Position 33 53 )
    ( TokOther ")" )
, L
    ( Position 33 54 )
    ( Whitespace " " )
, L
    ( Position 33 55 )
    ( TokSym "As" )
, L
    ( Position 33 57 )
    ( Whitespace " " )
, L
    ( Position 33 58 )
    ( TokSym "a" )
, L
    ( Position 33 59 )
    ( Whitespace " " )
, L
    ( Position 33 60 )
    ( TokSym "lazy" )
, L
    ( Position 33 64 )
    ( Whitespace " " )
, L
    ( Position 33 65 )
    ( TokSym "bytestring" )
, L
    ( Position 33 75 )
    ( Whitespace " " )
, L
    ( Position 33 76 )
    ( TokSym "is" )
, L
    ( Position 33 78 )
    ( Whitespace " " )
, L
    ( Position 33 79 )
    ( TokSym "implemented" )
, L
    ( Position 33 90 )
    ( Whitespace " " )
, L
    ( Position 33 91 )
    ( TokSym "internally" )
, L
    ( Position 33 101 )
    ( Whitespace " " )
, L
    ( Position 33 102 )
    ( Whitespace "
    " )
, L
    ( Position 34 1 )
    ( Indent 21 )
, L
    ( Position 34 22 )
    ( TokSym "by" )
, L
    ( Position 34 24 )
    ( Whitespace " " )
, L
    ( Position 34 25 )
    ( TokSym "a" )
, L
    ( Position 34 26 )
    ( Whitespace " " )
, L
    ( Position 34 27 )
    ( TokSym "sort" )
, L
    ( Position 34 31 )
    ( Whitespace " " )
, L
    ( Position 34 32 )
    ( TokSym "of" )
, L
    ( Position 34 34 )
    ( Whitespace " " )
, L
    ( Position 34 35 )
    ( TokSym "list" )
, L
    ( Position 34 39 )
    ( Whitespace " " )
, L
    ( Position 34 40 )
    ( TokSym "of" )
, L
    ( Position 34 42 )
    ( Whitespace " " )
, L
    ( Position 34 43 )
    ( TokSym "strict" )
, L
    ( Position 34 49 )
    ( Whitespace " " )
, L
    ( Position 34 50 )
    ( TokSym "bytestring" )
, L
    ( Position 34 60 )
    ( Whitespace " " )
, L
    ( Position 34 61 )
    ( TokSym "chunks" )
, L
    ( Position 34 67 )
    ( TokOther "," )
, L
    ( Position 34 68 )
    ( Whitespace " " )
, L
    ( Position 34 69 )
    ( TokSym "a" )
, L
    ( Position 34 70 )
    ( Whitespace " " )
, L
    ( Position 34 71 )
    ( TokSym "streaming" )
, L
    ( Position 34 80 )
    ( Whitespace " " )
, L
    ( Position 34 81 )
    ( TokSym "bytestring" )
, L
    ( Position 34 91 )
    ( Whitespace " " )
, L
    ( Position 34 92 )
    ( TokSym "is" )
, L
    ( Position 34 94 )
    ( Whitespace " " )
, L
    ( Position 34 95 )
    ( Whitespace "
    " )
, L
    ( Position 35 1 )
    ( Indent 21 )
, L
    ( Position 35 22 )
    ( TokSym "implemented" )
, L
    ( Position 35 33 )
    ( Whitespace " " )
, L
    ( Position 35 34 )
    ( TokSym "as" )
, L
    ( Position 35 36 )
    ( Whitespace " " )
, L
    ( Position 35 37 )
    ( TokSym "a" )
, L
    ( Position 35 38 )
    ( Whitespace " " )
, L
    ( Position 35 39 )
    ( TokOther "/" )
, L
    ( Position 35 40 )
    ( TokSym "producer" )
, L
    ( Position 35 48 )
    ( TokOther "/" )
, L
    ( Position 35 49 )
    ( Whitespace " " )
, L
    ( Position 35 50 )
    ( TokSym "or" )
, L
    ( Position 35 52 )
    ( Whitespace " " )
, L
    ( Position 35 53 )
    ( TokOther "/" )
, L
    ( Position 35 54 )
    ( TokSym "generator" )
, L
    ( Position 35 63 )
    ( TokOther "/" )
, L
    ( Position 35 64 )
    ( Whitespace " " )
, L
    ( Position 35 65 )
    ( TokSym "of" )
, L
    ( Position 35 67 )
    ( Whitespace " " )
, L
    ( Position 35 68 )
    ( TokSym "strict" )
, L
    ( Position 35 74 )
    ( Whitespace " " )
, L
    ( Position 35 75 )
    ( TokSym "bytestring" )
, L
    ( Position 35 85 )
    ( Whitespace " " )
, L
    ( Position 35 86 )
    ( TokSym "chunks." )
, L
    ( Position 35 93 )
    ( Whitespace "
    " )
, L
    ( Position 36 1 )
    ( Indent 21 )
, L
    ( Position 36 22 )
    ( TokSym "." )
, L
    ( Position 36 23 )
    ( Whitespace "
    " )
, L
    ( Position 37 1 )
    ( Indent 21 )
, L
    ( Position 37 22 )
    ( TokSym "Something" )
, L
    ( Position 37 31 )
    ( Whitespace " " )
, L
    ( Position 37 32 )
    ( TokSym "like" )
, L
    ( Position 37 36 )
    ( Whitespace " " )
, L
    ( Position 37 37 )
    ( TokSym "this" )
, L
    ( Position 37 41 )
    ( Whitespace " " )
, L
    ( Position 37 42 )
    ( TokSym "alteration" )
, L
    ( Position 37 52 )
    ( Whitespace " " )
, L
    ( Position 37 53 )
    ( TokSym "of" )
, L
    ( Position 37 55 )
    ( Whitespace " " )
, L
    ( Position 37 56 )
    ( TokSym "type" )
, L
    ( Position 37 60 )
    ( Whitespace " " )
, L
    ( Position 37 61 )
    ( TokSym "is" )
, L
    ( Position 37 63 )
    ( Whitespace " " )
, L
    ( Position 37 64 )
    ( TokSym "of" )
, L
    ( Position 37 66 )
    ( Whitespace " " )
, L
    ( Position 37 67 )
    ( TokSym "course" )
, L
    ( Position 37 73 )
    ( Whitespace " " )
, L
    ( Position 37 74 )
    ( TokSym "obvious" )
, L
    ( Position 37 81 )
    ( Whitespace " " )
, L
    ( Position 37 82 )
    ( TokSym "and" )
, L
    ( Position 37 85 )
    ( Whitespace " " )
, L
    ( Position 37 86 )
    ( TokSym "mechanical" )
, L
    ( Position 37 96 )
    ( TokOther "," )
, L
    ( Position 37 97 )
    ( Whitespace " " )
, L
    ( Position 37 98 )
    ( TokSym "once" )
, L
    ( Position 37 102 )
    ( Whitespace " " )
, L
    ( Position 37 103 )
    ( TokSym "the" )
, L
    ( Position 37 106 )
    ( Whitespace " " )
, L
    ( Position 37 107 )
    ( TokSym "idea" )
, L
    ( Position 37 111 )
    ( Whitespace " " )
, L
    ( Position 37 112 )
    ( TokSym "of" )
, L
    ( Position 37 114 )
    ( Whitespace "
    " )
, L
    ( Position 38 1 )
    ( Indent 21 )
, L
    ( Position 38 22 )
    ( TokSym "an" )
, L
    ( Position 38 24 )
    ( Whitespace " " )
, L
    ( Position 38 25 )
    ( TokSym "effectful" )
, L
    ( Position 38 34 )
    ( Whitespace " " )
, L
    ( Position 38 35 )
    ( TokSym "bytestring" )
, L
    ( Position 38 45 )
    ( Whitespace " " )
, L
    ( Position 38 46 )
    ( TokSym "type" )
, L
    ( Position 38 50 )
    ( Whitespace " " )
, L
    ( Position 38 51 )
    ( TokSym "is" )
, L
    ( Position 38 53 )
    ( Whitespace " " )
, L
    ( Position 38 54 )
    ( TokSym "contemplated" )
, L
    ( Position 38 66 )
    ( Whitespace " " )
, L
    ( Position 38 67 )
    ( TokSym "and" )
, L
    ( Position 38 70 )
    ( Whitespace " " )
, L
    ( Position 38 71 )
    ( TokSym "lazy" )
, L
    ( Position 38 75 )
    ( Whitespace " " )
, L
    ( Position 38 76 )
    ( TokSym "io" )
, L
    ( Position 38 78 )
    ( Whitespace " " )
, L
    ( Position 38 79 )
    ( TokSym "is" )
, L
    ( Position 38 81 )
    ( Whitespace " " )
, L
    ( Position 38 82 )
    ( TokSym "rejected." )
, L
    ( Position 38 91 )
    ( Whitespace "
    " )
, L
    ( Position 39 1 )
    ( Indent 21 )
, L
    ( Position 39 22 )
    ( TokSym "Indeed" )
, L
    ( Position 39 28 )
    ( Whitespace " " )
, L
    ( Position 39 29 )
    ( TokSym "it" )
, L
    ( Position 39 31 )
    ( Whitespace " " )
, L
    ( Position 39 32 )
    ( TokSym "seems" )
, L
    ( Position 39 37 )
    ( Whitespace " " )
, L
    ( Position 39 38 )
    ( TokSym "that" )
, L
    ( Position 39 42 )
    ( Whitespace " " )
, L
    ( Position 39 43 )
    ( TokSym "this" )
, L
    ( Position 39 47 )
    ( Whitespace " " )
, L
    ( Position 39 48 )
    ( TokSym "is" )
, L
    ( Position 39 50 )
    ( Whitespace " " )
, L
    ( Position 39 51 )
    ( TokSym "the" )
, L
    ( Position 39 54 )
    ( Whitespace " " )
, L
    ( Position 39 55 )
    ( TokSym "proper" )
, L
    ( Position 39 61 )
    ( Whitespace " " )
, L
    ( Position 39 62 )
    ( TokSym "expression" )
, L
    ( Position 39 72 )
    ( Whitespace " " )
, L
    ( Position 39 73 )
    ( TokSym "of" )
, L
    ( Position 39 75 )
    ( Whitespace " " )
, L
    ( Position 39 76 )
    ( TokSym "what" )
, L
    ( Position 39 80 )
    ( Whitespace " " )
, L
    ( Position 39 81 )
    ( TokSym "was" )
, L
    ( Position 39 84 )
    ( Whitespace "
    " )
, L
    ( Position 40 1 )
    ( Indent 21 )
, L
    ( Position 40 22 )
    ( TokSym "intended" )
, L
    ( Position 40 30 )
    ( Whitespace " " )
, L
    ( Position 40 31 )
    ( TokSym "by" )
, L
    ( Position 40 33 )
    ( Whitespace " " )
, L
    ( Position 40 34 )
    ( TokSym "lazy" )
, L
    ( Position 40 38 )
    ( Whitespace " " )
, L
    ( Position 40 39 )
    ( TokSym "bytestrings" )
, L
    ( Position 40 50 )
    ( Whitespace " " )
, L
    ( Position 40 51 )
    ( TokSym "to" )
, L
    ( Position 40 53 )
    ( Whitespace " " )
, L
    ( Position 40 54 )
    ( TokSym "begin" )
, L
    ( Position 40 59 )
    ( Whitespace " " )
, L
    ( Position 40 60 )
    ( TokSym "with." )
, L
    ( Position 40 65 )
    ( Whitespace " " )
, L
    ( Position 40 66 )
    ( TokSym "The" )
, L
    ( Position 40 69 )
    ( Whitespace " " )
, L
    ( Position 40 70 )
    ( TokSym "documentation" )
, L
    ( Position 40 83 )
    ( TokOther "," )
, L
    ( Position 40 84 )
    ( Whitespace " " )
, L
    ( Position 40 85 )
    ( TokSym "after" )
, L
    ( Position 40 90 )
    ( Whitespace " " )
, L
    ( Position 40 91 )
    ( TokSym "all" )
, L
    ( Position 40 94 )
    ( TokOther "," )
, L
    ( Position 40 95 )
    ( Whitespace "
    " )
, L
    ( Position 41 1 )
    ( Indent 21 )
, L
    ( Position 41 22 )
    ( TokSym "reads" )
, L
    ( Position 41 27 )
    ( Whitespace "
    " )
, L
    ( Position 42 1 )
    ( Indent 21 )
, L
    ( Position 42 22 )
    ( TokSym "." )
, L
    ( Position 42 23 )
    ( Whitespace "
    " )
, L
    ( Position 43 1 )
    ( Indent 21 )
, L
    ( Position 43 22 )
    ( TokOther "*" )
, L
    ( Position 43 23 )
    ( Whitespace " " )
, L
    ( Position 43 24 )
    ( TokOther "\" )
, L
    ( Position 43 96 )
    ( LexicalError "
                           unbounded streams of data without requiring the entire sequence to be 
                           resident in memory. To take advantage of this you have to write your 
                           functions in a lazy streaming style, e.g. classic pipeline composition. 
                           The default I/O chunk size is 32k, which should be good in most circumstances.\"
                         .
                         ... which is very much the idea of this library: the default chunk size for
                         'hGetContents' and the like follows @Data.ByteString.Lazy@ and operations
                         like @lines@ and @append@ and so on are tailored not to increase chunk size. 
                         .
                         It is natural to think that 
                         the direct, naive, monadic formulation of such a type 
                         would necessarily make things much slower. This appears to be a prejudice. 
                         For example, passing a large file of short lines through
                         this benchmark transformation
                         .
                         > Lazy.unlines      . map    (\bs -> "!"       <> Lazy.drop 5 bs)       . Lazy.lines
                         > Streaming.unlines . S.maps (\bs -> chunk "!" >> Streaming.drop 5 bs)  . Streaming.lines
                         .
                         gives pleasing results like these
                         .
                         > $  time ./benchlines lazy >> /dev/null
                         > real\x90m2.097s
                         > ...
                         > $  time ./benchlines streaming >> /dev/null
                         > real\x90m1.930s
                         .
                         More typical, perhaps, are the results for the more 
                         sophisticated operation 
                         .
                         > Lazy.intercalate "!\n"      . Lazy.lines
                         > Streaming.intercalate "!\n" . Streaming.lines
                         .
                         > time ./benchlines lazy >> /dev/null
                         > real\x90m1.250s
                         > ...
                         > time ./benchlines streaming >> /dev/null
                         > real\x90m1.531s
                         . 
                         The pipes environment (to which this library basically belongs) 
                         would express the latter as 
                         .
                         > Pipes.intercalates (Pipes.yield "!\n") . view Pipes.lines 
                         .
                         meaning almost exactly what we mean above, but with results like this
                         .
                         >  time ./benchlines pipes >> /dev/null
                         >  real\x90m6.353s
                         .
                         The difference, I think, is mostly that this library depends 
                         the @streaming@ library, which is used in place of @free@ to 
                         express the splitting and division of byte streams. 
                         .
                         Indeed even if I unwrap and re-wrap with the above-mentioned isomorphism
                         .
                         > Pipes.unfoldr Streaming.nextChunk . Streaming.intercalate "!\n" . Streaming.lines . Streaming.unfoldrChunks Pipe.next
                         .
                         I get an excellent speed-up:
                         .
                         > $  time ./benchlines pipes_stream >> /dev/null
                         > real\x90m3.393s
                         .
                         Though we barely alter signatures in @Data.ByteString.Lazy@ 
                         more than is required
                         by the types, the point of view that emerges is very much that of
                         @pipes-bytestring@ and @pipes-group@. In particular
                         we have the correspondences
                         .
                         > Lazy.splitAt      :: Int -> ByteString              -> (ByteString, ByteString)
                         > Streaming.splitAt :: Int -> ByteString m r          -> ByteString m (ByteString m r)
                         > Pipes.splitAt     :: Int -> Producer ByteString m r -> Producer ByteString m (Producer ByteString m r)
                         .
                         and
                         .
                         > Lazy.lines      :: ByteString -> [ByteString]
                         > Streaming.lines :: ByteString m r -> Stream (ByteString m) m r
                         > Pipes.lines     :: Producer ByteString m r -> FreeT (Producer ByteString m) m r
                         .
                         where the @Stream@ type expresses the sequencing of @ByteString m _@ layers
                         with the usual \'free monad\' sequencing. 
                         .
                         If you are unfamiliar with this
                         way of structuring material you might take a look at the tutorial for 
                         <http://hackage.haskell.org/package/pipes-group-1.0.2/docs/Pipes-Group-Tutorial.html pipes-group>
                         and the examples in the documentation for the streaming library. See also
                         <https://gist.github.com/michaelt/6c6843e6dd8030e95d58 these> 
                         implementations of the shell-like examples from the @io-streams@ tutorial.
                         .
                        
    license:             BSD3
    license-file:        LICENSE
    author:              michaelt
    maintainer:          what_is_it_to_do_anything@yahoo.com
    -- copyright:           
    category:            Data
    build-type:          Simple
    extra-source-files:  ChangeLog.md
    cabal-version:       >=1.10

    library
      exposed-modules:     Data.ByteString.Streaming
                           , Data.ByteString.Streaming.Char8
                           , Data.ByteString.Streaming.Internal
                     --      , Data.ByteString.Streaming.Aeson
                           , Data.ByteString.Streaming.HTTP
                           , Data.Attoparsec.ByteString.Streaming
                           
      -- other-modules:       
      other-extensions:    CPP, BangPatterns, ForeignFunctionInterface, DeriveDataTypeable, Unsafe
      build-depends:       base >=4.8 && <4.9
                         , bytestring >=0.10 && <0.11
                         , deepseq >=1.4 && <1.5
                         , syb >=0.5 && <0.6
                         , mtl >=2.2 && <2.3
                         , mmorph >=1.0 && <1.1
                         , attoparsec
                         , transformers
                         , foldl
                      --   , aeson
                         , streaming
                         , http-client 
                         , http-client-tls
      -- hs-source-dirs:      
      default-language:    Haskell2010
      -- ghc-options: -Wall" )
, L
    ( Position 43 25 ) EOF
]
