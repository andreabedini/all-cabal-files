[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 22 )
    ( TokSym "streaming-bytestring" )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 22 )
    ( TokSym "0.1.6" )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "synopsis" )
, L
    ( Position 3 9 ) Colon
, L
    ( Position 3 22 )
    ( TokSym "effectful" )
, L
    ( Position 3 32 )
    ( TokSym "byte" )
, L
    ( Position 3 37 )
    ( TokSym "steams" )
, L
    ( Position 3 43 )
    ( TokOther "," )
, L
    ( Position 3 45 )
    ( TokSym "or" )
, L
    ( Position 3 47 ) Colon
, L
    ( Position 3 49 )
    ( TokSym "bytestring" )
, L
    ( Position 3 60 )
    ( TokSym "io" )
, L
    ( Position 3 63 )
    ( TokSym "done" )
, L
    ( Position 3 68 )
    ( TokSym "right." )
, L
    ( Position 5 1 )
    ( Indent 0 )
, L
    ( Position 5 1 )
    ( TokSym "description" )
, L
    ( Position 5 12 ) Colon
, L
    ( Position 5 22 )
    ( TokSym "This" )
, L
    ( Position 5 27 )
    ( TokSym "is" )
, L
    ( Position 5 30 )
    ( TokSym "an" )
, L
    ( Position 5 33 )
    ( TokSym "implementation" )
, L
    ( Position 5 48 )
    ( TokSym "of" )
, L
    ( Position 5 51 )
    ( TokSym "effectful" )
, L
    ( Position 5 60 )
    ( TokOther "," )
, L
    ( Position 5 62 )
    ( TokSym "memory-constrained" )
, L
    ( Position 6 1 )
    ( Indent 21 )
, L
    ( Position 6 22 )
    ( TokSym "bytestrings" )
, L
    ( Position 6 34 )
    ( TokOther "(" )
, L
    ( Position 6 35 )
    ( TokSym "byte" )
, L
    ( Position 6 40 )
    ( TokSym "streams" )
, L
    ( Position 6 47 )
    ( TokOther ")" )
, L
    ( Position 6 49 )
    ( TokSym "and" )
, L
    ( Position 6 53 )
    ( TokSym "functions" )
, L
    ( Position 6 63 )
    ( TokSym "for" )
, L
    ( Position 6 67 )
    ( TokSym "streaming" )
, L
    ( Position 7 1 )
    ( Indent 21 )
, L
    ( Position 7 22 )
    ( TokSym "bytestring" )
, L
    ( Position 7 33 )
    ( TokSym "manipulation" )
, L
    ( Position 7 45 )
    ( TokOther "," )
, L
    ( Position 7 47 )
    ( TokSym "adequate" )
, L
    ( Position 7 56 )
    ( TokSym "for" )
, L
    ( Position 7 60 )
    ( TokSym "non-lazy-io." )
, L
    ( Position 8 1 )
    ( Indent 21 )
, L
    ( Position 8 22 )
    ( TokSym "Some" )
, L
    ( Position 8 27 )
    ( TokSym "examples" )
, L
    ( Position 8 36 )
    ( TokSym "of" )
, L
    ( Position 8 39 )
    ( TokSym "the" )
, L
    ( Position 8 43 )
    ( TokSym "use" )
, L
    ( Position 8 47 )
    ( TokSym "of" )
, L
    ( Position 8 50 )
    ( TokSym "byte" )
, L
    ( Position 8 55 )
    ( TokSym "streams" )
, L
    ( Position 8 63 )
    ( TokSym "to" )
, L
    ( Position 8 66 )
    ( TokSym "implement" )
, L
    ( Position 8 76 )
    ( TokSym "simple" )
, L
    ( Position 9 1 )
    ( Indent 21 )
, L
    ( Position 9 22 )
    ( TokSym "shell" )
, L
    ( Position 9 28 )
    ( TokSym "progams" )
, L
    ( Position 9 36 )
    ( TokSym "can" )
, L
    ( Position 9 40 )
    ( TokSym "be" )
, L
    ( Position 9 43 )
    ( TokSym "found" )
, L
    ( Position 10 1 )
    ( Indent 21 )
, L
    ( Position 10 22 )
    ( TokOther "<" )
, L
    ( Position 10 23 )
    ( TokSym "https" )
, L
    ( Position 10 28 ) Colon
, L
    ( Position 10 29 )
    ( TokOther "//" )
, L
    ( Position 10 31 )
    ( TokSym "gist.github.com" )
, L
    ( Position 10 46 )
    ( TokOther "/" )
, L
    ( Position 10 47 )
    ( TokSym "michaelt" )
, L
    ( Position 10 55 )
    ( TokOther "/" )
, L
    ( Position 10 56 )
    ( TokSym "6c6843e6dd8030e95d58" )
, L
    ( Position 10 77 )
    ( TokSym "here" )
, L
    ( Position 10 81 )
    ( TokOther ">." )
, L
    ( Position 11 1 )
    ( Indent 21 )
, L
    ( Position 11 22 )
    ( TokSym "See" )
, L
    ( Position 11 26 )
    ( TokSym "also" )
, L
    ( Position 11 31 )
    ( TokSym "the" )
, L
    ( Position 11 35 )
    ( TokSym "illustrations" )
, L
    ( Position 11 49 )
    ( TokSym "of" )
, L
    ( Position 11 52 )
    ( TokSym "use" )
, L
    ( Position 11 56 )
    ( TokSym "with" )
, L
    ( Position 11 61 )
    ( TokSym "e.g." )
, L
    ( Position 11 66 )
    ( TokOther "@" )
, L
    ( Position 11 67 )
    ( TokSym "attoparsec" )
, L
    ( Position 11 77 )
    ( TokOther "@," )
, L
    ( Position 12 1 )
    ( Indent 21 )
, L
    ( Position 12 22 )
    ( TokOther "@" )
, L
    ( Position 12 23 )
    ( TokSym "aeson" )
, L
    ( Position 12 28 )
    ( TokOther "@," )
, L
    ( Position 12 31 )
    ( TokOther "@" )
, L
    ( Position 12 32 )
    ( TokSym "http-client" )
, L
    ( Position 12 43 )
    ( TokOther "@," )
, L
    ( Position 12 46 )
    ( TokOther "@" )
, L
    ( Position 12 47 )
    ( TokSym "zlib" )
, L
    ( Position 12 51 )
    ( TokOther "@" )
, L
    ( Position 12 53 )
    ( TokSym "etc." )
, L
    ( Position 12 58 )
    ( TokSym "in" )
, L
    ( Position 12 61 )
    ( TokSym "the" )
, L
    ( Position 13 1 )
    ( Indent 21 )
, L
    ( Position 13 22 )
    ( TokOther "<" )
, L
    ( Position 13 23 )
    ( TokSym "https" )
, L
    ( Position 13 28 ) Colon
, L
    ( Position 13 29 )
    ( TokOther "//" )
, L
    ( Position 13 31 )
    ( TokSym "hackage.haskell.org" )
, L
    ( Position 13 50 )
    ( TokOther "/" )
, L
    ( Position 13 51 )
    ( TokSym "package" )
, L
    ( Position 13 58 )
    ( TokOther "/" )
, L
    ( Position 13 59 )
    ( TokSym "streaming-utils" )
, L
    ( Position 13 75 )
    ( TokSym "streaming-utils" )
, L
    ( Position 13 90 )
    ( TokOther ">" )
, L
    ( Position 14 1 )
    ( Indent 21 )
, L
    ( Position 14 22 )
    ( TokSym "library." )
, L
    ( Position 14 32 )
    ( TokSym "Usage" )
, L
    ( Position 14 38 )
    ( TokSym "is" )
, L
    ( Position 14 41 )
    ( TokSym "as" )
, L
    ( Position 14 44 )
    ( TokSym "close" )
, L
    ( Position 14 50 )
    ( TokSym "as" )
, L
    ( Position 14 53 )
    ( TokSym "possible" )
, L
    ( Position 14 62 )
    ( TokSym "to" )
, L
    ( Position 14 65 )
    ( TokSym "that" )
, L
    ( Position 14 70 )
    ( TokSym "of" )
, L
    ( Position 14 73 )
    ( TokOther "@" )
, L
    ( Position 14 74 )
    ( TokSym "ByteString" )
, L
    ( Position 14 84 )
    ( TokOther "@" )
, L
    ( Position 15 1 )
    ( Indent 21 )
, L
    ( Position 15 22 )
    ( TokSym "and" )
, L
    ( Position 15 26 )
    ( TokSym "lazy" )
, L
    ( Position 15 31 )
    ( TokOther "@" )
, L
    ( Position 15 32 )
    ( TokSym "ByteString" )
, L
    ( Position 15 42 )
    ( TokOther "@." )
, L
    ( Position 16 1 )
    ( Indent 21 )
, L
    ( Position 16 22 )
    ( TokSym "." )
, L
    ( Position 17 1 )
    ( Indent 21 )
, L
    ( Position 17 22 )
    ( TokSym "A" )
, L
    ( Position 17 24 )
    ( TokOther "@" )
, L
    ( Position 17 25 )
    ( TokSym "ByteString" )
, L
    ( Position 17 36 )
    ( TokSym "IO" )
, L
    ( Position 17 39 )
    ( TokOther "(" )
, L
    ( Position 17 40 )
    ( TokOther ")" )
, L
    ( Position 17 41 )
    ( TokOther "@" )
, L
    ( Position 17 43 )
    ( TokSym "is" )
, L
    ( Position 17 46 )
    ( TokSym "the" )
, L
    ( Position 17 50 )
    ( TokSym "most" )
, L
    ( Position 17 55 )
    ( TokSym "natural" )
, L
    ( Position 17 63 )
    ( TokSym "representation" )
, L
    ( Position 17 78 )
    ( TokSym "of" )
, L
    ( Position 18 1 )
    ( Indent 21 )
, L
    ( Position 18 22 )
    ( TokSym "an" )
, L
    ( Position 18 25 )
    ( TokSym "effectful" )
, L
    ( Position 18 35 )
    ( TokSym "stream" )
, L
    ( Position 18 42 )
    ( TokSym "of" )
, L
    ( Position 18 45 )
    ( TokSym "bytes" )
, L
    ( Position 18 51 )
    ( TokSym "arising" )
, L
    ( Position 18 59 )
    ( TokSym "chunkwise" )
, L
    ( Position 18 69 )
    ( TokSym "from" )
, L
    ( Position 18 74 )
    ( TokSym "a" )
, L
    ( Position 18 76 )
    ( TokSym "handle." )
, L
    ( Position 19 1 )
    ( Indent 21 )
, L
    ( Position 19 22 )
    ( TokSym "Indeed" )
, L
    ( Position 19 28 )
    ( TokOther "," )
, L
    ( Position 19 30 )
    ( TokSym "the" )
, L
    ( Position 19 34 )
    ( TokSym "implementation" )
, L
    ( Position 19 49 )
    ( TokSym "follows" )
, L
    ( Position 19 57 )
    ( TokSym "the" )
, L
    ( Position 20 1 )
    ( Indent 21 )
, L
    ( Position 20 22 )
    ( TokSym "details" )
, L
    ( Position 20 30 )
    ( TokSym "of" )
, L
    ( Position 20 33 )
    ( TokOther "@" )
, L
    ( Position 20 34 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 20 54 )
    ( TokOther "@" )
, L
    ( Position 20 56 )
    ( TokSym "and" )
, L
    ( Position 20 60 )
    ( TokOther "@" )
, L
    ( Position 20 61 )
    ( TokSym "Data.ByteString.Lazy.Char8" )
, L
    ( Position 20 87 )
    ( TokOther "@" )
, L
    ( Position 21 1 )
    ( Indent 21 )
, L
    ( Position 21 22 )
    ( TokSym "in" )
, L
    ( Position 21 25 )
    ( TokSym "unrelenting" )
, L
    ( Position 21 37 )
    ( TokSym "detail" )
, L
    ( Position 21 43 )
    ( TokOther "," )
, L
    ( Position 21 45 )
    ( TokSym "omitting" )
, L
    ( Position 21 54 )
    ( TokSym "only" )
, L
    ( Position 21 59 )
    ( TokSym "transparently" )
, L
    ( Position 21 73 )
    ( TokSym "non-streaming" )
, L
    ( Position 22 1 )
    ( Indent 21 )
, L
    ( Position 22 22 )
    ( TokSym "operations" )
, L
    ( Position 22 33 )
    ( TokSym "like" )
, L
    ( Position 22 38 )
    ( TokOther "@" )
, L
    ( Position 22 39 )
    ( TokSym "reverse" )
, L
    ( Position 22 46 )
    ( TokOther "@." )
, L
    ( Position 22 49 )
    ( TokSym "It" )
, L
    ( Position 22 52 )
    ( TokSym "is" )
, L
    ( Position 22 55 )
    ( TokSym "just" )
, L
    ( Position 22 60 )
    ( TokSym "a" )
, L
    ( Position 22 62 )
    ( TokSym "question" )
, L
    ( Position 22 71 )
    ( TokSym "of" )
, L
    ( Position 22 74 )
    ( TokSym "replacing" )
, L
    ( Position 23 1 )
    ( Indent 21 )
, L
    ( Position 23 22 )
    ( TokSym "the" )
, L
    ( Position 23 26 )
    ( TokSym "lazy" )
, L
    ( Position 23 31 )
    ( TokSym "bytestring" )
, L
    ( Position 23 42 )
    ( TokSym "type" )
, L
    ( Position 23 46 ) Colon
, L
    ( Position 24 1 )
    ( Indent 21 )
, L
    ( Position 24 22 )
    ( TokSym "." )
, L
    ( Position 25 1 )
    ( Indent 21 )
, L
    ( Position 25 22 )
    ( TokOther ">" )
, L
    ( Position 25 24 )
    ( TokSym "data" )
, L
    ( Position 25 29 )
    ( TokSym "ByteString" )
, L
    ( Position 25 44 )
    ( TokOther "=" )
, L
    ( Position 25 46 )
    ( TokSym "Empty" )
, L
    ( Position 25 54 )
    ( TokOther "|" )
, L
    ( Position 25 56 )
    ( TokSym "Chunk" )
, L
    ( Position 25 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 25 80 )
    ( TokSym "ByteString" )
, L
    ( Position 26 1 )
    ( Indent 21 )
, L
    ( Position 26 22 )
    ( TokSym "." )
, L
    ( Position 27 1 )
    ( Indent 21 )
, L
    ( Position 27 22 )
    ( TokSym "with" )
, L
    ( Position 27 27 )
    ( TokSym "the" )
, L
    ( Position 27 31 )
    ( TokOther "/" )
, L
    ( Position 27 32 )
    ( TokSym "minimal" )
, L
    ( Position 27 39 )
    ( TokOther "/" )
, L
    ( Position 27 41 )
    ( TokSym "effectful" )
, L
    ( Position 27 51 )
    ( TokSym "variant" )
, L
    ( Position 27 58 ) Colon
, L
    ( Position 28 1 )
    ( Indent 21 )
, L
    ( Position 28 22 )
    ( TokSym "." )
, L
    ( Position 29 1 )
    ( Indent 21 )
, L
    ( Position 29 22 )
    ( TokOther ">" )
, L
    ( Position 29 24 )
    ( TokSym "data" )
, L
    ( Position 29 29 )
    ( TokSym "ByteString" )
, L
    ( Position 29 40 )
    ( TokSym "m" )
, L
    ( Position 29 42 )
    ( TokSym "r" )
, L
    ( Position 29 44 )
    ( TokOther "=" )
, L
    ( Position 29 46 )
    ( TokSym "Empty" )
, L
    ( Position 29 52 )
    ( TokSym "r" )
, L
    ( Position 29 54 )
    ( TokOther "|" )
, L
    ( Position 29 56 )
    ( TokSym "Chunk" )
, L
    ( Position 29 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 29 80 )
    ( TokOther "(" )
, L
    ( Position 29 81 )
    ( TokSym "ByteString" )
, L
    ( Position 29 92 )
    ( TokSym "m" )
, L
    ( Position 29 94 )
    ( TokSym "r" )
, L
    ( Position 29 95 )
    ( TokOther ")" )
, L
    ( Position 29 97 )
    ( TokOther "|" )
, L
    ( Position 29 99 )
    ( TokSym "Go" )
, L
    ( Position 29 102 )
    ( TokOther "(" )
, L
    ( Position 29 103 )
    ( TokSym "m" )
, L
    ( Position 29 105 )
    ( TokOther "(" )
, L
    ( Position 29 106 )
    ( TokSym "ByteString" )
, L
    ( Position 29 117 )
    ( TokSym "m" )
, L
    ( Position 29 119 )
    ( TokSym "r" )
, L
    ( Position 29 120 )
    ( TokOther ")" )
, L
    ( Position 29 121 )
    ( TokOther ")" )
, L
    ( Position 30 1 )
    ( Indent 21 )
, L
    ( Position 30 22 )
    ( TokSym "." )
, L
    ( Position 31 1 )
    ( Indent 21 )
, L
    ( Position 31 22 )
    ( TokOther "(" )
, L
    ( Position 31 23 )
    ( TokSym "Constructors" )
, L
    ( Position 31 36 )
    ( TokSym "are" )
, L
    ( Position 31 40 )
    ( TokSym "necessarily" )
, L
    ( Position 31 52 )
    ( TokSym "hidden" )
, L
    ( Position 31 59 )
    ( TokSym "in" )
, L
    ( Position 31 62 )
    ( TokSym "internal" )
, L
    ( Position 31 71 )
    ( TokSym "modules" )
, L
    ( Position 31 79 )
    ( TokSym "in" )
, L
    ( Position 31 82 )
    ( TokSym "both" )
, L
    ( Position 31 87 )
    ( TokSym "the" )
, L
    ( Position 31 91 )
    ( TokOther "@" )
, L
    ( Position 31 92 )
    ( TokSym "Lazy" )
, L
    ( Position 31 96 )
    ( TokOther "@" )
, L
    ( Position 31 98 )
    ( TokSym "and" )
, L
    ( Position 31 102 )
    ( TokSym "the" )
, L
    ( Position 31 106 )
    ( TokOther "@" )
, L
    ( Position 31 107 )
    ( TokSym "Streaming" )
, L
    ( Position 31 116 )
    ( TokOther "@." )
, L
    ( Position 31 118 )
    ( TokOther ")" )
, L
    ( Position 32 1 )
    ( Indent 21 )
, L
    ( Position 32 22 )
    ( TokSym "." )
, L
    ( Position 33 1 )
    ( Indent 21 )
, L
    ( Position 33 22 )
    ( TokSym "That's" )
, L
    ( Position 33 29 )
    ( TokSym "it." )
, L
    ( Position 33 33 )
    ( TokSym "As" )
, L
    ( Position 33 36 )
    ( TokSym "a" )
, L
    ( Position 33 38 )
    ( TokSym "lazy" )
, L
    ( Position 33 43 )
    ( TokSym "bytestring" )
, L
    ( Position 33 54 )
    ( TokSym "is" )
, L
    ( Position 33 57 )
    ( TokSym "implemented" )
, L
    ( Position 33 69 )
    ( TokSym "internally" )
, L
    ( Position 34 1 )
    ( Indent 21 )
, L
    ( Position 34 22 )
    ( TokSym "by" )
, L
    ( Position 34 25 )
    ( TokSym "a" )
, L
    ( Position 34 27 )
    ( TokSym "sort" )
, L
    ( Position 34 32 )
    ( TokSym "of" )
, L
    ( Position 34 35 )
    ( TokSym "list" )
, L
    ( Position 34 40 )
    ( TokSym "of" )
, L
    ( Position 34 43 )
    ( TokSym "strict" )
, L
    ( Position 34 50 )
    ( TokSym "bytestring" )
, L
    ( Position 34 61 )
    ( TokSym "chunks" )
, L
    ( Position 34 67 )
    ( TokOther "," )
, L
    ( Position 34 69 )
    ( TokSym "a" )
, L
    ( Position 34 71 )
    ( TokSym "streaming" )
, L
    ( Position 34 81 )
    ( TokSym "bytestring" )
, L
    ( Position 34 92 )
    ( TokSym "is" )
, L
    ( Position 35 1 )
    ( Indent 21 )
, L
    ( Position 35 22 )
    ( TokSym "simply" )
, L
    ( Position 35 29 )
    ( TokSym "implemented" )
, L
    ( Position 35 41 )
    ( TokSym "as" )
, L
    ( Position 35 44 )
    ( TokSym "a" )
, L
    ( Position 35 46 )
    ( TokOther "/" )
, L
    ( Position 35 47 )
    ( TokSym "producer" )
, L
    ( Position 35 55 )
    ( TokOther "/" )
, L
    ( Position 35 57 )
    ( TokSym "or" )
, L
    ( Position 35 60 )
    ( TokOther "/" )
, L
    ( Position 35 61 )
    ( TokSym "generator" )
, L
    ( Position 35 70 )
    ( TokOther "/" )
, L
    ( Position 35 72 )
    ( TokSym "of" )
, L
    ( Position 35 75 )
    ( TokSym "strict" )
, L
    ( Position 35 82 )
    ( TokSym "bytestring" )
, L
    ( Position 35 93 )
    ( TokSym "chunks." )
, L
    ( Position 36 1 )
    ( Indent 21 )
, L
    ( Position 36 22 )
    ( TokSym "Most" )
, L
    ( Position 36 27 )
    ( TokSym "operations" )
, L
    ( Position 36 38 )
    ( TokSym "are" )
, L
    ( Position 36 42 )
    ( TokSym "defined" )
, L
    ( Position 36 50 )
    ( TokSym "by" )
, L
    ( Position 36 53 )
    ( TokSym "simply" )
, L
    ( Position 36 60 )
    ( TokSym "adding" )
, L
    ( Position 36 67 )
    ( TokSym "a" )
, L
    ( Position 36 69 )
    ( TokSym "line" )
, L
    ( Position 36 74 )
    ( TokSym "to" )
, L
    ( Position 36 77 )
    ( TokSym "what" )
, L
    ( Position 36 82 )
    ( TokSym "we" )
, L
    ( Position 36 85 )
    ( TokSym "find" )
, L
    ( Position 36 90 )
    ( TokSym "in" )
, L
    ( Position 37 1 )
    ( Indent 21 )
, L
    ( Position 37 22 )
    ( TokOther "@" )
, L
    ( Position 37 23 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 37 43 )
    ( TokOther "@." )
, L
    ( Position 37 46 )
    ( TokSym "The" )
, L
    ( Position 37 50 )
    ( TokSym "only" )
, L
    ( Position 37 55 )
    ( TokSym "possible" )
, L
    ( Position 37 64 )
    ( TokSym "simplification" )
, L
    ( Position 37 79 )
    ( TokSym "would" )
, L
    ( Position 38 1 )
    ( Indent 21 )
, L
    ( Position 38 22 )
    ( TokSym "involve" )
, L
    ( Position 38 30 )
    ( TokSym "specializing" )
, L
    ( Position 38 43 )
    ( TokSym "to" )
, L
    ( Position 38 46 )
    ( TokOther "@" )
, L
    ( Position 38 47 )
    ( TokSym "IO" )
, L
    ( Position 38 49 )
    ( TokOther "@," )
, L
    ( Position 38 52 )
    ( TokSym "throughout" )
, L
    ( Position 38 63 )
    ( TokSym "-" )
, L
    ( Position 38 65 )
    ( TokSym "but" )
, L
    ( Position 38 69 )
    ( TokSym "this" )
, L
    ( Position 38 74 )
    ( TokSym "would" )
, L
    ( Position 38 80 )
    ( TokSym "e.g." )
, L
    ( Position 38 85 )
    ( TokSym "block" )
, L
    ( Position 39 1 )
    ( Indent 21 )
, L
    ( Position 39 22 )
    ( TokSym "the" )
, L
    ( Position 39 26 )
    ( TokSym "use" )
, L
    ( Position 39 30 )
    ( TokSym "of" )
, L
    ( Position 39 33 )
    ( TokOther "@" )
, L
    ( Position 39 34 )
    ( TokSym "ResourceT" )
, L
    ( Position 39 43 )
    ( TokOther "@" )
, L
    ( Position 39 45 )
    ( TokSym "to" )
, L
    ( Position 39 48 )
    ( TokSym "manage" )
, L
    ( Position 39 55 )
    ( TokSym "handles" )
, L
    ( Position 39 63 )
    ( TokSym "and" )
, L
    ( Position 39 67 )
    ( TokSym "the" )
, L
    ( Position 39 71 )
    ( TokSym "like" )
, L
    ( Position 39 75 )
    ( TokOther "," )
, L
    ( Position 39 77 )
    ( TokSym "and" )
, L
    ( Position 39 81 )
    ( TokSym "a" )
, L
    ( Position 39 83 )
    ( TokSym "number" )
, L
    ( Position 40 1 )
    ( Indent 21 )
, L
    ( Position 40 22 )
    ( TokSym "of" )
, L
    ( Position 40 25 )
    ( TokSym "other" )
, L
    ( Position 40 31 )
    ( TokSym "convenient" )
, L
    ( Position 40 42 )
    ( TokSym "operations" )
, L
    ( Position 40 53 )
    ( TokSym "like" )
, L
    ( Position 40 58 )
    ( TokOther "@" )
, L
    ( Position 40 59 )
    ( TokSym "copy" )
, L
    ( Position 40 63 )
    ( TokOther "@," )
, L
    ( Position 40 66 )
    ( TokSym "which" )
, L
    ( Position 40 72 )
    ( TokSym "permits" )
, L
    ( Position 40 80 )
    ( TokSym "one" )
, L
    ( Position 40 84 )
    ( TokSym "to" )
, L
    ( Position 41 1 )
    ( Indent 21 )
, L
    ( Position 41 22 )
    ( TokSym "apply" )
, L
    ( Position 41 28 )
    ( TokSym "two" )
, L
    ( Position 41 32 )
    ( TokSym "operations" )
, L
    ( Position 41 43 )
    ( TokSym "simultaneously" )
, L
    ( Position 41 58 )
    ( TokSym "over" )
, L
    ( Position 41 63 )
    ( TokSym "the" )
, L
    ( Position 41 67 )
    ( TokSym "length" )
, L
    ( Position 41 74 )
    ( TokSym "of" )
, L
    ( Position 41 77 )
    ( TokSym "the" )
, L
    ( Position 41 81 )
    ( TokSym "byte" )
, L
    ( Position 41 86 )
    ( TokSym "stream." )
, L
    ( Position 42 1 )
    ( Indent 21 )
, L
    ( Position 42 22 )
    ( TokSym "." )
, L
    ( Position 43 1 )
    ( Indent 21 )
, L
    ( Position 43 22 )
    ( TokSym "Something" )
, L
    ( Position 43 32 )
    ( TokSym "like" )
, L
    ( Position 43 37 )
    ( TokSym "this" )
, L
    ( Position 43 42 )
    ( TokSym "alteration" )
, L
    ( Position 43 53 )
    ( TokSym "of" )
, L
    ( Position 43 56 )
    ( TokSym "type" )
, L
    ( Position 43 61 )
    ( TokSym "is" )
, L
    ( Position 43 64 )
    ( TokSym "of" )
, L
    ( Position 43 67 )
    ( TokSym "course" )
, L
    ( Position 43 74 )
    ( TokSym "obvious" )
, L
    ( Position 43 82 )
    ( TokSym "and" )
, L
    ( Position 43 86 )
    ( TokSym "mechanical" )
, L
    ( Position 43 96 )
    ( TokOther "," )
, L
    ( Position 43 98 )
    ( TokSym "once" )
, L
    ( Position 43 103 )
    ( TokSym "the" )
, L
    ( Position 43 107 )
    ( TokSym "idea" )
, L
    ( Position 43 112 )
    ( TokSym "of" )
, L
    ( Position 44 1 )
    ( Indent 21 )
, L
    ( Position 44 22 )
    ( TokSym "an" )
, L
    ( Position 44 25 )
    ( TokSym "effectful" )
, L
    ( Position 44 35 )
    ( TokSym "bytestring" )
, L
    ( Position 44 46 )
    ( TokSym "type" )
, L
    ( Position 44 51 )
    ( TokSym "is" )
, L
    ( Position 44 54 )
    ( TokSym "contemplated" )
, L
    ( Position 44 67 )
    ( TokSym "and" )
, L
    ( Position 44 71 )
    ( TokSym "lazy" )
, L
    ( Position 44 76 )
    ( TokSym "io" )
, L
    ( Position 44 79 )
    ( TokSym "is" )
, L
    ( Position 44 82 )
    ( TokSym "rejected." )
, L
    ( Position 45 1 )
    ( Indent 21 )
, L
    ( Position 45 22 )
    ( TokSym "Indeed" )
, L
    ( Position 45 29 )
    ( TokSym "it" )
, L
    ( Position 45 32 )
    ( TokSym "seems" )
, L
    ( Position 45 38 )
    ( TokSym "that" )
, L
    ( Position 45 43 )
    ( TokSym "this" )
, L
    ( Position 45 48 )
    ( TokSym "is" )
, L
    ( Position 45 51 )
    ( TokSym "the" )
, L
    ( Position 45 55 )
    ( TokSym "proper" )
, L
    ( Position 45 62 )
    ( TokSym "expression" )
, L
    ( Position 45 73 )
    ( TokSym "of" )
, L
    ( Position 45 76 )
    ( TokSym "what" )
, L
    ( Position 45 81 )
    ( TokSym "was" )
, L
    ( Position 46 1 )
    ( Indent 21 )
, L
    ( Position 46 22 )
    ( TokSym "intended" )
, L
    ( Position 46 31 )
    ( TokSym "by" )
, L
    ( Position 46 34 )
    ( TokSym "lazy" )
, L
    ( Position 46 39 )
    ( TokSym "bytestrings" )
, L
    ( Position 46 51 )
    ( TokSym "to" )
, L
    ( Position 46 54 )
    ( TokSym "begin" )
, L
    ( Position 46 60 )
    ( TokSym "with." )
, L
    ( Position 46 66 )
    ( TokSym "The" )
, L
    ( Position 46 70 )
    ( TokSym "documentation" )
, L
    ( Position 46 83 )
    ( TokOther "," )
, L
    ( Position 46 85 )
    ( TokSym "after" )
, L
    ( Position 46 91 )
    ( TokSym "all" )
, L
    ( Position 46 94 )
    ( TokOther "," )
, L
    ( Position 47 1 )
    ( Indent 21 )
, L
    ( Position 47 22 )
    ( TokSym "reads" )
, L
    ( Position 48 1 )
    ( Indent 21 )
, L
    ( Position 48 22 )
    ( TokSym "." )
, L
    ( Position 49 1 )
    ( Indent 21 )
, L
    ( Position 49 22 )
    ( TokOther "*" )
, L
    ( Position 49 24 )
    ( TokOther "\" )
, L
    ( Position 49 95 )
    ( LexicalError "
                           unbounded streams of data without requiring the entire sequence to be
                           resident in memory. To take advantage of this you have to write your
                           functions in a lazy streaming style, e.g. classic pipeline composition.
                           The default I/O chunk size is 32k, which should be good in most circumstances.\"
                         .
                         ... which is very much the idea of this library: the default chunk size for
                         'hGetContents' and the like follows @Data.ByteString.Lazy@; operations
                         like @lines@ and @append@ and so on are tailored not to increase chunk size.
                         .
                         The present library is thus if you like nothing but /lazy bytestring done right/.
                         The authors of @Data.ByteString.Lazy@ must have supposed that
                         the directly monadic formulation of such their type
                         would necessarily make things slower. This appears to be a prejudice.
                         For example, passing a large file of short lines through
                         this benchmark transformation
                         .
                         > Lazy.unlines      . map    (\bs -> "!"       <> Lazy.drop 5 bs)       . Lazy.lines
                         > Streaming.unlines . S.maps (\bs -> chunk "!" >> Streaming.drop 5 bs)  . Streaming.lines
                         .
                         gives pleasing results like these
                         .
                         > $  time ./benchlines lazy >> /dev/null
                         > real\x90m2.097s
                         > ...
                         > $  time ./benchlines streaming >> /dev/null
                         > real\x90m1.930s
                         .
                         For a more sophisticated operation like
                         .
                         > Lazy.intercalate "!\n"      . Lazy.lines
                         > Streaming.intercalate "!\n" . Streaming.lines
                         .
                         we get results like these:
                         .
                         > time ./benchlines lazy >> /dev/null
                         > real\x90m1.250s
                         > ...
                         > time ./benchlines streaming >> /dev/null
                         > real\x90m1.531s
                         .
                         The pipes environment would express the latter as
                         .
                         > Pipes.intercalates (Pipes.yield "!\n") . view Pipes.lines
                         .
                         meaning almost exactly what we mean above, but with results like this
                         .
                         >  time ./benchlines pipes >> /dev/null
                         >  real\x90m6.353s
                         .
                         The difference, however, /is emphatically not intrinsic to pipes/;
                         it is just that
                         this library depends the @streaming@ library, which is used in place
                         of @free@ to express the
                         <http://www.haskellforall.com/2013/09/perfect-streaming-using-pipes-bytestring.html "perfectly streaming">
                         splitting and iterated division or "chunking" of byte streams.
                         .
                         These concepts belong to the ABCs of streaming; @lines@ is just
                         a textbook example, and it is of course handled correctly in
                         @Data.ByteString.Lazy@.
                         But the concepts are /catastrophically mishandled/ in /all/ streaming io libraries
                         other than pipes. Already the @enumerator@ and @iteratee@ libraries
                         were completely defeated by @lines@:
                         see e.g. the @enumerator@ implementation of
                         <http://hackage.haskell.org/package/enumerator-0.4.20/docs/Data-Enumerator-Text.html#v:splitWhen splitWhen and lines>.
                         This will concatenate strict text forever, if that's what is coming
                         in.  The rot spreads from there.
                         It is just a fact that in all of the general streaming io
                         frameworks other than pipes,it becomes torture to express elementary distinctions
                         that are transparently and immediately contained in any
                         idea of streaming whatsoever.
                         .
                         Though, as was said above, we barely alter signatures in @Data.ByteString.Lazy@
                         more than is required by the types, the point of view that emerges
                         is very much that of
                         @pipes-bytestring@ and @pipes-group@. In particular
                         we have these correspondences:
                         .
                         > Lazy.splitAt      :: Int -> ByteString              -> (ByteString, ByteString)
                         > Streaming.splitAt :: Int -> ByteString m r          -> ByteString m (ByteString m r)
                         > Pipes.splitAt     :: Int -> Producer ByteString m r -> Producer ByteString m (Producer ByteString m r)
                         .
                         and
                         .
                         > Lazy.lines      :: ByteString -> [ByteString]
                         > Streaming.lines :: ByteString m r -> Stream (ByteString m) m r
                         > Pipes.lines     :: Producer ByteString m r -> FreeT (Producer ByteString m) m r
                         .
                         where the @Stream@ type expresses the sequencing of @ByteString m _@ layers
                         with the usual \'free monad\' sequencing.
                         .
                         Interoperation with @pipes-bytestring@ uses this isomorphism:
                         .
                         > Streaming.ByteString.unfoldrChunks Pipes.next :: Monad m => Producer ByteString m r -> ByteString m r
                         > Pipes.unfoldr Streaming.ByteString.nextChunk  :: Monad m => ByteString m r -> Producer ByteString m r
                         .
                         Interoperation with @io-streams@ is thus:
                         .
                         > IOStreams.unfoldM Streaming.ByteString.unconsChunk :: ByteString IO () -> IO (InputStream ByteString)
                         > Streaming.ByteString.reread IOStreams.read         :: InputStream ByteString -> ByteString IO ()
                         .
                         and similarly for other rational streaming io libraries.
                         .
                         Problems and questions about the library can be put as issues on
                         the github page, or mailed to the
                         <https://groups.google.com/forum/#!forum/haskell-pipes pipes list>.
                         .
                         A tutorial module is in the works;
                         <https://gist.github.com/michaelt/6c6843e6dd8030e95d58 here>,
                         for the moment,
                         is a sequence of simplified implementations of familiar shell utilities.
                         The same programs are implemented at the end of the excellent
                           <http://hackage.haskell.org/package/io-streams-1.3.2.0/docs/System-IO-Streams-Tutorial.html io-streams tutorial>.
                           It is generally much simpler; in some case simpler than what
                           you would write with lazy bytestrings.
                           <https://gist.github.com/michaelt/2dcea1ba32562c091357 Here>
                           is a simple GET request that returns a byte stream.
                           .


    license:             BSD3
    license-file:        LICENSE
    author:              michaelt
    maintainer:          andrew.thaddeus@gmail.com, what_is_it_to_do_anything@yahoo.com
    -- copyright:
    category:            Data, Pipes, Streaming
    build-type:          Simple
    extra-source-files:  README.md, ChangeLog.md
    cabal-version:       >=1.10
    stability:           Experimental
    homepage:            https://github.com/haskell-streaming/streaming-bytestring
    bug-reports:         https://github.com/haskell-streaming/streaming-bytestring/issues
    source-repository head
        type: git
        location: https://github.com/michaelt/streaming-bytestring


    library
      exposed-modules:     Data.ByteString.Streaming
                           , Data.ByteString.Streaming.Char8
                           , Data.ByteString.Streaming.Internal


      -- other-modules:
      other-extensions:    CPP, BangPatterns, ForeignFunctionInterface, DeriveDataTypeable, Unsafe
      build-depends:       base  <5.0
                         , bytestring
                         , deepseq
                         , exceptions
                         , mmorph >=1.0 && <1.2
                         , mtl >=2.1 && <2.3
                         , resourcet
                         , transformers >=0.3 && <0.6
                         , transformers-base
                         , streaming >=  0.1.4.0 && < 0.3
      if impl(ghc < 7.8)
        build-depends: bytestring < 0.10.4.0
                     , bytestring-builder
      else
        build-depends: bytestring >= 0.10.4

      if impl(ghc < 8.0)
        build-depends: semigroups

      default-language:    Haskell2010
      ghc-options: -O2

    test-suite test
      default-language:
        Haskell2010
      type:
        exitcode-stdio-1.0
      hs-source-dirs:
        tests
      main-is:
        test.hs
      build-depends:
          base >= 4 && < 5
        , transformers
        , tasty >= 0.11.0.4
        , tasty-smallcheck >= 0.8.1
        , smallcheck >= 1.1.1
        , streaming
        , streaming-bytestring
        , bytestring
    " )
, L
    ( Position 49 25 ) EOF
]
