[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 22 )
    ( TokSym "streaming-bytestring" )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 22 )
    ( TokSym "0.1.0.5" )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "synopsis" )
, L
    ( Position 3 9 ) Colon
, L
    ( Position 3 22 )
    ( TokSym "effectful" )
, L
    ( Position 3 32 )
    ( TokSym "byte" )
, L
    ( Position 3 37 )
    ( TokSym "steams" )
, L
    ( Position 3 43 )
    ( TokOther "," )
, L
    ( Position 3 45 )
    ( TokSym "or" )
, L
    ( Position 3 47 ) Colon
, L
    ( Position 3 49 )
    ( TokSym "lazy" )
, L
    ( Position 3 54 )
    ( TokSym "bytestring" )
, L
    ( Position 3 65 )
    ( TokSym "done" )
, L
    ( Position 3 70 )
    ( TokSym "right" )
, L
    ( Position 5 1 )
    ( Indent 0 )
, L
    ( Position 5 1 )
    ( TokSym "description" )
, L
    ( Position 5 12 ) Colon
, L
    ( Position 5 22 )
    ( TokSym "This" )
, L
    ( Position 5 27 )
    ( TokSym "is" )
, L
    ( Position 5 30 )
    ( TokSym "an" )
, L
    ( Position 5 33 )
    ( TokSym "implementation" )
, L
    ( Position 5 48 )
    ( TokSym "of" )
, L
    ( Position 5 51 )
    ( TokSym "effectful" )
, L
    ( Position 5 60 )
    ( TokOther "," )
, L
    ( Position 5 62 )
    ( TokSym "memory-constrained" )
, L
    ( Position 6 1 )
    ( Indent 21 )
, L
    ( Position 6 22 )
    ( TokSym "bytestrings" )
, L
    ( Position 6 34 )
    ( TokOther "(" )
, L
    ( Position 6 35 )
    ( TokSym "byte" )
, L
    ( Position 6 40 )
    ( TokSym "streams" )
, L
    ( Position 6 47 )
    ( TokOther ")" )
, L
    ( Position 6 49 )
    ( TokSym "and" )
, L
    ( Position 6 53 )
    ( TokSym "functions" )
, L
    ( Position 6 63 )
    ( TokSym "for" )
, L
    ( Position 6 67 )
    ( TokSym "streaming" )
, L
    ( Position 7 1 )
    ( Indent 21 )
, L
    ( Position 7 22 )
    ( TokSym "bytestring" )
, L
    ( Position 7 33 )
    ( TokSym "manipulation" )
, L
    ( Position 7 45 )
    ( TokOther "," )
, L
    ( Position 7 47 )
    ( TokSym "adequate" )
, L
    ( Position 7 56 )
    ( TokSym "for" )
, L
    ( Position 7 60 )
    ( TokSym "non-lazy-io." )
, L
    ( Position 8 1 )
    ( Indent 21 )
, L
    ( Position 8 22 )
    ( TokSym "." )
, L
    ( Position 9 1 )
    ( Indent 21 )
, L
    ( Position 9 22 )
    ( TokSym "Interoperation" )
, L
    ( Position 9 37 )
    ( TokSym "with" )
, L
    ( Position 9 42 )
    ( TokOther "@" )
, L
    ( Position 9 43 )
    ( TokSym "pipes" )
, L
    ( Position 9 48 )
    ( TokOther "@" )
, L
    ( Position 9 50 )
    ( TokSym "uses" )
, L
    ( Position 9 55 )
    ( TokSym "this" )
, L
    ( Position 9 60 )
    ( TokSym "isomorphism" )
, L
    ( Position 9 71 ) Colon
, L
    ( Position 10 1 )
    ( Indent 21 )
, L
    ( Position 10 22 )
    ( TokSym "." )
, L
    ( Position 11 1 )
    ( Indent 21 )
, L
    ( Position 11 22 )
    ( TokOther ">" )
, L
    ( Position 11 24 )
    ( TokSym "Streaming.unfoldrChunks" )
, L
    ( Position 11 48 )
    ( TokSym "Pipes.next" )
, L
    ( Position 11 59 ) Colon
, L
    ( Position 11 60 ) Colon
, L
    ( Position 11 62 )
    ( TokSym "Monad" )
, L
    ( Position 11 68 )
    ( TokSym "m" )
, L
    ( Position 11 70 )
    ( TokOther "=>" )
, L
    ( Position 11 73 )
    ( TokSym "Producer" )
, L
    ( Position 11 82 )
    ( TokSym "ByteString" )
, L
    ( Position 11 93 )
    ( TokSym "m" )
, L
    ( Position 11 95 )
    ( TokSym "r" )
, L
    ( Position 11 97 )
    ( TokOther "->" )
, L
    ( Position 11 100 )
    ( TokSym "ByteString" )
, L
    ( Position 11 111 )
    ( TokSym "m" )
, L
    ( Position 11 113 )
    ( TokSym "r" )
, L
    ( Position 12 1 )
    ( Indent 21 )
, L
    ( Position 12 22 )
    ( TokOther ">" )
, L
    ( Position 12 24 )
    ( TokSym "Pipes.unfoldr" )
, L
    ( Position 12 38 )
    ( TokSym "Streaming.nextChunk" )
, L
    ( Position 12 59 ) Colon
, L
    ( Position 12 60 ) Colon
, L
    ( Position 12 62 )
    ( TokSym "Monad" )
, L
    ( Position 12 68 )
    ( TokSym "m" )
, L
    ( Position 12 70 )
    ( TokOther "=>" )
, L
    ( Position 12 73 )
    ( TokSym "ByteString" )
, L
    ( Position 12 84 )
    ( TokSym "m" )
, L
    ( Position 12 86 )
    ( TokSym "r" )
, L
    ( Position 12 88 )
    ( TokOther "->" )
, L
    ( Position 12 91 )
    ( TokSym "Producer" )
, L
    ( Position 12 100 )
    ( TokSym "ByteString" )
, L
    ( Position 12 111 )
    ( TokSym "m" )
, L
    ( Position 12 113 )
    ( TokSym "r" )
, L
    ( Position 13 1 )
    ( Indent 21 )
, L
    ( Position 13 22 )
    ( TokSym "." )
, L
    ( Position 14 1 )
    ( Indent 21 )
, L
    ( Position 14 22 )
    ( TokSym "Interoperation" )
, L
    ( Position 14 37 )
    ( TokSym "with" )
, L
    ( Position 14 42 )
    ( TokOther "@" )
, L
    ( Position 14 43 )
    ( TokSym "io-streams" )
, L
    ( Position 14 53 )
    ( TokOther "@" )
, L
    ( Position 14 55 )
    ( TokSym "is" )
, L
    ( Position 14 58 )
    ( TokSym "thus" )
, L
    ( Position 14 62 ) Colon
, L
    ( Position 15 1 )
    ( Indent 21 )
, L
    ( Position 15 22 )
    ( TokSym "." )
, L
    ( Position 16 1 )
    ( Indent 21 )
, L
    ( Position 16 22 )
    ( TokOther ">" )
, L
    ( Position 16 24 )
    ( TokSym "IOStreams.unfoldM" )
, L
    ( Position 16 42 )
    ( TokSym "Streaming.unconsChunk" )
, L
    ( Position 16 64 ) Colon
, L
    ( Position 16 65 ) Colon
, L
    ( Position 16 67 )
    ( TokSym "ByteString" )
, L
    ( Position 16 78 )
    ( TokSym "IO" )
, L
    ( Position 16 81 )
    ( TokOther "(" )
, L
    ( Position 16 82 )
    ( TokOther ")" )
, L
    ( Position 16 84 )
    ( TokOther "->" )
, L
    ( Position 16 87 )
    ( TokSym "IO" )
, L
    ( Position 16 90 )
    ( TokOther "(" )
, L
    ( Position 16 91 )
    ( TokSym "InputStream" )
, L
    ( Position 16 103 )
    ( TokSym "ByteString" )
, L
    ( Position 16 113 )
    ( TokOther ")" )
, L
    ( Position 17 1 )
    ( Indent 21 )
, L
    ( Position 17 22 )
    ( TokOther ">" )
, L
    ( Position 17 24 )
    ( TokSym "Streaming.reread" )
, L
    ( Position 17 41 )
    ( TokSym "IOStreams.read" )
, L
    ( Position 17 64 ) Colon
, L
    ( Position 17 65 ) Colon
, L
    ( Position 17 67 )
    ( TokSym "InputStream" )
, L
    ( Position 17 79 )
    ( TokSym "ByteString" )
, L
    ( Position 17 90 )
    ( TokOther "->" )
, L
    ( Position 17 93 )
    ( TokSym "ByteString" )
, L
    ( Position 17 104 )
    ( TokSym "IO" )
, L
    ( Position 17 107 )
    ( TokOther "(" )
, L
    ( Position 17 108 )
    ( TokOther ")" )
, L
    ( Position 18 1 )
    ( Indent 21 )
, L
    ( Position 18 22 )
    ( TokSym "." )
, L
    ( Position 19 1 )
    ( Indent 21 )
, L
    ( Position 19 22 )
    ( TokSym "and" )
, L
    ( Position 19 26 )
    ( TokSym "similarly" )
, L
    ( Position 19 36 )
    ( TokSym "for" )
, L
    ( Position 19 40 )
    ( TokSym "other" )
, L
    ( Position 19 46 )
    ( TokSym "rational" )
, L
    ( Position 19 55 )
    ( TokSym "streaming" )
, L
    ( Position 19 65 )
    ( TokSym "io" )
, L
    ( Position 19 68 )
    ( TokSym "libraries." )
, L
    ( Position 20 1 )
    ( Indent 21 )
, L
    ( Position 20 22 )
    ( TokSym "." )
, L
    ( Position 21 1 )
    ( Indent 21 )
, L
    ( Position 21 22 )
    ( TokSym "A" )
, L
    ( Position 21 24 )
    ( TokSym "tutorial" )
, L
    ( Position 21 33 )
    ( TokSym "module" )
, L
    ( Position 21 40 )
    ( TokSym "is" )
, L
    ( Position 21 43 )
    ( TokSym "in" )
, L
    ( Position 21 46 )
    ( TokSym "the" )
, L
    ( Position 21 50 )
    ( TokSym "works;" )
, L
    ( Position 22 1 )
    ( Indent 21 )
, L
    ( Position 22 22 )
    ( TokOther "<" )
, L
    ( Position 22 23 )
    ( TokSym "https" )
, L
    ( Position 22 28 ) Colon
, L
    ( Position 22 29 )
    ( TokOther "//" )
, L
    ( Position 22 31 )
    ( TokSym "gist.github.com" )
, L
    ( Position 22 46 )
    ( TokOther "/" )
, L
    ( Position 22 47 )
    ( TokSym "michaelt" )
, L
    ( Position 22 55 )
    ( TokOther "/" )
, L
    ( Position 22 56 )
    ( TokSym "6c6843e6dd8030e95d58" )
, L
    ( Position 22 77 )
    ( TokSym "here" )
, L
    ( Position 22 81 )
    ( TokOther ">" )
, L
    ( Position 23 1 )
    ( Indent 21 )
, L
    ( Position 23 22 )
    ( TokSym "is" )
, L
    ( Position 23 25 )
    ( TokSym "a" )
, L
    ( Position 23 27 )
    ( TokSym "sequence" )
, L
    ( Position 23 36 )
    ( TokSym "of" )
, L
    ( Position 23 39 )
    ( TokSym "simplified" )
, L
    ( Position 23 50 )
    ( TokSym "implementations" )
, L
    ( Position 23 66 )
    ( TokSym "of" )
, L
    ( Position 23 69 )
    ( TokSym "familiar" )
, L
    ( Position 23 78 )
    ( TokSym "shell" )
, L
    ( Position 23 84 )
    ( TokSym "utilities." )
, L
    ( Position 24 1 )
    ( Indent 21 )
, L
    ( Position 24 22 )
    ( TokSym "It" )
, L
    ( Position 24 25 )
    ( TokSym "closely" )
, L
    ( Position 24 33 )
    ( TokSym "follows" )
, L
    ( Position 24 41 )
    ( TokSym "those" )
, L
    ( Position 24 47 )
    ( TokSym "at" )
, L
    ( Position 24 50 )
    ( TokSym "the" )
, L
    ( Position 24 54 )
    ( TokSym "end" )
, L
    ( Position 24 58 )
    ( TokSym "of" )
, L
    ( Position 24 61 )
    ( TokSym "the" )
, L
    ( Position 25 1 )
    ( Indent 21 )
, L
    ( Position 25 22 )
    ( TokOther "<" )
, L
    ( Position 25 23 )
    ( TokSym "http" )
, L
    ( Position 25 27 ) Colon
, L
    ( Position 25 28 )
    ( TokOther "//" )
, L
    ( Position 25 30 )
    ( TokSym "hackage.haskell.org" )
, L
    ( Position 25 49 )
    ( TokOther "/" )
, L
    ( Position 25 50 )
    ( TokSym "package" )
, L
    ( Position 25 57 )
    ( TokOther "/" )
, L
    ( Position 25 58 )
    ( TokSym "io-streams-1.3.2.0" )
, L
    ( Position 25 76 )
    ( TokOther "/" )
, L
    ( Position 25 77 )
    ( TokSym "docs" )
, L
    ( Position 25 81 )
    ( TokOther "/" )
, L
    ( Position 25 82 )
    ( TokSym "System-IO-Streams-Tutorial.html" )
, L
    ( Position 25 114 )
    ( TokSym "io-streams" )
, L
    ( Position 25 125 )
    ( TokSym "tutorial" )
, L
    ( Position 25 133 )
    ( TokOther ">." )
, L
    ( Position 26 1 )
    ( Indent 21 )
, L
    ( Position 26 22 )
    ( TokSym "It" )
, L
    ( Position 26 25 )
    ( TokSym "is" )
, L
    ( Position 26 28 )
    ( TokSym "generally" )
, L
    ( Position 26 38 )
    ( TokSym "much" )
, L
    ( Position 26 43 )
    ( TokSym "simpler;" )
, L
    ( Position 26 52 )
    ( TokSym "in" )
, L
    ( Position 26 55 )
    ( TokSym "some" )
, L
    ( Position 26 60 )
    ( TokSym "case" )
, L
    ( Position 26 65 )
    ( TokSym "simpler" )
, L
    ( Position 26 73 )
    ( TokSym "than" )
, L
    ( Position 26 78 )
    ( TokSym "what" )
, L
    ( Position 27 1 )
    ( Indent 21 )
, L
    ( Position 27 22 )
    ( TokSym "you" )
, L
    ( Position 27 26 )
    ( TokSym "would" )
, L
    ( Position 27 32 )
    ( TokSym "write" )
, L
    ( Position 27 38 )
    ( TokSym "with" )
, L
    ( Position 27 43 )
    ( TokSym "lazy" )
, L
    ( Position 27 48 )
    ( TokSym "bytestrings." )
, L
    ( Position 28 1 )
    ( Indent 21 )
, L
    ( Position 28 22 )
    ( TokOther "<" )
, L
    ( Position 28 23 )
    ( TokSym "https" )
, L
    ( Position 28 28 ) Colon
, L
    ( Position 28 29 )
    ( TokOther "//" )
, L
    ( Position 28 31 )
    ( TokSym "gist.github.com" )
, L
    ( Position 28 46 )
    ( TokOther "/" )
, L
    ( Position 28 47 )
    ( TokSym "michaelt" )
, L
    ( Position 28 55 )
    ( TokOther "/" )
, L
    ( Position 28 56 )
    ( TokSym "2dcea1ba32562c091357" )
, L
    ( Position 28 77 )
    ( TokSym "Here" )
, L
    ( Position 28 81 )
    ( TokOther ">" )
, L
    ( Position 29 1 )
    ( Indent 21 )
, L
    ( Position 29 22 )
    ( TokSym "is" )
, L
    ( Position 29 25 )
    ( TokSym "a" )
, L
    ( Position 29 27 )
    ( TokSym "simple" )
, L
    ( Position 29 34 )
    ( TokSym "GET" )
, L
    ( Position 29 38 )
    ( TokSym "request" )
, L
    ( Position 29 46 )
    ( TokSym "that" )
, L
    ( Position 29 51 )
    ( TokSym "returns" )
, L
    ( Position 29 59 )
    ( TokSym "a" )
, L
    ( Position 29 61 )
    ( TokSym "byte" )
, L
    ( Position 29 66 )
    ( TokSym "stream." )
, L
    ( Position 30 1 )
    ( Indent 21 )
, L
    ( Position 30 22 )
    ( TokSym "." )
, L
    ( Position 31 1 )
    ( Indent 21 )
, L
    ( Position 31 22 )
    ( TokSym "The" )
, L
    ( Position 31 26 )
    ( TokSym "implementation" )
, L
    ( Position 31 41 )
    ( TokSym "follows" )
, L
    ( Position 31 49 )
    ( TokSym "the" )
, L
    ( Position 32 1 )
    ( Indent 21 )
, L
    ( Position 32 22 )
    ( TokSym "details" )
, L
    ( Position 32 30 )
    ( TokSym "of" )
, L
    ( Position 32 33 )
    ( TokOther "@" )
, L
    ( Position 32 34 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 32 54 )
    ( TokOther "@" )
, L
    ( Position 32 56 )
    ( TokSym "and" )
, L
    ( Position 32 60 )
    ( TokOther "@" )
, L
    ( Position 32 61 )
    ( TokSym "Data.ByteString.Lazy.Char8" )
, L
    ( Position 32 87 )
    ( TokOther "@" )
, L
    ( Position 33 1 )
    ( Indent 21 )
, L
    ( Position 33 22 )
    ( TokSym "as" )
, L
    ( Position 33 25 )
    ( TokSym "far" )
, L
    ( Position 33 29 )
    ( TokSym "as" )
, L
    ( Position 33 32 )
    ( TokSym "is" )
, L
    ( Position 33 35 )
    ( TokSym "possible" )
, L
    ( Position 33 43 )
    ( TokOther "," )
, L
    ( Position 33 45 )
    ( TokSym "replacing" )
, L
    ( Position 33 55 )
    ( TokSym "the" )
, L
    ( Position 33 59 )
    ( TokSym "lazy" )
, L
    ( Position 33 64 )
    ( TokSym "bytestring" )
, L
    ( Position 33 75 )
    ( TokSym "type" )
, L
    ( Position 33 79 ) Colon
, L
    ( Position 34 1 )
    ( Indent 21 )
, L
    ( Position 34 22 )
    ( TokSym "." )
, L
    ( Position 35 1 )
    ( Indent 21 )
, L
    ( Position 35 22 )
    ( TokOther ">" )
, L
    ( Position 35 24 )
    ( TokSym "data" )
, L
    ( Position 35 29 )
    ( TokSym "ByteString" )
, L
    ( Position 35 44 )
    ( TokOther "=" )
, L
    ( Position 35 46 )
    ( TokSym "Empty" )
, L
    ( Position 35 54 )
    ( TokOther "|" )
, L
    ( Position 35 56 )
    ( TokSym "Chunk" )
, L
    ( Position 35 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 35 80 )
    ( TokSym "ByteString" )
, L
    ( Position 36 1 )
    ( Indent 21 )
, L
    ( Position 36 22 )
    ( TokSym "." )
, L
    ( Position 37 1 )
    ( Indent 21 )
, L
    ( Position 37 22 )
    ( TokSym "with" )
, L
    ( Position 37 27 )
    ( TokSym "the" )
, L
    ( Position 37 31 )
    ( TokOther "/" )
, L
    ( Position 37 32 )
    ( TokSym "minimal" )
, L
    ( Position 37 39 )
    ( TokOther "/" )
, L
    ( Position 37 41 )
    ( TokSym "effectful" )
, L
    ( Position 37 51 )
    ( TokSym "variant" )
, L
    ( Position 37 58 ) Colon
, L
    ( Position 38 1 )
    ( Indent 21 )
, L
    ( Position 38 22 )
    ( TokSym "." )
, L
    ( Position 39 1 )
    ( Indent 21 )
, L
    ( Position 39 22 )
    ( TokOther ">" )
, L
    ( Position 39 24 )
    ( TokSym "data" )
, L
    ( Position 39 29 )
    ( TokSym "ByteString" )
, L
    ( Position 39 40 )
    ( TokSym "m" )
, L
    ( Position 39 42 )
    ( TokSym "r" )
, L
    ( Position 39 44 )
    ( TokOther "=" )
, L
    ( Position 39 46 )
    ( TokSym "Empty" )
, L
    ( Position 39 52 )
    ( TokSym "r" )
, L
    ( Position 39 54 )
    ( TokOther "|" )
, L
    ( Position 39 56 )
    ( TokSym "Chunk" )
, L
    ( Position 39 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 39 80 )
    ( TokOther "(" )
, L
    ( Position 39 81 )
    ( TokSym "ByteString" )
, L
    ( Position 39 92 )
    ( TokSym "m" )
, L
    ( Position 39 94 )
    ( TokSym "r" )
, L
    ( Position 39 95 )
    ( TokOther ")" )
, L
    ( Position 39 97 )
    ( TokOther "|" )
, L
    ( Position 39 99 )
    ( TokSym "Go" )
, L
    ( Position 39 102 )
    ( TokOther "(" )
, L
    ( Position 39 103 )
    ( TokSym "m" )
, L
    ( Position 39 105 )
    ( TokOther "(" )
, L
    ( Position 39 106 )
    ( TokSym "ByteString" )
, L
    ( Position 39 117 )
    ( TokSym "m" )
, L
    ( Position 39 119 )
    ( TokSym "r" )
, L
    ( Position 39 120 )
    ( TokOther ")" )
, L
    ( Position 39 121 )
    ( TokOther ")" )
, L
    ( Position 40 1 )
    ( Indent 21 )
, L
    ( Position 40 22 )
    ( TokSym "." )
, L
    ( Position 41 1 )
    ( Indent 21 )
, L
    ( Position 41 22 )
    ( TokOther "(" )
, L
    ( Position 41 23 )
    ( TokSym "Constructors" )
, L
    ( Position 41 36 )
    ( TokSym "are" )
, L
    ( Position 41 40 )
    ( TokSym "necessarily" )
, L
    ( Position 41 52 )
    ( TokSym "hidden" )
, L
    ( Position 41 59 )
    ( TokSym "in" )
, L
    ( Position 41 62 )
    ( TokSym "internal" )
, L
    ( Position 41 71 )
    ( TokSym "modules" )
, L
    ( Position 41 79 )
    ( TokSym "in" )
, L
    ( Position 41 82 )
    ( TokSym "both" )
, L
    ( Position 41 87 )
    ( TokSym "cases." )
, L
    ( Position 41 93 )
    ( TokOther ")" )
, L
    ( Position 42 1 )
    ( Indent 21 )
, L
    ( Position 42 22 )
    ( TokSym "." )
, L
    ( Position 43 1 )
    ( Indent 21 )
, L
    ( Position 43 22 )
    ( TokSym "That's" )
, L
    ( Position 43 29 )
    ( TokSym "it." )
, L
    ( Position 43 33 )
    ( TokSym "As" )
, L
    ( Position 43 36 )
    ( TokSym "a" )
, L
    ( Position 43 38 )
    ( TokSym "lazy" )
, L
    ( Position 43 43 )
    ( TokSym "bytestring" )
, L
    ( Position 43 54 )
    ( TokSym "is" )
, L
    ( Position 43 57 )
    ( TokSym "implemented" )
, L
    ( Position 43 69 )
    ( TokSym "internally" )
, L
    ( Position 44 1 )
    ( Indent 21 )
, L
    ( Position 44 22 )
    ( TokSym "by" )
, L
    ( Position 44 25 )
    ( TokSym "a" )
, L
    ( Position 44 27 )
    ( TokSym "sort" )
, L
    ( Position 44 32 )
    ( TokSym "of" )
, L
    ( Position 44 35 )
    ( TokSym "list" )
, L
    ( Position 44 40 )
    ( TokSym "of" )
, L
    ( Position 44 43 )
    ( TokSym "strict" )
, L
    ( Position 44 50 )
    ( TokSym "bytestring" )
, L
    ( Position 44 61 )
    ( TokSym "chunks" )
, L
    ( Position 44 67 )
    ( TokOther "," )
, L
    ( Position 44 69 )
    ( TokSym "a" )
, L
    ( Position 44 71 )
    ( TokSym "streaming" )
, L
    ( Position 44 81 )
    ( TokSym "bytestring" )
, L
    ( Position 44 92 )
    ( TokSym "is" )
, L
    ( Position 45 1 )
    ( Indent 21 )
, L
    ( Position 45 22 )
    ( TokSym "simply" )
, L
    ( Position 45 29 )
    ( TokSym "implemented" )
, L
    ( Position 45 41 )
    ( TokSym "as" )
, L
    ( Position 45 44 )
    ( TokSym "a" )
, L
    ( Position 45 46 )
    ( TokOther "/" )
, L
    ( Position 45 47 )
    ( TokSym "producer" )
, L
    ( Position 45 55 )
    ( TokOther "/" )
, L
    ( Position 45 57 )
    ( TokSym "or" )
, L
    ( Position 45 60 )
    ( TokOther "/" )
, L
    ( Position 45 61 )
    ( TokSym "generator" )
, L
    ( Position 45 70 )
    ( TokOther "/" )
, L
    ( Position 45 72 )
    ( TokSym "of" )
, L
    ( Position 45 75 )
    ( TokSym "strict" )
, L
    ( Position 45 82 )
    ( TokSym "bytestring" )
, L
    ( Position 45 93 )
    ( TokSym "chunks." )
, L
    ( Position 46 1 )
    ( Indent 21 )
, L
    ( Position 46 22 )
    ( TokSym "Most" )
, L
    ( Position 46 27 )
    ( TokSym "operations" )
, L
    ( Position 46 38 )
    ( TokSym "are" )
, L
    ( Position 46 42 )
    ( TokSym "defined" )
, L
    ( Position 46 50 )
    ( TokSym "by" )
, L
    ( Position 46 53 )
    ( TokSym "simply" )
, L
    ( Position 46 60 )
    ( TokSym "adding" )
, L
    ( Position 46 67 )
    ( TokSym "a" )
, L
    ( Position 46 69 )
    ( TokSym "line" )
, L
    ( Position 46 74 )
    ( TokSym "to" )
, L
    ( Position 46 77 )
    ( TokSym "what" )
, L
    ( Position 46 82 )
    ( TokSym "we" )
, L
    ( Position 46 85 )
    ( TokSym "find" )
, L
    ( Position 46 90 )
    ( TokSym "in" )
, L
    ( Position 47 1 )
    ( Indent 21 )
, L
    ( Position 47 22 )
    ( TokOther "@" )
, L
    ( Position 47 23 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 47 43 )
    ( TokOther "@." )
, L
    ( Position 48 1 )
    ( Indent 21 )
, L
    ( Position 48 22 )
    ( TokSym "." )
, L
    ( Position 49 1 )
    ( Indent 21 )
, L
    ( Position 49 22 )
    ( TokSym "Something" )
, L
    ( Position 49 32 )
    ( TokSym "like" )
, L
    ( Position 49 37 )
    ( TokSym "this" )
, L
    ( Position 49 42 )
    ( TokSym "alteration" )
, L
    ( Position 49 53 )
    ( TokSym "of" )
, L
    ( Position 49 56 )
    ( TokSym "type" )
, L
    ( Position 49 61 )
    ( TokSym "is" )
, L
    ( Position 49 64 )
    ( TokSym "of" )
, L
    ( Position 49 67 )
    ( TokSym "course" )
, L
    ( Position 49 74 )
    ( TokSym "obvious" )
, L
    ( Position 49 82 )
    ( TokSym "and" )
, L
    ( Position 49 86 )
    ( TokSym "mechanical" )
, L
    ( Position 49 96 )
    ( TokOther "," )
, L
    ( Position 49 98 )
    ( TokSym "once" )
, L
    ( Position 49 103 )
    ( TokSym "the" )
, L
    ( Position 49 107 )
    ( TokSym "idea" )
, L
    ( Position 49 112 )
    ( TokSym "of" )
, L
    ( Position 50 1 )
    ( Indent 21 )
, L
    ( Position 50 22 )
    ( TokSym "an" )
, L
    ( Position 50 25 )
    ( TokSym "effectful" )
, L
    ( Position 50 35 )
    ( TokSym "bytestring" )
, L
    ( Position 50 46 )
    ( TokSym "type" )
, L
    ( Position 50 51 )
    ( TokSym "is" )
, L
    ( Position 50 54 )
    ( TokSym "contemplated" )
, L
    ( Position 50 67 )
    ( TokSym "and" )
, L
    ( Position 50 71 )
    ( TokSym "lazy" )
, L
    ( Position 50 76 )
    ( TokSym "io" )
, L
    ( Position 50 79 )
    ( TokSym "is" )
, L
    ( Position 50 82 )
    ( TokSym "rejected." )
, L
    ( Position 51 1 )
    ( Indent 21 )
, L
    ( Position 51 22 )
    ( TokSym "Indeed" )
, L
    ( Position 51 29 )
    ( TokSym "it" )
, L
    ( Position 51 32 )
    ( TokSym "seems" )
, L
    ( Position 51 38 )
    ( TokSym "that" )
, L
    ( Position 51 43 )
    ( TokSym "this" )
, L
    ( Position 51 48 )
    ( TokSym "is" )
, L
    ( Position 51 51 )
    ( TokSym "the" )
, L
    ( Position 51 55 )
    ( TokSym "proper" )
, L
    ( Position 51 62 )
    ( TokSym "expression" )
, L
    ( Position 51 73 )
    ( TokSym "of" )
, L
    ( Position 51 76 )
    ( TokSym "what" )
, L
    ( Position 51 81 )
    ( TokSym "was" )
, L
    ( Position 52 1 )
    ( Indent 21 )
, L
    ( Position 52 22 )
    ( TokSym "intended" )
, L
    ( Position 52 31 )
    ( TokSym "by" )
, L
    ( Position 52 34 )
    ( TokSym "lazy" )
, L
    ( Position 52 39 )
    ( TokSym "bytestrings" )
, L
    ( Position 52 51 )
    ( TokSym "to" )
, L
    ( Position 52 54 )
    ( TokSym "begin" )
, L
    ( Position 52 60 )
    ( TokSym "with." )
, L
    ( Position 52 66 )
    ( TokSym "The" )
, L
    ( Position 52 70 )
    ( TokSym "documentation" )
, L
    ( Position 52 83 )
    ( TokOther "," )
, L
    ( Position 52 85 )
    ( TokSym "after" )
, L
    ( Position 52 91 )
    ( TokSym "all" )
, L
    ( Position 52 94 )
    ( TokOther "," )
, L
    ( Position 53 1 )
    ( Indent 21 )
, L
    ( Position 53 22 )
    ( TokSym "reads" )
, L
    ( Position 54 1 )
    ( Indent 21 )
, L
    ( Position 54 22 )
    ( TokSym "." )
, L
    ( Position 55 1 )
    ( Indent 21 )
, L
    ( Position 55 22 )
    ( TokOther "*" )
, L
    ( Position 55 24 )
    ( TokOther "\" )
, L
    ( Position 55 96 )
    ( LexicalError "
                           unbounded streams of data without requiring the entire sequence to be 
                           resident in memory. To take advantage of this you have to write your 
                           functions in a lazy streaming style, e.g. classic pipeline composition. 
                           The default I/O chunk size is 32k, which should be good in most circumstances.\"
                         .
                         ... which is very much the idea of this library: the default chunk size for
                         'hGetContents' and the like follows @Data.ByteString.Lazy@ and operations
                         like @lines@ and @append@ and so on are tailored not to increase chunk size. 
                         .
                         It is natural to think that 
                         the direct, naive, monadic formulation of such a type 
                         would necessarily make things much slower. This appears to be a prejudice. 
                         For example, passing a large file of short lines through
                         this benchmark transformation
                         .
                         > Lazy.unlines      . map    (\bs -> "!"       <> Lazy.drop 5 bs)       . Lazy.lines
                         > Streaming.unlines . S.maps (\bs -> chunk "!" >> Streaming.drop 5 bs)  . Streaming.lines
                         .
                         gives pleasing results like these
                         .
                         > $  time ./benchlines lazy >> /dev/null
                         > real\x90m2.097s
                         > ...
                         > $  time ./benchlines streaming >> /dev/null
                         > real\x90m1.930s
                         .
                         More typical, perhaps, are the results for the more 
                         sophisticated operation 
                         .
                         > Lazy.intercalate "!\n"      . Lazy.lines
                         > Streaming.intercalate "!\n" . Streaming.lines
                         .
                         > time ./benchlines lazy >> /dev/null
                         > real\x90m1.250s
                         > ...
                         > time ./benchlines streaming >> /dev/null
                         > real\x90m1.531s
                         . 
                         The pipes environment would express the latter as 
                         .
                         > Pipes.intercalates (Pipes.yield "!\n") . view Pipes.lines 
                         .
                         meaning almost exactly what we mean above, but with results like this
                         .
                         >  time ./benchlines pipes >> /dev/null
                         >  real\x90m6.353s
                         .
                         The difference is not intrinsic to pipes, but is mostly that 
                         this library depends the @streaming@ library, which is used in place 
                         of @free@ to express the (streaming) splitting and division of byte streams. 
                         Those elementary concepts are catastrophically mishandled in the streaming io libraries 
                         other than pipes. Already the @enumerator@ and @iteratee@ libraries
                         were completely defeated by it: see e.g. the @enumerator@ implementation of 
                         <http://hackage.haskell.org/package/enumerator-0.4.20/docs/Data-Enumerator-Text.html#v:splitWhen splitWhen and lines>.
                         This will concatenate strict text forever, if that's what is coming
                         in.  It becomes torture to express elementary distinctions. 
                         .
                         Though we barely alter signatures in @Data.ByteString.Lazy@ 
                         more than is required  by the types, 
                         the point of view that emerges is very much that of
                         @pipes-bytestring@ and @pipes-group@. In particular
                         we have these correspondences:
                         .
                         > Lazy.splitAt      :: Int -> ByteString              -> (ByteString, ByteString)
                         > Streaming.splitAt :: Int -> ByteString m r          -> ByteString m (ByteString m r)
                         > Pipes.splitAt     :: Int -> Producer ByteString m r -> Producer ByteString m (Producer ByteString m r)
                         .
                         and
                         .
                         > Lazy.lines      :: ByteString -> [ByteString]
                         > Streaming.lines :: ByteString m r -> Stream (ByteString m) m r
                         > Pipes.lines     :: Producer ByteString m r -> FreeT (Producer ByteString m) m r
                         .
                         where the @Stream@ type expresses the sequencing of @ByteString m _@ layers
                         with the usual \'free monad\' sequencing. 
                         .
                         If you are unfamiliar with this
                         way of structuring material you might take a look at the tutorial for 
                         <http://hackage.haskell.org/package/pipes-group-1.0.2/docs/Pipes-Group-Tutorial.html pipes-group>
                         and the examples in the documentation for the streaming library. See also
                         <https://gist.github.com/michaelt/6c6843e6dd8030e95d58 simple implementations> 
                         of the shell-like examples mentioned above.

                        
    license:             BSD3
    license-file:        LICENSE
    author:              michaelt
    maintainer:          what_is_it_to_do_anything@yahoo.com
    -- copyright:           
    category:            Data
    build-type:          Simple
    extra-source-files:  ChangeLog.md
    cabal-version:       >=1.10

    library
      exposed-modules:     Data.ByteString.Streaming
                           , Data.ByteString.Streaming.Char8
                           , Data.ByteString.Streaming.Internal

                           
      -- other-modules:       
      other-extensions:    CPP, BangPatterns, ForeignFunctionInterface, DeriveDataTypeable, Unsafe
      build-depends:       base >=4.7 && <4.9
                         , bytestring >=0.10 && <0.11
                         , deepseq 
                         , mtl >=2.1 && <2.3
                         , mmorph >=1.0 && <1.2
                         , transformers >=0.3 && <0.5
                         , streaming > 0.1.0.8 && < 0.1.1

      -- hs-source-dirs:      
      default-language:    Haskell2010
      ghc-options: -O2" )
, L
    ( Position 55 25 ) EOF
]
