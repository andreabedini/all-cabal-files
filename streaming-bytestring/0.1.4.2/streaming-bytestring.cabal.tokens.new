[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 6 )
    ( Whitespace "                " )
, L
    ( Position 1 22 )
    ( TokSym "streaming-bytestring" )
, L
    ( Position 1 42 )
    ( Whitespace "
    " )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 9 )
    ( Whitespace "             " )
, L
    ( Position 2 22 )
    ( TokSym "0.1.4.2" )
, L
    ( Position 2 29 )
    ( Whitespace "
    " )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "synopsis" )
, L
    ( Position 3 9 ) Colon
, L
    ( Position 3 10 )
    ( Whitespace "            " )
, L
    ( Position 3 22 )
    ( TokSym "effectful" )
, L
    ( Position 3 31 )
    ( Whitespace " " )
, L
    ( Position 3 32 )
    ( TokSym "byte" )
, L
    ( Position 3 36 )
    ( Whitespace " " )
, L
    ( Position 3 37 )
    ( TokSym "steams" )
, L
    ( Position 3 43 )
    ( TokOther "," )
, L
    ( Position 3 44 )
    ( Whitespace " " )
, L
    ( Position 3 45 )
    ( TokSym "or" )
, L
    ( Position 3 47 ) Colon
, L
    ( Position 3 48 )
    ( Whitespace " " )
, L
    ( Position 3 49 )
    ( TokSym "bytestring" )
, L
    ( Position 3 59 )
    ( Whitespace " " )
, L
    ( Position 3 60 )
    ( TokSym "io" )
, L
    ( Position 3 62 )
    ( Whitespace " " )
, L
    ( Position 3 63 )
    ( TokSym "done" )
, L
    ( Position 3 67 )
    ( Whitespace " " )
, L
    ( Position 3 68 )
    ( TokSym "right." )
, L
    ( Position 3 74 )
    ( Whitespace "
    " )
, L
    ( Position 4 1 )
    ( Whitespace "
    " )
, L
    ( Position 5 1 )
    ( Indent 0 )
, L
    ( Position 5 1 )
    ( TokSym "description" )
, L
    ( Position 5 12 ) Colon
, L
    ( Position 5 13 )
    ( Whitespace "         " )
, L
    ( Position 5 22 )
    ( TokSym "This" )
, L
    ( Position 5 26 )
    ( Whitespace " " )
, L
    ( Position 5 27 )
    ( TokSym "is" )
, L
    ( Position 5 29 )
    ( Whitespace " " )
, L
    ( Position 5 30 )
    ( TokSym "an" )
, L
    ( Position 5 32 )
    ( Whitespace " " )
, L
    ( Position 5 33 )
    ( TokSym "implementation" )
, L
    ( Position 5 47 )
    ( Whitespace " " )
, L
    ( Position 5 48 )
    ( TokSym "of" )
, L
    ( Position 5 50 )
    ( Whitespace " " )
, L
    ( Position 5 51 )
    ( TokSym "effectful" )
, L
    ( Position 5 60 )
    ( TokOther "," )
, L
    ( Position 5 61 )
    ( Whitespace " " )
, L
    ( Position 5 62 )
    ( TokSym "memory-constrained" )
, L
    ( Position 5 80 )
    ( Whitespace " " )
, L
    ( Position 5 81 )
    ( Whitespace "
    " )
, L
    ( Position 6 1 )
    ( Indent 21 )
, L
    ( Position 6 22 )
    ( TokSym "bytestrings" )
, L
    ( Position 6 33 )
    ( Whitespace " " )
, L
    ( Position 6 34 )
    ( TokOther "(" )
, L
    ( Position 6 35 )
    ( TokSym "byte" )
, L
    ( Position 6 39 )
    ( Whitespace " " )
, L
    ( Position 6 40 )
    ( TokSym "streams" )
, L
    ( Position 6 47 )
    ( TokOther ")" )
, L
    ( Position 6 48 )
    ( Whitespace " " )
, L
    ( Position 6 49 )
    ( TokSym "and" )
, L
    ( Position 6 52 )
    ( Whitespace " " )
, L
    ( Position 6 53 )
    ( TokSym "functions" )
, L
    ( Position 6 62 )
    ( Whitespace " " )
, L
    ( Position 6 63 )
    ( TokSym "for" )
, L
    ( Position 6 66 )
    ( Whitespace " " )
, L
    ( Position 6 67 )
    ( TokSym "streaming" )
, L
    ( Position 6 76 )
    ( Whitespace " " )
, L
    ( Position 6 77 )
    ( Whitespace "
    " )
, L
    ( Position 7 1 )
    ( Indent 21 )
, L
    ( Position 7 22 )
    ( TokSym "bytestring" )
, L
    ( Position 7 32 )
    ( Whitespace " " )
, L
    ( Position 7 33 )
    ( TokSym "manipulation" )
, L
    ( Position 7 45 )
    ( TokOther "," )
, L
    ( Position 7 46 )
    ( Whitespace " " )
, L
    ( Position 7 47 )
    ( TokSym "adequate" )
, L
    ( Position 7 55 )
    ( Whitespace " " )
, L
    ( Position 7 56 )
    ( TokSym "for" )
, L
    ( Position 7 59 )
    ( Whitespace " " )
, L
    ( Position 7 60 )
    ( TokSym "non-lazy-io." )
, L
    ( Position 7 72 )
    ( Whitespace " " )
, L
    ( Position 7 73 )
    ( Whitespace "
    " )
, L
    ( Position 8 1 )
    ( Indent 21 )
, L
    ( Position 8 22 )
    ( TokSym "." )
, L
    ( Position 8 23 )
    ( Whitespace "
    " )
, L
    ( Position 9 1 )
    ( Indent 21 )
, L
    ( Position 9 22 )
    ( TokSym "The" )
, L
    ( Position 9 25 )
    ( Whitespace " " )
, L
    ( Position 9 26 )
    ( TokSym "implementation" )
, L
    ( Position 9 40 )
    ( Whitespace " " )
, L
    ( Position 9 41 )
    ( TokSym "follows" )
, L
    ( Position 9 48 )
    ( Whitespace " " )
, L
    ( Position 9 49 )
    ( TokSym "the" )
, L
    ( Position 9 52 )
    ( Whitespace "
    " )
, L
    ( Position 10 1 )
    ( Indent 21 )
, L
    ( Position 10 22 )
    ( TokSym "details" )
, L
    ( Position 10 29 )
    ( Whitespace " " )
, L
    ( Position 10 30 )
    ( TokSym "of" )
, L
    ( Position 10 32 )
    ( Whitespace " " )
, L
    ( Position 10 33 )
    ( TokOther "@" )
, L
    ( Position 10 34 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 10 54 )
    ( TokOther "@" )
, L
    ( Position 10 55 )
    ( Whitespace " " )
, L
    ( Position 10 56 )
    ( TokSym "and" )
, L
    ( Position 10 59 )
    ( Whitespace " " )
, L
    ( Position 10 60 )
    ( TokOther "@" )
, L
    ( Position 10 61 )
    ( TokSym "Data.ByteString.Lazy.Char8" )
, L
    ( Position 10 87 )
    ( TokOther "@" )
, L
    ( Position 10 88 )
    ( Whitespace "
    " )
, L
    ( Position 11 1 )
    ( Indent 21 )
, L
    ( Position 11 22 )
    ( TokSym "in" )
, L
    ( Position 11 24 )
    ( Whitespace " " )
, L
    ( Position 11 25 )
    ( TokSym "unrelenting" )
, L
    ( Position 11 36 )
    ( Whitespace " " )
, L
    ( Position 11 37 )
    ( TokSym "detail" )
, L
    ( Position 11 43 )
    ( TokOther "," )
, L
    ( Position 11 44 )
    ( Whitespace " " )
, L
    ( Position 11 45 )
    ( TokSym "replacing" )
, L
    ( Position 11 54 )
    ( Whitespace " " )
, L
    ( Position 11 55 )
    ( TokSym "the" )
, L
    ( Position 11 58 )
    ( Whitespace " " )
, L
    ( Position 11 59 )
    ( TokSym "lazy" )
, L
    ( Position 11 63 )
    ( Whitespace " " )
, L
    ( Position 11 64 )
    ( TokSym "bytestring" )
, L
    ( Position 11 74 )
    ( Whitespace " " )
, L
    ( Position 11 75 )
    ( TokSym "type" )
, L
    ( Position 11 79 ) Colon
, L
    ( Position 11 80 )
    ( Whitespace "
    " )
, L
    ( Position 12 1 )
    ( Indent 21 )
, L
    ( Position 12 22 )
    ( TokSym "." )
, L
    ( Position 12 23 )
    ( Whitespace "
    " )
, L
    ( Position 13 1 )
    ( Indent 21 )
, L
    ( Position 13 22 )
    ( TokOther ">" )
, L
    ( Position 13 23 )
    ( Whitespace " " )
, L
    ( Position 13 24 )
    ( TokSym "data" )
, L
    ( Position 13 28 )
    ( Whitespace " " )
, L
    ( Position 13 29 )
    ( TokSym "ByteString" )
, L
    ( Position 13 39 )
    ( Whitespace "     " )
, L
    ( Position 13 44 )
    ( TokOther "=" )
, L
    ( Position 13 45 )
    ( Whitespace " " )
, L
    ( Position 13 46 )
    ( TokSym "Empty" )
, L
    ( Position 13 51 )
    ( Whitespace "   " )
, L
    ( Position 13 54 )
    ( TokOther "|" )
, L
    ( Position 13 55 )
    ( Whitespace " " )
, L
    ( Position 13 56 )
    ( TokSym "Chunk" )
, L
    ( Position 13 61 )
    ( Whitespace " " )
, L
    ( Position 13 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 13 79 )
    ( Whitespace " " )
, L
    ( Position 13 80 )
    ( TokSym "ByteString" )
, L
    ( Position 13 90 )
    ( Whitespace "
    " )
, L
    ( Position 14 1 )
    ( Indent 21 )
, L
    ( Position 14 22 )
    ( TokSym "." )
, L
    ( Position 14 23 )
    ( Whitespace "
    " )
, L
    ( Position 15 1 )
    ( Indent 21 )
, L
    ( Position 15 22 )
    ( TokSym "with" )
, L
    ( Position 15 26 )
    ( Whitespace " " )
, L
    ( Position 15 27 )
    ( TokSym "the" )
, L
    ( Position 15 30 )
    ( Whitespace " " )
, L
    ( Position 15 31 )
    ( TokOther "/" )
, L
    ( Position 15 32 )
    ( TokSym "minimal" )
, L
    ( Position 15 39 )
    ( TokOther "/" )
, L
    ( Position 15 40 )
    ( Whitespace " " )
, L
    ( Position 15 41 )
    ( TokSym "effectful" )
, L
    ( Position 15 50 )
    ( Whitespace " " )
, L
    ( Position 15 51 )
    ( TokSym "variant" )
, L
    ( Position 15 58 ) Colon
, L
    ( Position 15 59 )
    ( Whitespace "
    " )
, L
    ( Position 16 1 )
    ( Indent 21 )
, L
    ( Position 16 22 )
    ( TokSym "." )
, L
    ( Position 16 23 )
    ( Whitespace "
    " )
, L
    ( Position 17 1 )
    ( Indent 21 )
, L
    ( Position 17 22 )
    ( TokOther ">" )
, L
    ( Position 17 23 )
    ( Whitespace " " )
, L
    ( Position 17 24 )
    ( TokSym "data" )
, L
    ( Position 17 28 )
    ( Whitespace " " )
, L
    ( Position 17 29 )
    ( TokSym "ByteString" )
, L
    ( Position 17 39 )
    ( Whitespace " " )
, L
    ( Position 17 40 )
    ( TokSym "m" )
, L
    ( Position 17 41 )
    ( Whitespace " " )
, L
    ( Position 17 42 )
    ( TokSym "r" )
, L
    ( Position 17 43 )
    ( Whitespace " " )
, L
    ( Position 17 44 )
    ( TokOther "=" )
, L
    ( Position 17 45 )
    ( Whitespace " " )
, L
    ( Position 17 46 )
    ( TokSym "Empty" )
, L
    ( Position 17 51 )
    ( Whitespace " " )
, L
    ( Position 17 52 )
    ( TokSym "r" )
, L
    ( Position 17 53 )
    ( Whitespace " " )
, L
    ( Position 17 54 )
    ( TokOther "|" )
, L
    ( Position 17 55 )
    ( Whitespace " " )
, L
    ( Position 17 56 )
    ( TokSym "Chunk" )
, L
    ( Position 17 61 )
    ( Whitespace " " )
, L
    ( Position 17 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 17 79 )
    ( Whitespace " " )
, L
    ( Position 17 80 )
    ( TokOther "(" )
, L
    ( Position 17 81 )
    ( TokSym "ByteString" )
, L
    ( Position 17 91 )
    ( Whitespace " " )
, L
    ( Position 17 92 )
    ( TokSym "m" )
, L
    ( Position 17 93 )
    ( Whitespace " " )
, L
    ( Position 17 94 )
    ( TokSym "r" )
, L
    ( Position 17 95 )
    ( TokOther ")" )
, L
    ( Position 17 96 )
    ( Whitespace " " )
, L
    ( Position 17 97 )
    ( TokOther "|" )
, L
    ( Position 17 98 )
    ( Whitespace " " )
, L
    ( Position 17 99 )
    ( TokSym "Go" )
, L
    ( Position 17 101 )
    ( Whitespace " " )
, L
    ( Position 17 102 )
    ( TokOther "(" )
, L
    ( Position 17 103 )
    ( TokSym "m" )
, L
    ( Position 17 104 )
    ( Whitespace " " )
, L
    ( Position 17 105 )
    ( TokOther "(" )
, L
    ( Position 17 106 )
    ( TokSym "ByteString" )
, L
    ( Position 17 116 )
    ( Whitespace " " )
, L
    ( Position 17 117 )
    ( TokSym "m" )
, L
    ( Position 17 118 )
    ( Whitespace " " )
, L
    ( Position 17 119 )
    ( TokSym "r" )
, L
    ( Position 17 120 )
    ( TokOther ")" )
, L
    ( Position 17 121 )
    ( TokOther ")" )
, L
    ( Position 17 122 )
    ( Whitespace "
    " )
, L
    ( Position 18 1 )
    ( Indent 21 )
, L
    ( Position 18 22 )
    ( TokSym "." )
, L
    ( Position 18 23 )
    ( Whitespace "
    " )
, L
    ( Position 19 1 )
    ( Indent 21 )
, L
    ( Position 19 22 )
    ( TokOther "(" )
, L
    ( Position 19 23 )
    ( TokSym "Constructors" )
, L
    ( Position 19 35 )
    ( Whitespace " " )
, L
    ( Position 19 36 )
    ( TokSym "are" )
, L
    ( Position 19 39 )
    ( Whitespace " " )
, L
    ( Position 19 40 )
    ( TokSym "necessarily" )
, L
    ( Position 19 51 )
    ( Whitespace " " )
, L
    ( Position 19 52 )
    ( TokSym "hidden" )
, L
    ( Position 19 58 )
    ( Whitespace " " )
, L
    ( Position 19 59 )
    ( TokSym "in" )
, L
    ( Position 19 61 )
    ( Whitespace " " )
, L
    ( Position 19 62 )
    ( TokSym "internal" )
, L
    ( Position 19 70 )
    ( Whitespace " " )
, L
    ( Position 19 71 )
    ( TokSym "modules" )
, L
    ( Position 19 78 )
    ( Whitespace " " )
, L
    ( Position 19 79 )
    ( TokSym "in" )
, L
    ( Position 19 81 )
    ( Whitespace " " )
, L
    ( Position 19 82 )
    ( TokSym "both" )
, L
    ( Position 19 86 )
    ( Whitespace " " )
, L
    ( Position 19 87 )
    ( TokSym "the" )
, L
    ( Position 19 90 )
    ( Whitespace " " )
, L
    ( Position 19 91 )
    ( TokOther "@" )
, L
    ( Position 19 92 )
    ( TokSym "Lazy" )
, L
    ( Position 19 96 )
    ( TokOther "@" )
, L
    ( Position 19 97 )
    ( Whitespace " " )
, L
    ( Position 19 98 )
    ( TokSym "and" )
, L
    ( Position 19 101 )
    ( Whitespace " " )
, L
    ( Position 19 102 )
    ( TokSym "the" )
, L
    ( Position 19 105 )
    ( Whitespace " " )
, L
    ( Position 19 106 )
    ( TokOther "@" )
, L
    ( Position 19 107 )
    ( TokSym "Streaming" )
, L
    ( Position 19 116 )
    ( TokOther "@." )
, L
    ( Position 19 118 )
    ( TokOther ")" )
, L
    ( Position 19 119 )
    ( Whitespace " " )
, L
    ( Position 19 120 )
    ( Whitespace "
    " )
, L
    ( Position 20 1 )
    ( Indent 21 )
, L
    ( Position 20 22 )
    ( TokSym "." )
, L
    ( Position 20 23 )
    ( Whitespace "
    " )
, L
    ( Position 21 1 )
    ( Indent 21 )
, L
    ( Position 21 22 )
    ( TokSym "That's" )
, L
    ( Position 21 28 )
    ( Whitespace " " )
, L
    ( Position 21 29 )
    ( TokSym "it." )
, L
    ( Position 21 32 )
    ( Whitespace " " )
, L
    ( Position 21 33 )
    ( TokSym "As" )
, L
    ( Position 21 35 )
    ( Whitespace " " )
, L
    ( Position 21 36 )
    ( TokSym "a" )
, L
    ( Position 21 37 )
    ( Whitespace " " )
, L
    ( Position 21 38 )
    ( TokSym "lazy" )
, L
    ( Position 21 42 )
    ( Whitespace " " )
, L
    ( Position 21 43 )
    ( TokSym "bytestring" )
, L
    ( Position 21 53 )
    ( Whitespace " " )
, L
    ( Position 21 54 )
    ( TokSym "is" )
, L
    ( Position 21 56 )
    ( Whitespace " " )
, L
    ( Position 21 57 )
    ( TokSym "implemented" )
, L
    ( Position 21 68 )
    ( Whitespace " " )
, L
    ( Position 21 69 )
    ( TokSym "internally" )
, L
    ( Position 21 79 )
    ( Whitespace " " )
, L
    ( Position 21 80 )
    ( Whitespace "
    " )
, L
    ( Position 22 1 )
    ( Indent 21 )
, L
    ( Position 22 22 )
    ( TokSym "by" )
, L
    ( Position 22 24 )
    ( Whitespace " " )
, L
    ( Position 22 25 )
    ( TokSym "a" )
, L
    ( Position 22 26 )
    ( Whitespace " " )
, L
    ( Position 22 27 )
    ( TokSym "sort" )
, L
    ( Position 22 31 )
    ( Whitespace " " )
, L
    ( Position 22 32 )
    ( TokSym "of" )
, L
    ( Position 22 34 )
    ( Whitespace " " )
, L
    ( Position 22 35 )
    ( TokSym "list" )
, L
    ( Position 22 39 )
    ( Whitespace " " )
, L
    ( Position 22 40 )
    ( TokSym "of" )
, L
    ( Position 22 42 )
    ( Whitespace " " )
, L
    ( Position 22 43 )
    ( TokSym "strict" )
, L
    ( Position 22 49 )
    ( Whitespace " " )
, L
    ( Position 22 50 )
    ( TokSym "bytestring" )
, L
    ( Position 22 60 )
    ( Whitespace " " )
, L
    ( Position 22 61 )
    ( TokSym "chunks" )
, L
    ( Position 22 67 )
    ( TokOther "," )
, L
    ( Position 22 68 )
    ( Whitespace " " )
, L
    ( Position 22 69 )
    ( TokSym "a" )
, L
    ( Position 22 70 )
    ( Whitespace " " )
, L
    ( Position 22 71 )
    ( TokSym "streaming" )
, L
    ( Position 22 80 )
    ( Whitespace " " )
, L
    ( Position 22 81 )
    ( TokSym "bytestring" )
, L
    ( Position 22 91 )
    ( Whitespace " " )
, L
    ( Position 22 92 )
    ( TokSym "is" )
, L
    ( Position 22 94 )
    ( Whitespace " " )
, L
    ( Position 22 95 )
    ( Whitespace "
    " )
, L
    ( Position 23 1 )
    ( Indent 21 )
, L
    ( Position 23 22 )
    ( TokSym "simply" )
, L
    ( Position 23 28 )
    ( Whitespace " " )
, L
    ( Position 23 29 )
    ( TokSym "implemented" )
, L
    ( Position 23 40 )
    ( Whitespace " " )
, L
    ( Position 23 41 )
    ( TokSym "as" )
, L
    ( Position 23 43 )
    ( Whitespace " " )
, L
    ( Position 23 44 )
    ( TokSym "a" )
, L
    ( Position 23 45 )
    ( Whitespace " " )
, L
    ( Position 23 46 )
    ( TokOther "/" )
, L
    ( Position 23 47 )
    ( TokSym "producer" )
, L
    ( Position 23 55 )
    ( TokOther "/" )
, L
    ( Position 23 56 )
    ( Whitespace " " )
, L
    ( Position 23 57 )
    ( TokSym "or" )
, L
    ( Position 23 59 )
    ( Whitespace " " )
, L
    ( Position 23 60 )
    ( TokOther "/" )
, L
    ( Position 23 61 )
    ( TokSym "generator" )
, L
    ( Position 23 70 )
    ( TokOther "/" )
, L
    ( Position 23 71 )
    ( Whitespace " " )
, L
    ( Position 23 72 )
    ( TokSym "of" )
, L
    ( Position 23 74 )
    ( Whitespace " " )
, L
    ( Position 23 75 )
    ( TokSym "strict" )
, L
    ( Position 23 81 )
    ( Whitespace " " )
, L
    ( Position 23 82 )
    ( TokSym "bytestring" )
, L
    ( Position 23 92 )
    ( Whitespace " " )
, L
    ( Position 23 93 )
    ( TokSym "chunks." )
, L
    ( Position 23 100 )
    ( Whitespace "
    " )
, L
    ( Position 24 1 )
    ( Indent 21 )
, L
    ( Position 24 22 )
    ( TokSym "Most" )
, L
    ( Position 24 26 )
    ( Whitespace " " )
, L
    ( Position 24 27 )
    ( TokSym "operations" )
, L
    ( Position 24 37 )
    ( Whitespace " " )
, L
    ( Position 24 38 )
    ( TokSym "are" )
, L
    ( Position 24 41 )
    ( Whitespace " " )
, L
    ( Position 24 42 )
    ( TokSym "defined" )
, L
    ( Position 24 49 )
    ( Whitespace " " )
, L
    ( Position 24 50 )
    ( TokSym "by" )
, L
    ( Position 24 52 )
    ( Whitespace " " )
, L
    ( Position 24 53 )
    ( TokSym "simply" )
, L
    ( Position 24 59 )
    ( Whitespace " " )
, L
    ( Position 24 60 )
    ( TokSym "adding" )
, L
    ( Position 24 66 )
    ( Whitespace " " )
, L
    ( Position 24 67 )
    ( TokSym "a" )
, L
    ( Position 24 68 )
    ( Whitespace " " )
, L
    ( Position 24 69 )
    ( TokSym "line" )
, L
    ( Position 24 73 )
    ( Whitespace " " )
, L
    ( Position 24 74 )
    ( TokSym "to" )
, L
    ( Position 24 76 )
    ( Whitespace " " )
, L
    ( Position 24 77 )
    ( TokSym "what" )
, L
    ( Position 24 81 )
    ( Whitespace " " )
, L
    ( Position 24 82 )
    ( TokSym "we" )
, L
    ( Position 24 84 )
    ( Whitespace " " )
, L
    ( Position 24 85 )
    ( TokSym "find" )
, L
    ( Position 24 89 )
    ( Whitespace " " )
, L
    ( Position 24 90 )
    ( TokSym "in" )
, L
    ( Position 24 92 )
    ( Whitespace "
    " )
, L
    ( Position 25 1 )
    ( Indent 21 )
, L
    ( Position 25 22 )
    ( TokOther "@" )
, L
    ( Position 25 23 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 25 43 )
    ( TokOther "@." )
, L
    ( Position 25 45 )
    ( Whitespace "
    " )
, L
    ( Position 26 1 )
    ( Indent 21 )
, L
    ( Position 26 22 )
    ( TokSym "." )
, L
    ( Position 26 23 )
    ( Whitespace "
    " )
, L
    ( Position 27 1 )
    ( Indent 21 )
, L
    ( Position 27 22 )
    ( TokSym "Something" )
, L
    ( Position 27 31 )
    ( Whitespace " " )
, L
    ( Position 27 32 )
    ( TokSym "like" )
, L
    ( Position 27 36 )
    ( Whitespace " " )
, L
    ( Position 27 37 )
    ( TokSym "this" )
, L
    ( Position 27 41 )
    ( Whitespace " " )
, L
    ( Position 27 42 )
    ( TokSym "alteration" )
, L
    ( Position 27 52 )
    ( Whitespace " " )
, L
    ( Position 27 53 )
    ( TokSym "of" )
, L
    ( Position 27 55 )
    ( Whitespace " " )
, L
    ( Position 27 56 )
    ( TokSym "type" )
, L
    ( Position 27 60 )
    ( Whitespace " " )
, L
    ( Position 27 61 )
    ( TokSym "is" )
, L
    ( Position 27 63 )
    ( Whitespace " " )
, L
    ( Position 27 64 )
    ( TokSym "of" )
, L
    ( Position 27 66 )
    ( Whitespace " " )
, L
    ( Position 27 67 )
    ( TokSym "course" )
, L
    ( Position 27 73 )
    ( Whitespace " " )
, L
    ( Position 27 74 )
    ( TokSym "obvious" )
, L
    ( Position 27 81 )
    ( Whitespace " " )
, L
    ( Position 27 82 )
    ( TokSym "and" )
, L
    ( Position 27 85 )
    ( Whitespace " " )
, L
    ( Position 27 86 )
    ( TokSym "mechanical" )
, L
    ( Position 27 96 )
    ( TokOther "," )
, L
    ( Position 27 97 )
    ( Whitespace " " )
, L
    ( Position 27 98 )
    ( TokSym "once" )
, L
    ( Position 27 102 )
    ( Whitespace " " )
, L
    ( Position 27 103 )
    ( TokSym "the" )
, L
    ( Position 27 106 )
    ( Whitespace " " )
, L
    ( Position 27 107 )
    ( TokSym "idea" )
, L
    ( Position 27 111 )
    ( Whitespace " " )
, L
    ( Position 27 112 )
    ( TokSym "of" )
, L
    ( Position 27 114 )
    ( Whitespace "
    " )
, L
    ( Position 28 1 )
    ( Indent 21 )
, L
    ( Position 28 22 )
    ( TokSym "an" )
, L
    ( Position 28 24 )
    ( Whitespace " " )
, L
    ( Position 28 25 )
    ( TokSym "effectful" )
, L
    ( Position 28 34 )
    ( Whitespace " " )
, L
    ( Position 28 35 )
    ( TokSym "bytestring" )
, L
    ( Position 28 45 )
    ( Whitespace " " )
, L
    ( Position 28 46 )
    ( TokSym "type" )
, L
    ( Position 28 50 )
    ( Whitespace " " )
, L
    ( Position 28 51 )
    ( TokSym "is" )
, L
    ( Position 28 53 )
    ( Whitespace " " )
, L
    ( Position 28 54 )
    ( TokSym "contemplated" )
, L
    ( Position 28 66 )
    ( Whitespace " " )
, L
    ( Position 28 67 )
    ( TokSym "and" )
, L
    ( Position 28 70 )
    ( Whitespace " " )
, L
    ( Position 28 71 )
    ( TokSym "lazy" )
, L
    ( Position 28 75 )
    ( Whitespace " " )
, L
    ( Position 28 76 )
    ( TokSym "io" )
, L
    ( Position 28 78 )
    ( Whitespace " " )
, L
    ( Position 28 79 )
    ( TokSym "is" )
, L
    ( Position 28 81 )
    ( Whitespace " " )
, L
    ( Position 28 82 )
    ( TokSym "rejected." )
, L
    ( Position 28 91 )
    ( Whitespace "
    " )
, L
    ( Position 29 1 )
    ( Indent 21 )
, L
    ( Position 29 22 )
    ( TokSym "Indeed" )
, L
    ( Position 29 28 )
    ( Whitespace " " )
, L
    ( Position 29 29 )
    ( TokSym "it" )
, L
    ( Position 29 31 )
    ( Whitespace " " )
, L
    ( Position 29 32 )
    ( TokSym "seems" )
, L
    ( Position 29 37 )
    ( Whitespace " " )
, L
    ( Position 29 38 )
    ( TokSym "that" )
, L
    ( Position 29 42 )
    ( Whitespace " " )
, L
    ( Position 29 43 )
    ( TokSym "this" )
, L
    ( Position 29 47 )
    ( Whitespace " " )
, L
    ( Position 29 48 )
    ( TokSym "is" )
, L
    ( Position 29 50 )
    ( Whitespace " " )
, L
    ( Position 29 51 )
    ( TokSym "the" )
, L
    ( Position 29 54 )
    ( Whitespace " " )
, L
    ( Position 29 55 )
    ( TokSym "proper" )
, L
    ( Position 29 61 )
    ( Whitespace " " )
, L
    ( Position 29 62 )
    ( TokSym "expression" )
, L
    ( Position 29 72 )
    ( Whitespace " " )
, L
    ( Position 29 73 )
    ( TokSym "of" )
, L
    ( Position 29 75 )
    ( Whitespace " " )
, L
    ( Position 29 76 )
    ( TokSym "what" )
, L
    ( Position 29 80 )
    ( Whitespace " " )
, L
    ( Position 29 81 )
    ( TokSym "was" )
, L
    ( Position 29 84 )
    ( Whitespace "
    " )
, L
    ( Position 30 1 )
    ( Indent 21 )
, L
    ( Position 30 22 )
    ( TokSym "intended" )
, L
    ( Position 30 30 )
    ( Whitespace " " )
, L
    ( Position 30 31 )
    ( TokSym "by" )
, L
    ( Position 30 33 )
    ( Whitespace " " )
, L
    ( Position 30 34 )
    ( TokSym "lazy" )
, L
    ( Position 30 38 )
    ( Whitespace " " )
, L
    ( Position 30 39 )
    ( TokSym "bytestrings" )
, L
    ( Position 30 50 )
    ( Whitespace " " )
, L
    ( Position 30 51 )
    ( TokSym "to" )
, L
    ( Position 30 53 )
    ( Whitespace " " )
, L
    ( Position 30 54 )
    ( TokSym "begin" )
, L
    ( Position 30 59 )
    ( Whitespace " " )
, L
    ( Position 30 60 )
    ( TokSym "with." )
, L
    ( Position 30 65 )
    ( Whitespace " " )
, L
    ( Position 30 66 )
    ( TokSym "The" )
, L
    ( Position 30 69 )
    ( Whitespace " " )
, L
    ( Position 30 70 )
    ( TokSym "documentation" )
, L
    ( Position 30 83 )
    ( TokOther "," )
, L
    ( Position 30 84 )
    ( Whitespace " " )
, L
    ( Position 30 85 )
    ( TokSym "after" )
, L
    ( Position 30 90 )
    ( Whitespace " " )
, L
    ( Position 30 91 )
    ( TokSym "all" )
, L
    ( Position 30 94 )
    ( TokOther "," )
, L
    ( Position 30 95 )
    ( Whitespace "
    " )
, L
    ( Position 31 1 )
    ( Indent 21 )
, L
    ( Position 31 22 )
    ( TokSym "reads" )
, L
    ( Position 31 27 )
    ( Whitespace "
    " )
, L
    ( Position 32 1 )
    ( Indent 21 )
, L
    ( Position 32 22 )
    ( TokSym "." )
, L
    ( Position 32 23 )
    ( Whitespace "
    " )
, L
    ( Position 33 1 )
    ( Indent 21 )
, L
    ( Position 33 22 )
    ( TokOther "*" )
, L
    ( Position 33 23 )
    ( Whitespace " " )
, L
    ( Position 33 24 )
    ( TokOther "\" )
, L
    ( Position 33 96 )
    ( LexicalError "
                           unbounded streams of data without requiring the entire sequence to be 
                           resident in memory. To take advantage of this you have to write your 
                           functions in a lazy streaming style, e.g. classic pipeline composition. 
                           The default I/O chunk size is 32k, which should be good in most circumstances.\"
                         .
                         ... which is very much the idea of this library: the default chunk size for
                         'hGetContents' and the like follows @Data.ByteString.Lazy@; operations
                         like @lines@ and @append@ and so on are tailored not to increase chunk size. 
                         .
                         The present library is thus nothing but /lazy bytestring done right/. 
                         The authors of @Data.ByteString.Lazy@ must have supposed that 
                         the directly monadic formulation of such their type 
                         would necessarily make things slower. This appears to be a prejudice. 
                         For example, passing a large file of short lines through
                         this benchmark transformation
                         .
                         > Lazy.unlines      . map    (\bs -> "!"       <> Lazy.drop 5 bs)       . Lazy.lines
                         > Streaming.unlines . S.maps (\bs -> chunk "!" >> Streaming.drop 5 bs)  . Streaming.lines
                         .
                         gives pleasing results like these
                         .
                         > $  time ./benchlines lazy >> /dev/null
                         > real\x90m2.097s
                         > ...
                         > $  time ./benchlines streaming >> /dev/null
                         > real\x90m1.930s
                         .
                         For a more sophisticated operation like
                         .
                         > Lazy.intercalate "!\n"      . Lazy.lines
                         > Streaming.intercalate "!\n" . Streaming.lines
                         .
                         we get results like these:
                         .
                         > time ./benchlines lazy >> /dev/null
                         > real\x90m1.250s
                         > ...
                         > time ./benchlines streaming >> /dev/null
                         > real\x90m1.531s
                         . 
                         The pipes environment would express the latter as 
                         .
                         > Pipes.intercalates (Pipes.yield "!\n") . view Pipes.lines 
                         .
                         meaning almost exactly what we mean above, but with results like this
                         .
                         >  time ./benchlines pipes >> /dev/null
                         >  real\x90m6.353s
                         .
                         The difference, however, is emphatically not intrinsic to pipes; 
                         it is just that 
                         this library depends the @streaming@ library, which is used in place 
                         of @free@ to express the 
                         <http://www.haskellforall.com/2013/09/perfect-streaming-using-pipes-bytestring.html "perfectly streaming">
                         splitting and iterated division or "chunking" of byte streams. 
                         .
                         These concepts belong to the ABCs of streaming; @lines@ is just
                         a textbook example, and it is of course handled correctly in 
                         @Data.ByteString.Lazy@.
                         But the concepts are /catastrophically mishandled/ in /all/ streaming io libraries 
                         other than pipes. Already the @enumerator@ and @iteratee@ libraries
                         were completely defeated by @lines@: 
                         see e.g. the @enumerator@ implementation of 
                         <http://hackage.haskell.org/package/enumerator-0.4.20/docs/Data-Enumerator-Text.html#v:splitWhen splitWhen and lines>.
                         This will concatenate strict text forever, if that's what is coming
                         in.  The rot spreads from there. 
                         It is just a fact that in all of the general streaming io 
                         frameworks other than pipes,it becomes torture to express elementary distinctions 
                         that are transparently and immediately contained in any 
                         idea of streaming whatsoever. 
                         .
                         Though, as was said above, we barely alter signatures in @Data.ByteString.Lazy@ 
                         more than is required by the types, the point of view that emerges 
                         is very much that of
                         @pipes-bytestring@ and @pipes-group@. In particular
                         we have these correspondences:
                         .
                         > Lazy.splitAt      :: Int -> ByteString              -> (ByteString, ByteString)
                         > Streaming.splitAt :: Int -> ByteString m r          -> ByteString m (ByteString m r)
                         > Pipes.splitAt     :: Int -> Producer ByteString m r -> Producer ByteString m (Producer ByteString m r)
                         .
                         and
                         .
                         > Lazy.lines      :: ByteString -> [ByteString]
                         > Streaming.lines :: ByteString m r -> Stream (ByteString m) m r
                         > Pipes.lines     :: Producer ByteString m r -> FreeT (Producer ByteString m) m r
                         .
                         where the @Stream@ type expresses the sequencing of @ByteString m _@ layers
                         with the usual \'free monad\' sequencing. 
                         .
                         Interoperation with @pipes-bytestring@ uses this isomorphism:
                         . 
                         > Streaming.ByteString.unfoldrChunks Pipes.next :: Monad m => Producer ByteString m r -> ByteString m r
                         > Pipes.unfoldr Streaming.ByteString.nextChunk  :: Monad m => ByteString m r -> Producer ByteString m r
                         .
                         Interoperation with @io-streams@ is thus:
                         .
                         > IOStreams.unfoldM Streaming.ByteString.unconsChunk :: ByteString IO () -> IO (InputStream ByteString)
                         > Streaming.ByteString.reread IOStreams.read         :: InputStream ByteString -> ByteString IO ()
                         .
                         and similarly for other rational streaming io libraries. 
                         .
                         Problems and questions about the library can be put as issues on 
                         the github page, or mailed to the 
                         <https://groups.google.com/forum/#!forum/haskell-pipes pipes list>.
                         .
                         A tutorial module is in the works; 
                         <https://gist.github.com/michaelt/6c6843e6dd8030e95d58 here>,
                         for the moment, 
                         is a sequence of simplified implementations of familiar shell utilities.  
                         The same programs are implemented at the end of the excellent
                           <http://hackage.haskell.org/package/io-streams-1.3.2.0/docs/System-IO-Streams-Tutorial.html io-streams tutorial>.
                           It is generally much simpler; in some case simpler than what
                           you would write with lazy bytestrings. 
                           <https://gist.github.com/michaelt/2dcea1ba32562c091357 Here>
                           is a simple GET request that returns a byte stream.
                           .

                        
    license:             BSD3
    license-file:        LICENSE
    author:              michaelt
    maintainer:          what_is_it_to_do_anything@yahoo.com
    -- copyright:           
    category:            Data, Pipes, Streaming
    build-type:          Simple
    extra-source-files:  README.md
    cabal-version:       >=1.10
    stability:           Experimental
    homepage:            https://github.com/michaelt/streaming-bytestring
    bug-reports:         https://github.com/michaelt/streaming-bytestring/issues
    source-repository head
        type: git
        location: https://github.com/michaelt/streaming-bytestring


    library
      exposed-modules:     Data.ByteString.Streaming
                           , Data.ByteString.Streaming.Char8
                           , Data.ByteString.Streaming.Internal

                           
      -- other-modules:       
      other-extensions:    CPP, BangPatterns, ForeignFunctionInterface, DeriveDataTypeable, Unsafe
      build-depends:       base  <4.9
                         , deepseq 
                         , bytestring
                         , mtl >=2.1 && <2.3
                         , mmorph >=1.0 && <1.2
                         , transformers >=0.3 && <0.5
                         , transformers-base
                         , streaming >=  0.1.4.0 && < 0.1.4.5
                         , resourcet
                         , exceptions
      if impl(ghc < 7.8) 
        build-depends:
                         bytestring < 0.10.4.0
                         , bytestring-builder
      else               
        build-depends:     
                         bytestring >= 0.10.4                     


      default-language:    Haskell2010
      ghc-options: -O2
      
    " )
, L
    ( Position 33 25 ) EOF
]
