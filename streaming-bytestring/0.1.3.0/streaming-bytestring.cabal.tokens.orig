[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 22 )
    ( TokSym "streaming-bytestring" )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 22 )
    ( TokSym "0.1.3.0" )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "synopsis" )
, L
    ( Position 3 9 ) Colon
, L
    ( Position 3 22 )
    ( TokSym "effectful" )
, L
    ( Position 3 32 )
    ( TokSym "byte" )
, L
    ( Position 3 37 )
    ( TokSym "steams" )
, L
    ( Position 3 43 )
    ( TokOther "," )
, L
    ( Position 3 45 )
    ( TokSym "or" )
, L
    ( Position 3 47 ) Colon
, L
    ( Position 3 49 )
    ( TokSym "bytestring" )
, L
    ( Position 3 60 )
    ( TokSym "io" )
, L
    ( Position 3 63 )
    ( TokSym "done" )
, L
    ( Position 3 68 )
    ( TokSym "right." )
, L
    ( Position 5 1 )
    ( Indent 0 )
, L
    ( Position 5 1 )
    ( TokSym "description" )
, L
    ( Position 5 12 ) Colon
, L
    ( Position 5 22 )
    ( TokSym "This" )
, L
    ( Position 5 27 )
    ( TokSym "is" )
, L
    ( Position 5 30 )
    ( TokSym "an" )
, L
    ( Position 5 33 )
    ( TokSym "implementation" )
, L
    ( Position 5 48 )
    ( TokSym "of" )
, L
    ( Position 5 51 )
    ( TokSym "effectful" )
, L
    ( Position 5 60 )
    ( TokOther "," )
, L
    ( Position 5 62 )
    ( TokSym "memory-constrained" )
, L
    ( Position 6 1 )
    ( Indent 21 )
, L
    ( Position 6 22 )
    ( TokSym "bytestrings" )
, L
    ( Position 6 34 )
    ( TokOther "(" )
, L
    ( Position 6 35 )
    ( TokSym "byte" )
, L
    ( Position 6 40 )
    ( TokSym "streams" )
, L
    ( Position 6 47 )
    ( TokOther ")" )
, L
    ( Position 6 49 )
    ( TokSym "and" )
, L
    ( Position 6 53 )
    ( TokSym "functions" )
, L
    ( Position 6 63 )
    ( TokSym "for" )
, L
    ( Position 6 67 )
    ( TokSym "streaming" )
, L
    ( Position 7 1 )
    ( Indent 21 )
, L
    ( Position 7 22 )
    ( TokSym "bytestring" )
, L
    ( Position 7 33 )
    ( TokSym "manipulation" )
, L
    ( Position 7 45 )
    ( TokOther "," )
, L
    ( Position 7 47 )
    ( TokSym "adequate" )
, L
    ( Position 7 56 )
    ( TokSym "for" )
, L
    ( Position 7 60 )
    ( TokSym "non-lazy-io." )
, L
    ( Position 8 1 )
    ( Indent 21 )
, L
    ( Position 8 22 )
    ( TokSym "." )
, L
    ( Position 9 1 )
    ( Indent 21 )
, L
    ( Position 9 22 )
    ( TokSym "Interoperation" )
, L
    ( Position 9 37 )
    ( TokSym "with" )
, L
    ( Position 9 42 )
    ( TokOther "@" )
, L
    ( Position 9 43 )
    ( TokSym "pipes" )
, L
    ( Position 9 48 )
    ( TokOther "@" )
, L
    ( Position 9 50 )
    ( TokSym "uses" )
, L
    ( Position 9 55 )
    ( TokSym "this" )
, L
    ( Position 9 60 )
    ( TokSym "isomorphism" )
, L
    ( Position 9 71 ) Colon
, L
    ( Position 10 1 )
    ( Indent 21 )
, L
    ( Position 10 22 )
    ( TokSym "." )
, L
    ( Position 11 1 )
    ( Indent 21 )
, L
    ( Position 11 22 )
    ( TokOther ">" )
, L
    ( Position 11 24 )
    ( TokSym "Streaming.unfoldrChunks" )
, L
    ( Position 11 48 )
    ( TokSym "Pipes.next" )
, L
    ( Position 11 59 ) Colon
, L
    ( Position 11 60 ) Colon
, L
    ( Position 11 62 )
    ( TokSym "Monad" )
, L
    ( Position 11 68 )
    ( TokSym "m" )
, L
    ( Position 11 70 )
    ( TokOther "=>" )
, L
    ( Position 11 73 )
    ( TokSym "Producer" )
, L
    ( Position 11 82 )
    ( TokSym "ByteString" )
, L
    ( Position 11 93 )
    ( TokSym "m" )
, L
    ( Position 11 95 )
    ( TokSym "r" )
, L
    ( Position 11 97 )
    ( TokOther "->" )
, L
    ( Position 11 100 )
    ( TokSym "ByteString" )
, L
    ( Position 11 111 )
    ( TokSym "m" )
, L
    ( Position 11 113 )
    ( TokSym "r" )
, L
    ( Position 12 1 )
    ( Indent 21 )
, L
    ( Position 12 22 )
    ( TokOther ">" )
, L
    ( Position 12 24 )
    ( TokSym "Pipes.unfoldr" )
, L
    ( Position 12 38 )
    ( TokSym "Streaming.nextChunk" )
, L
    ( Position 12 59 ) Colon
, L
    ( Position 12 60 ) Colon
, L
    ( Position 12 62 )
    ( TokSym "Monad" )
, L
    ( Position 12 68 )
    ( TokSym "m" )
, L
    ( Position 12 70 )
    ( TokOther "=>" )
, L
    ( Position 12 73 )
    ( TokSym "ByteString" )
, L
    ( Position 12 84 )
    ( TokSym "m" )
, L
    ( Position 12 86 )
    ( TokSym "r" )
, L
    ( Position 12 88 )
    ( TokOther "->" )
, L
    ( Position 12 91 )
    ( TokSym "Producer" )
, L
    ( Position 12 100 )
    ( TokSym "ByteString" )
, L
    ( Position 12 111 )
    ( TokSym "m" )
, L
    ( Position 12 113 )
    ( TokSym "r" )
, L
    ( Position 13 1 )
    ( Indent 21 )
, L
    ( Position 13 22 )
    ( TokSym "." )
, L
    ( Position 14 1 )
    ( Indent 21 )
, L
    ( Position 14 22 )
    ( TokSym "Interoperation" )
, L
    ( Position 14 37 )
    ( TokSym "with" )
, L
    ( Position 14 42 )
    ( TokOther "@" )
, L
    ( Position 14 43 )
    ( TokSym "io-streams" )
, L
    ( Position 14 53 )
    ( TokOther "@" )
, L
    ( Position 14 55 )
    ( TokSym "is" )
, L
    ( Position 14 58 )
    ( TokSym "thus" )
, L
    ( Position 14 62 ) Colon
, L
    ( Position 15 1 )
    ( Indent 21 )
, L
    ( Position 15 22 )
    ( TokSym "." )
, L
    ( Position 16 1 )
    ( Indent 21 )
, L
    ( Position 16 22 )
    ( TokOther ">" )
, L
    ( Position 16 24 )
    ( TokSym "IOStreams.unfoldM" )
, L
    ( Position 16 42 )
    ( TokSym "Streaming.unconsChunk" )
, L
    ( Position 16 64 ) Colon
, L
    ( Position 16 65 ) Colon
, L
    ( Position 16 67 )
    ( TokSym "ByteString" )
, L
    ( Position 16 78 )
    ( TokSym "IO" )
, L
    ( Position 16 81 )
    ( TokOther "(" )
, L
    ( Position 16 82 )
    ( TokOther ")" )
, L
    ( Position 16 84 )
    ( TokOther "->" )
, L
    ( Position 16 87 )
    ( TokSym "IO" )
, L
    ( Position 16 90 )
    ( TokOther "(" )
, L
    ( Position 16 91 )
    ( TokSym "InputStream" )
, L
    ( Position 16 103 )
    ( TokSym "ByteString" )
, L
    ( Position 16 113 )
    ( TokOther ")" )
, L
    ( Position 17 1 )
    ( Indent 21 )
, L
    ( Position 17 22 )
    ( TokOther ">" )
, L
    ( Position 17 24 )
    ( TokSym "Streaming.reread" )
, L
    ( Position 17 41 )
    ( TokSym "IOStreams.read" )
, L
    ( Position 17 64 ) Colon
, L
    ( Position 17 65 ) Colon
, L
    ( Position 17 67 )
    ( TokSym "InputStream" )
, L
    ( Position 17 79 )
    ( TokSym "ByteString" )
, L
    ( Position 17 90 )
    ( TokOther "->" )
, L
    ( Position 17 93 )
    ( TokSym "ByteString" )
, L
    ( Position 17 104 )
    ( TokSym "IO" )
, L
    ( Position 17 107 )
    ( TokOther "(" )
, L
    ( Position 17 108 )
    ( TokOther ")" )
, L
    ( Position 18 1 )
    ( Indent 21 )
, L
    ( Position 18 22 )
    ( TokSym "." )
, L
    ( Position 19 1 )
    ( Indent 21 )
, L
    ( Position 19 22 )
    ( TokSym "and" )
, L
    ( Position 19 26 )
    ( TokSym "similarly" )
, L
    ( Position 19 36 )
    ( TokSym "for" )
, L
    ( Position 19 40 )
    ( TokSym "other" )
, L
    ( Position 19 46 )
    ( TokSym "rational" )
, L
    ( Position 19 55 )
    ( TokSym "streaming" )
, L
    ( Position 19 65 )
    ( TokSym "io" )
, L
    ( Position 19 68 )
    ( TokSym "libraries." )
, L
    ( Position 20 1 )
    ( Indent 21 )
, L
    ( Position 20 22 )
    ( TokSym "." )
, L
    ( Position 21 1 )
    ( Indent 21 )
, L
    ( Position 21 22 )
    ( TokSym "Problems" )
, L
    ( Position 21 31 )
    ( TokSym "and" )
, L
    ( Position 21 35 )
    ( TokSym "questions" )
, L
    ( Position 21 45 )
    ( TokSym "about" )
, L
    ( Position 21 51 )
    ( TokSym "the" )
, L
    ( Position 21 55 )
    ( TokSym "library" )
, L
    ( Position 21 63 )
    ( TokSym "can" )
, L
    ( Position 21 67 )
    ( TokSym "be" )
, L
    ( Position 21 70 )
    ( TokSym "put" )
, L
    ( Position 21 74 )
    ( TokSym "as" )
, L
    ( Position 21 77 )
    ( TokSym "issues" )
, L
    ( Position 21 84 )
    ( TokSym "on" )
, L
    ( Position 22 1 )
    ( Indent 21 )
, L
    ( Position 22 22 )
    ( TokSym "the" )
, L
    ( Position 22 26 )
    ( TokSym "github" )
, L
    ( Position 22 33 )
    ( TokSym "page" )
, L
    ( Position 22 37 )
    ( TokOther "," )
, L
    ( Position 22 39 )
    ( TokSym "or" )
, L
    ( Position 22 42 )
    ( TokSym "mailed" )
, L
    ( Position 22 49 )
    ( TokSym "to" )
, L
    ( Position 22 52 )
    ( TokSym "the" )
, L
    ( Position 23 1 )
    ( Indent 21 )
, L
    ( Position 23 22 )
    ( TokOther "<" )
, L
    ( Position 23 23 )
    ( TokSym "https" )
, L
    ( Position 23 28 ) Colon
, L
    ( Position 23 29 )
    ( TokOther "//" )
, L
    ( Position 23 31 )
    ( TokSym "groups.google.com" )
, L
    ( Position 23 48 )
    ( TokOther "/" )
, L
    ( Position 23 49 )
    ( TokSym "forum" )
, L
    ( Position 23 54 )
    ( TokOther "/#!" )
, L
    ( Position 23 57 )
    ( TokSym "forum" )
, L
    ( Position 23 62 )
    ( TokOther "/" )
, L
    ( Position 23 63 )
    ( TokSym "haskell-pipes" )
, L
    ( Position 23 77 )
    ( TokSym "pipes" )
, L
    ( Position 23 83 )
    ( TokSym "list" )
, L
    ( Position 23 87 )
    ( TokOther ">." )
, L
    ( Position 24 1 )
    ( Indent 21 )
, L
    ( Position 24 22 )
    ( TokSym "." )
, L
    ( Position 25 1 )
    ( Indent 21 )
, L
    ( Position 25 22 )
    ( TokSym "A" )
, L
    ( Position 25 24 )
    ( TokSym "tutorial" )
, L
    ( Position 25 33 )
    ( TokSym "module" )
, L
    ( Position 25 40 )
    ( TokSym "is" )
, L
    ( Position 25 43 )
    ( TokSym "in" )
, L
    ( Position 25 46 )
    ( TokSym "the" )
, L
    ( Position 25 50 )
    ( TokSym "works;" )
, L
    ( Position 26 1 )
    ( Indent 21 )
, L
    ( Position 26 22 )
    ( TokOther "<" )
, L
    ( Position 26 23 )
    ( TokSym "https" )
, L
    ( Position 26 28 ) Colon
, L
    ( Position 26 29 )
    ( TokOther "//" )
, L
    ( Position 26 31 )
    ( TokSym "gist.github.com" )
, L
    ( Position 26 46 )
    ( TokOther "/" )
, L
    ( Position 26 47 )
    ( TokSym "michaelt" )
, L
    ( Position 26 55 )
    ( TokOther "/" )
, L
    ( Position 26 56 )
    ( TokSym "6c6843e6dd8030e95d58" )
, L
    ( Position 26 77 )
    ( TokSym "here" )
, L
    ( Position 26 81 )
    ( TokOther ">," )
, L
    ( Position 27 1 )
    ( Indent 21 )
, L
    ( Position 27 22 )
    ( TokSym "for" )
, L
    ( Position 27 26 )
    ( TokSym "the" )
, L
    ( Position 27 30 )
    ( TokSym "moment" )
, L
    ( Position 27 36 )
    ( TokOther "," )
, L
    ( Position 28 1 )
    ( Indent 21 )
, L
    ( Position 28 22 )
    ( TokSym "is" )
, L
    ( Position 28 25 )
    ( TokSym "a" )
, L
    ( Position 28 27 )
    ( TokSym "sequence" )
, L
    ( Position 28 36 )
    ( TokSym "of" )
, L
    ( Position 28 39 )
    ( TokSym "simplified" )
, L
    ( Position 28 50 )
    ( TokSym "implementations" )
, L
    ( Position 28 66 )
    ( TokSym "of" )
, L
    ( Position 28 69 )
    ( TokSym "familiar" )
, L
    ( Position 28 78 )
    ( TokSym "shell" )
, L
    ( Position 28 84 )
    ( TokSym "utilities." )
, L
    ( Position 29 1 )
    ( Indent 21 )
, L
    ( Position 29 22 )
    ( TokSym "The" )
, L
    ( Position 29 26 )
    ( TokSym "same" )
, L
    ( Position 29 31 )
    ( TokSym "programs" )
, L
    ( Position 29 40 )
    ( TokSym "are" )
, L
    ( Position 29 44 )
    ( TokSym "implemented" )
, L
    ( Position 29 56 )
    ( TokSym "at" )
, L
    ( Position 29 59 )
    ( TokSym "the" )
, L
    ( Position 29 63 )
    ( TokSym "end" )
, L
    ( Position 29 67 )
    ( TokSym "of" )
, L
    ( Position 29 70 )
    ( TokSym "the" )
, L
    ( Position 29 74 )
    ( TokSym "excellent" )
, L
    ( Position 30 1 )
    ( Indent 21 )
, L
    ( Position 30 22 )
    ( TokOther "<" )
, L
    ( Position 30 23 )
    ( TokSym "http" )
, L
    ( Position 30 27 ) Colon
, L
    ( Position 30 28 )
    ( TokOther "//" )
, L
    ( Position 30 30 )
    ( TokSym "hackage.haskell.org" )
, L
    ( Position 30 49 )
    ( TokOther "/" )
, L
    ( Position 30 50 )
    ( TokSym "package" )
, L
    ( Position 30 57 )
    ( TokOther "/" )
, L
    ( Position 30 58 )
    ( TokSym "io-streams-1.3.2.0" )
, L
    ( Position 30 76 )
    ( TokOther "/" )
, L
    ( Position 30 77 )
    ( TokSym "docs" )
, L
    ( Position 30 81 )
    ( TokOther "/" )
, L
    ( Position 30 82 )
    ( TokSym "System-IO-Streams-Tutorial.html" )
, L
    ( Position 30 114 )
    ( TokSym "io-streams" )
, L
    ( Position 30 125 )
    ( TokSym "tutorial" )
, L
    ( Position 30 133 )
    ( TokOther ">." )
, L
    ( Position 31 1 )
    ( Indent 21 )
, L
    ( Position 31 22 )
    ( TokSym "It" )
, L
    ( Position 31 25 )
    ( TokSym "is" )
, L
    ( Position 31 28 )
    ( TokSym "generally" )
, L
    ( Position 31 38 )
    ( TokSym "much" )
, L
    ( Position 31 43 )
    ( TokSym "simpler;" )
, L
    ( Position 31 52 )
    ( TokSym "in" )
, L
    ( Position 31 55 )
    ( TokSym "some" )
, L
    ( Position 31 60 )
    ( TokSym "case" )
, L
    ( Position 31 65 )
    ( TokSym "simpler" )
, L
    ( Position 31 73 )
    ( TokSym "than" )
, L
    ( Position 31 78 )
    ( TokSym "what" )
, L
    ( Position 32 1 )
    ( Indent 21 )
, L
    ( Position 32 22 )
    ( TokSym "you" )
, L
    ( Position 32 26 )
    ( TokSym "would" )
, L
    ( Position 32 32 )
    ( TokSym "write" )
, L
    ( Position 32 38 )
    ( TokSym "with" )
, L
    ( Position 32 43 )
    ( TokSym "lazy" )
, L
    ( Position 32 48 )
    ( TokSym "bytestrings." )
, L
    ( Position 33 1 )
    ( Indent 21 )
, L
    ( Position 33 22 )
    ( TokOther "<" )
, L
    ( Position 33 23 )
    ( TokSym "https" )
, L
    ( Position 33 28 ) Colon
, L
    ( Position 33 29 )
    ( TokOther "//" )
, L
    ( Position 33 31 )
    ( TokSym "gist.github.com" )
, L
    ( Position 33 46 )
    ( TokOther "/" )
, L
    ( Position 33 47 )
    ( TokSym "michaelt" )
, L
    ( Position 33 55 )
    ( TokOther "/" )
, L
    ( Position 33 56 )
    ( TokSym "2dcea1ba32562c091357" )
, L
    ( Position 33 77 )
    ( TokSym "Here" )
, L
    ( Position 33 81 )
    ( TokOther ">" )
, L
    ( Position 34 1 )
    ( Indent 21 )
, L
    ( Position 34 22 )
    ( TokSym "is" )
, L
    ( Position 34 25 )
    ( TokSym "a" )
, L
    ( Position 34 27 )
    ( TokSym "simple" )
, L
    ( Position 34 34 )
    ( TokSym "GET" )
, L
    ( Position 34 38 )
    ( TokSym "request" )
, L
    ( Position 34 46 )
    ( TokSym "that" )
, L
    ( Position 34 51 )
    ( TokSym "returns" )
, L
    ( Position 34 59 )
    ( TokSym "a" )
, L
    ( Position 34 61 )
    ( TokSym "byte" )
, L
    ( Position 34 66 )
    ( TokSym "stream." )
, L
    ( Position 35 1 )
    ( Indent 21 )
, L
    ( Position 35 22 )
    ( TokSym "." )
, L
    ( Position 36 1 )
    ( Indent 21 )
, L
    ( Position 36 22 )
    ( TokSym "The" )
, L
    ( Position 36 26 )
    ( TokSym "implementation" )
, L
    ( Position 36 41 )
    ( TokSym "is" )
, L
    ( Position 36 44 )
    ( TokSym "idiot-simple;" )
, L
    ( Position 36 58 )
    ( TokSym "it" )
, L
    ( Position 36 61 )
    ( TokSym "follows" )
, L
    ( Position 36 69 )
    ( TokSym "the" )
, L
    ( Position 37 1 )
    ( Indent 21 )
, L
    ( Position 37 22 )
    ( TokSym "details" )
, L
    ( Position 37 30 )
    ( TokSym "of" )
, L
    ( Position 37 33 )
    ( TokOther "@" )
, L
    ( Position 37 34 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 37 54 )
    ( TokOther "@" )
, L
    ( Position 37 56 )
    ( TokSym "and" )
, L
    ( Position 37 60 )
    ( TokOther "@" )
, L
    ( Position 37 61 )
    ( TokSym "Data.ByteString.Lazy.Char8" )
, L
    ( Position 37 87 )
    ( TokOther "@" )
, L
    ( Position 38 1 )
    ( Indent 21 )
, L
    ( Position 38 22 )
    ( TokSym "as" )
, L
    ( Position 38 25 )
    ( TokSym "far" )
, L
    ( Position 38 29 )
    ( TokSym "as" )
, L
    ( Position 38 32 )
    ( TokSym "is" )
, L
    ( Position 38 35 )
    ( TokSym "possible" )
, L
    ( Position 38 43 )
    ( TokOther "," )
, L
    ( Position 38 45 )
    ( TokSym "replacing" )
, L
    ( Position 38 55 )
    ( TokSym "the" )
, L
    ( Position 38 59 )
    ( TokSym "lazy" )
, L
    ( Position 38 64 )
    ( TokSym "bytestring" )
, L
    ( Position 38 75 )
    ( TokSym "type" )
, L
    ( Position 38 79 ) Colon
, L
    ( Position 39 1 )
    ( Indent 21 )
, L
    ( Position 39 22 )
    ( TokSym "." )
, L
    ( Position 40 1 )
    ( Indent 21 )
, L
    ( Position 40 22 )
    ( TokOther ">" )
, L
    ( Position 40 24 )
    ( TokSym "data" )
, L
    ( Position 40 29 )
    ( TokSym "ByteString" )
, L
    ( Position 40 44 )
    ( TokOther "=" )
, L
    ( Position 40 46 )
    ( TokSym "Empty" )
, L
    ( Position 40 54 )
    ( TokOther "|" )
, L
    ( Position 40 56 )
    ( TokSym "Chunk" )
, L
    ( Position 40 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 40 80 )
    ( TokSym "ByteString" )
, L
    ( Position 41 1 )
    ( Indent 21 )
, L
    ( Position 41 22 )
    ( TokSym "." )
, L
    ( Position 42 1 )
    ( Indent 21 )
, L
    ( Position 42 22 )
    ( TokSym "with" )
, L
    ( Position 42 27 )
    ( TokSym "the" )
, L
    ( Position 42 31 )
    ( TokOther "/" )
, L
    ( Position 42 32 )
    ( TokSym "minimal" )
, L
    ( Position 42 39 )
    ( TokOther "/" )
, L
    ( Position 42 41 )
    ( TokSym "effectful" )
, L
    ( Position 42 51 )
    ( TokSym "variant" )
, L
    ( Position 42 58 ) Colon
, L
    ( Position 43 1 )
    ( Indent 21 )
, L
    ( Position 43 22 )
    ( TokSym "." )
, L
    ( Position 44 1 )
    ( Indent 21 )
, L
    ( Position 44 22 )
    ( TokOther ">" )
, L
    ( Position 44 24 )
    ( TokSym "data" )
, L
    ( Position 44 29 )
    ( TokSym "ByteString" )
, L
    ( Position 44 40 )
    ( TokSym "m" )
, L
    ( Position 44 42 )
    ( TokSym "r" )
, L
    ( Position 44 44 )
    ( TokOther "=" )
, L
    ( Position 44 46 )
    ( TokSym "Empty" )
, L
    ( Position 44 52 )
    ( TokSym "r" )
, L
    ( Position 44 54 )
    ( TokOther "|" )
, L
    ( Position 44 56 )
    ( TokSym "Chunk" )
, L
    ( Position 44 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 44 80 )
    ( TokOther "(" )
, L
    ( Position 44 81 )
    ( TokSym "ByteString" )
, L
    ( Position 44 92 )
    ( TokSym "m" )
, L
    ( Position 44 94 )
    ( TokSym "r" )
, L
    ( Position 44 95 )
    ( TokOther ")" )
, L
    ( Position 44 97 )
    ( TokOther "|" )
, L
    ( Position 44 99 )
    ( TokSym "Go" )
, L
    ( Position 44 102 )
    ( TokOther "(" )
, L
    ( Position 44 103 )
    ( TokSym "m" )
, L
    ( Position 44 105 )
    ( TokOther "(" )
, L
    ( Position 44 106 )
    ( TokSym "ByteString" )
, L
    ( Position 44 117 )
    ( TokSym "m" )
, L
    ( Position 44 119 )
    ( TokSym "r" )
, L
    ( Position 44 120 )
    ( TokOther ")" )
, L
    ( Position 44 121 )
    ( TokOther ")" )
, L
    ( Position 45 1 )
    ( Indent 21 )
, L
    ( Position 45 22 )
    ( TokSym "." )
, L
    ( Position 46 1 )
    ( Indent 21 )
, L
    ( Position 46 22 )
    ( TokOther "(" )
, L
    ( Position 46 23 )
    ( TokSym "Constructors" )
, L
    ( Position 46 36 )
    ( TokSym "are" )
, L
    ( Position 46 40 )
    ( TokSym "necessarily" )
, L
    ( Position 46 52 )
    ( TokSym "hidden" )
, L
    ( Position 46 59 )
    ( TokSym "in" )
, L
    ( Position 46 62 )
    ( TokSym "internal" )
, L
    ( Position 46 71 )
    ( TokSym "modules" )
, L
    ( Position 46 79 )
    ( TokSym "in" )
, L
    ( Position 46 82 )
    ( TokSym "both" )
, L
    ( Position 46 87 )
    ( TokSym "cases." )
, L
    ( Position 46 93 )
    ( TokOther ")" )
, L
    ( Position 47 1 )
    ( Indent 21 )
, L
    ( Position 47 22 )
    ( TokSym "." )
, L
    ( Position 48 1 )
    ( Indent 21 )
, L
    ( Position 48 22 )
    ( TokSym "That's" )
, L
    ( Position 48 29 )
    ( TokSym "it." )
, L
    ( Position 48 33 )
    ( TokSym "As" )
, L
    ( Position 48 36 )
    ( TokSym "a" )
, L
    ( Position 48 38 )
    ( TokSym "lazy" )
, L
    ( Position 48 43 )
    ( TokSym "bytestring" )
, L
    ( Position 48 54 )
    ( TokSym "is" )
, L
    ( Position 48 57 )
    ( TokSym "implemented" )
, L
    ( Position 48 69 )
    ( TokSym "internally" )
, L
    ( Position 49 1 )
    ( Indent 21 )
, L
    ( Position 49 22 )
    ( TokSym "by" )
, L
    ( Position 49 25 )
    ( TokSym "a" )
, L
    ( Position 49 27 )
    ( TokSym "sort" )
, L
    ( Position 49 32 )
    ( TokSym "of" )
, L
    ( Position 49 35 )
    ( TokSym "list" )
, L
    ( Position 49 40 )
    ( TokSym "of" )
, L
    ( Position 49 43 )
    ( TokSym "strict" )
, L
    ( Position 49 50 )
    ( TokSym "bytestring" )
, L
    ( Position 49 61 )
    ( TokSym "chunks" )
, L
    ( Position 49 67 )
    ( TokOther "," )
, L
    ( Position 49 69 )
    ( TokSym "a" )
, L
    ( Position 49 71 )
    ( TokSym "streaming" )
, L
    ( Position 49 81 )
    ( TokSym "bytestring" )
, L
    ( Position 49 92 )
    ( TokSym "is" )
, L
    ( Position 50 1 )
    ( Indent 21 )
, L
    ( Position 50 22 )
    ( TokSym "simply" )
, L
    ( Position 50 29 )
    ( TokSym "implemented" )
, L
    ( Position 50 41 )
    ( TokSym "as" )
, L
    ( Position 50 44 )
    ( TokSym "a" )
, L
    ( Position 50 46 )
    ( TokOther "/" )
, L
    ( Position 50 47 )
    ( TokSym "producer" )
, L
    ( Position 50 55 )
    ( TokOther "/" )
, L
    ( Position 50 57 )
    ( TokSym "or" )
, L
    ( Position 50 60 )
    ( TokOther "/" )
, L
    ( Position 50 61 )
    ( TokSym "generator" )
, L
    ( Position 50 70 )
    ( TokOther "/" )
, L
    ( Position 50 72 )
    ( TokSym "of" )
, L
    ( Position 50 75 )
    ( TokSym "strict" )
, L
    ( Position 50 82 )
    ( TokSym "bytestring" )
, L
    ( Position 50 93 )
    ( TokSym "chunks." )
, L
    ( Position 51 1 )
    ( Indent 21 )
, L
    ( Position 51 22 )
    ( TokSym "Most" )
, L
    ( Position 51 27 )
    ( TokSym "operations" )
, L
    ( Position 51 38 )
    ( TokSym "are" )
, L
    ( Position 51 42 )
    ( TokSym "defined" )
, L
    ( Position 51 50 )
    ( TokSym "by" )
, L
    ( Position 51 53 )
    ( TokSym "simply" )
, L
    ( Position 51 60 )
    ( TokSym "adding" )
, L
    ( Position 51 67 )
    ( TokSym "a" )
, L
    ( Position 51 69 )
    ( TokSym "line" )
, L
    ( Position 51 74 )
    ( TokSym "to" )
, L
    ( Position 51 77 )
    ( TokSym "what" )
, L
    ( Position 51 82 )
    ( TokSym "we" )
, L
    ( Position 51 85 )
    ( TokSym "find" )
, L
    ( Position 51 90 )
    ( TokSym "in" )
, L
    ( Position 52 1 )
    ( Indent 21 )
, L
    ( Position 52 22 )
    ( TokOther "@" )
, L
    ( Position 52 23 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 52 43 )
    ( TokOther "@." )
, L
    ( Position 53 1 )
    ( Indent 21 )
, L
    ( Position 53 22 )
    ( TokSym "." )
, L
    ( Position 54 1 )
    ( Indent 21 )
, L
    ( Position 54 22 )
    ( TokSym "Something" )
, L
    ( Position 54 32 )
    ( TokSym "like" )
, L
    ( Position 54 37 )
    ( TokSym "this" )
, L
    ( Position 54 42 )
    ( TokSym "alteration" )
, L
    ( Position 54 53 )
    ( TokSym "of" )
, L
    ( Position 54 56 )
    ( TokSym "type" )
, L
    ( Position 54 61 )
    ( TokSym "is" )
, L
    ( Position 54 64 )
    ( TokSym "of" )
, L
    ( Position 54 67 )
    ( TokSym "course" )
, L
    ( Position 54 74 )
    ( TokSym "obvious" )
, L
    ( Position 54 82 )
    ( TokSym "and" )
, L
    ( Position 54 86 )
    ( TokSym "mechanical" )
, L
    ( Position 54 96 )
    ( TokOther "," )
, L
    ( Position 54 98 )
    ( TokSym "once" )
, L
    ( Position 54 103 )
    ( TokSym "the" )
, L
    ( Position 54 107 )
    ( TokSym "idea" )
, L
    ( Position 54 112 )
    ( TokSym "of" )
, L
    ( Position 55 1 )
    ( Indent 21 )
, L
    ( Position 55 22 )
    ( TokSym "an" )
, L
    ( Position 55 25 )
    ( TokSym "effectful" )
, L
    ( Position 55 35 )
    ( TokSym "bytestring" )
, L
    ( Position 55 46 )
    ( TokSym "type" )
, L
    ( Position 55 51 )
    ( TokSym "is" )
, L
    ( Position 55 54 )
    ( TokSym "contemplated" )
, L
    ( Position 55 67 )
    ( TokSym "and" )
, L
    ( Position 55 71 )
    ( TokSym "lazy" )
, L
    ( Position 55 76 )
    ( TokSym "io" )
, L
    ( Position 55 79 )
    ( TokSym "is" )
, L
    ( Position 55 82 )
    ( TokSym "rejected." )
, L
    ( Position 56 1 )
    ( Indent 21 )
, L
    ( Position 56 22 )
    ( TokSym "Indeed" )
, L
    ( Position 56 29 )
    ( TokSym "it" )
, L
    ( Position 56 32 )
    ( TokSym "seems" )
, L
    ( Position 56 38 )
    ( TokSym "that" )
, L
    ( Position 56 43 )
    ( TokSym "this" )
, L
    ( Position 56 48 )
    ( TokSym "is" )
, L
    ( Position 56 51 )
    ( TokSym "the" )
, L
    ( Position 56 55 )
    ( TokSym "proper" )
, L
    ( Position 56 62 )
    ( TokSym "expression" )
, L
    ( Position 56 73 )
    ( TokSym "of" )
, L
    ( Position 56 76 )
    ( TokSym "what" )
, L
    ( Position 56 81 )
    ( TokSym "was" )
, L
    ( Position 57 1 )
    ( Indent 21 )
, L
    ( Position 57 22 )
    ( TokSym "intended" )
, L
    ( Position 57 31 )
    ( TokSym "by" )
, L
    ( Position 57 34 )
    ( TokSym "lazy" )
, L
    ( Position 57 39 )
    ( TokSym "bytestrings" )
, L
    ( Position 57 51 )
    ( TokSym "to" )
, L
    ( Position 57 54 )
    ( TokSym "begin" )
, L
    ( Position 57 60 )
    ( TokSym "with." )
, L
    ( Position 57 66 )
    ( TokSym "The" )
, L
    ( Position 57 70 )
    ( TokSym "documentation" )
, L
    ( Position 57 83 )
    ( TokOther "," )
, L
    ( Position 57 85 )
    ( TokSym "after" )
, L
    ( Position 57 91 )
    ( TokSym "all" )
, L
    ( Position 57 94 )
    ( TokOther "," )
, L
    ( Position 58 1 )
    ( Indent 21 )
, L
    ( Position 58 22 )
    ( TokSym "reads" )
, L
    ( Position 59 1 )
    ( Indent 21 )
, L
    ( Position 59 22 )
    ( TokSym "." )
, L
    ( Position 60 1 )
    ( Indent 21 )
, L
    ( Position 60 22 )
    ( TokOther "*" )
, L
    ( Position 60 24 )
    ( TokOther "\" )
, L
    ( Position 60 96 )
    ( LexicalError "
                           unbounded streams of data without requiring the entire sequence to be 
                           resident in memory. To take advantage of this you have to write your 
                           functions in a lazy streaming style, e.g. classic pipeline composition. 
                           The default I/O chunk size is 32k, which should be good in most circumstances.\"
                         .
                         ... which is very much the idea of this library: the default chunk size for
                         'hGetContents' and the like follows @Data.ByteString.Lazy@ and operations
                         like @lines@ and @append@ and so on are tailored not to increase chunk size. 
                         .
                         The present library is thus nothing but /lazy bytestring done right/. 
                         The authors of @Data.ByteString.Lazy@ must have supposed that 
                         the directly monadic formulation of such their type 
                         would necessarily make things slower. This appears to be a prejudice. 
                         For example, passing a large file of short lines through
                         this benchmark transformation
                         .
                         > Lazy.unlines      . map    (\bs -> "!"       <> Lazy.drop 5 bs)       . Lazy.lines
                         > Streaming.unlines . S.maps (\bs -> chunk "!" >> Streaming.drop 5 bs)  . Streaming.lines
                         .
                         gives pleasing results like these
                         .
                         > $  time ./benchlines lazy >> /dev/null
                         > real\x90m2.097s
                         > ...
                         > $  time ./benchlines streaming >> /dev/null
                         > real\x90m1.930s
                         .
                         For a more sophisticated operation like
                         .
                         > Lazy.intercalate "!\n"      . Lazy.lines
                         > Streaming.intercalate "!\n" . Streaming.lines
                         .
                         we get results like these:
                         .
                         > time ./benchlines lazy >> /dev/null
                         > real\x90m1.250s
                         > ...
                         > time ./benchlines streaming >> /dev/null
                         > real\x90m1.531s
                         . 
                         The pipes environment would express the latter as 
                         .
                         > Pipes.intercalates (Pipes.yield "!\n") . view Pipes.lines 
                         .
                         meaning almost exactly what we mean above, but with results like this
                         .
                         >  time ./benchlines pipes >> /dev/null
                         >  real\x90m6.353s
                         .
                         The difference, however, is emphatically not intrinsic to pipes; 
                         it is just that 
                         this library depends the @streaming@ library, which is used in place 
                         of @free@ to express the 
                         <http://www.haskellforall.com/2013/09/perfect-streaming-using-pipes-bytestring.html "perfectly streaming">
                         splitting and iterated division or "chunking" of byte streams. 
                         .
                         These concepts belong to the ABCs of streaming; @lines@ is just
                         a textbook example, and it is of course handled correctly in 
                         @Data.ByteString.Lazy@.
                         But the concepts are catastrophically mishandled in the streaming io libraries 
                         other than pipes. Already the @enumerator@ and @iteratee@ libraries
                         were completely defeated by @lines@: 
                         see e.g. the @enumerator@ implementation of 
                         <http://hackage.haskell.org/package/enumerator-0.4.20/docs/Data-Enumerator-Text.html#v:splitWhen splitWhen and lines>.
                         This will concatenate strict text forever, if that's what is coming
                         in.  The rot spreads from there. 
                         It is just a fact that in all of the general streaming io 
                         frameworks other than pipes, 
                         it becomes torture to express elementary distinctions 
                         that are transparently
                         and immediately contained in any idea of streaming whatsoever. 
                         .
                         Though we barely alter signatures in @Data.ByteString.Lazy@ 
                         more than is required  by the types, 
                         the point of view that emerges is very much that of
                         @pipes-bytestring@ and @pipes-group@. In particular
                         we have these correspondences:
                         .
                         > Lazy.splitAt      :: Int -> ByteString              -> (ByteString, ByteString)
                         > Streaming.splitAt :: Int -> ByteString m r          -> ByteString m (ByteString m r)
                         > Pipes.splitAt     :: Int -> Producer ByteString m r -> Producer ByteString m (Producer ByteString m r)
                         .
                         and
                         .
                         > Lazy.lines      :: ByteString -> [ByteString]
                         > Streaming.lines :: ByteString m r -> Stream (ByteString m) m r
                         > Pipes.lines     :: Producer ByteString m r -> FreeT (Producer ByteString m) m r
                         .
                         where the @Stream@ type expresses the sequencing of @ByteString m _@ layers
                         with the usual \'free monad\' sequencing. 
                         .
                         If you are unfamiliar with this
                         way of structuring material you might take a look at the tutorial for 
                         <http://hackage.haskell.org/package/pipes-group-1.0.2/docs/Pipes-Group-Tutorial.html pipes-group>
                         and the examples in the documentation for the streaming library. See also
                         <https://gist.github.com/michaelt/6c6843e6dd8030e95d58 simple implementations> 
                         of the shell-like examples mentioned above. Or, again, put a question on
                         the issues page or to the pipes list.

                        
    license:             BSD3
    license-file:        LICENSE
    author:              michaelt
    maintainer:          what_is_it_to_do_anything@yahoo.com
    -- copyright:           
    category:            Data, Pipes, Streaming
    build-type:          Simple
    extra-source-files:  README.md
    cabal-version:       >=1.10
    stability:           Experimental
    homepage:            https://github.com/michaelt/streaming-bytestring
    bug-reports:         https://github.com/michaelt/streaming-bytestring/issues
    source-repository head
        type: git
        location: https://github.com/michaelt/streaming-bytestring


    library
      exposed-modules:     Data.ByteString.Streaming
                           , Data.ByteString.Streaming.Char8
                           , Data.ByteString.Streaming.Internal

                           
      -- other-modules:       
      other-extensions:    CPP, BangPatterns, ForeignFunctionInterface, DeriveDataTypeable, Unsafe
      build-depends:       base  <4.9
                         , deepseq 
                         , bytestring
                         , mtl >=2.1 && <2.3
                         , mmorph >=1.0 && <1.2
                         , transformers >=0.3 && <0.5
                         , transformers-base
                         , streaming >=  0.1.3.0 && <= 0.1.3.5
                         , resourcet
                         , exceptions
      if impl(ghc < 7.8) 
        build-depends:
                         bytestring < 0.10.4.0
                         , bytestring-builder
      else               
        build-depends:     
                         bytestring >= 0.10.4                     


      default-language:    Haskell2010
      ghc-options: -O2
      
    " )
, L
    ( Position 60 25 ) EOF
]
