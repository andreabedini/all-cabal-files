[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 22 )
    ( TokSym "streaming-bytestring" )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 22 )
    ( TokSym "0.1.5" )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "x-revision" )
, L
    ( Position 3 11 ) Colon
, L
    ( Position 3 13 )
    ( TokSym "1" )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "synopsis" )
, L
    ( Position 4 9 ) Colon
, L
    ( Position 4 22 )
    ( TokSym "effectful" )
, L
    ( Position 4 32 )
    ( TokSym "byte" )
, L
    ( Position 4 37 )
    ( TokSym "steams" )
, L
    ( Position 4 43 )
    ( TokOther "," )
, L
    ( Position 4 45 )
    ( TokSym "or" )
, L
    ( Position 4 47 ) Colon
, L
    ( Position 4 49 )
    ( TokSym "bytestring" )
, L
    ( Position 4 60 )
    ( TokSym "io" )
, L
    ( Position 4 63 )
    ( TokSym "done" )
, L
    ( Position 4 68 )
    ( TokSym "right." )
, L
    ( Position 6 1 )
    ( Indent 0 )
, L
    ( Position 6 1 )
    ( TokSym "description" )
, L
    ( Position 6 12 ) Colon
, L
    ( Position 6 22 )
    ( TokSym "This" )
, L
    ( Position 6 27 )
    ( TokSym "is" )
, L
    ( Position 6 30 )
    ( TokSym "an" )
, L
    ( Position 6 33 )
    ( TokSym "implementation" )
, L
    ( Position 6 48 )
    ( TokSym "of" )
, L
    ( Position 6 51 )
    ( TokSym "effectful" )
, L
    ( Position 6 60 )
    ( TokOther "," )
, L
    ( Position 6 62 )
    ( TokSym "memory-constrained" )
, L
    ( Position 7 1 )
    ( Indent 21 )
, L
    ( Position 7 22 )
    ( TokSym "bytestrings" )
, L
    ( Position 7 34 )
    ( TokOther "(" )
, L
    ( Position 7 35 )
    ( TokSym "byte" )
, L
    ( Position 7 40 )
    ( TokSym "streams" )
, L
    ( Position 7 47 )
    ( TokOther ")" )
, L
    ( Position 7 49 )
    ( TokSym "and" )
, L
    ( Position 7 53 )
    ( TokSym "functions" )
, L
    ( Position 7 63 )
    ( TokSym "for" )
, L
    ( Position 7 67 )
    ( TokSym "streaming" )
, L
    ( Position 8 1 )
    ( Indent 21 )
, L
    ( Position 8 22 )
    ( TokSym "bytestring" )
, L
    ( Position 8 33 )
    ( TokSym "manipulation" )
, L
    ( Position 8 45 )
    ( TokOther "," )
, L
    ( Position 8 47 )
    ( TokSym "adequate" )
, L
    ( Position 8 56 )
    ( TokSym "for" )
, L
    ( Position 8 60 )
    ( TokSym "non-lazy-io." )
, L
    ( Position 9 1 )
    ( Indent 21 )
, L
    ( Position 9 22 )
    ( TokSym "Some" )
, L
    ( Position 9 27 )
    ( TokSym "examples" )
, L
    ( Position 9 36 )
    ( TokSym "of" )
, L
    ( Position 9 39 )
    ( TokSym "the" )
, L
    ( Position 9 43 )
    ( TokSym "use" )
, L
    ( Position 9 47 )
    ( TokSym "of" )
, L
    ( Position 9 50 )
    ( TokSym "byte" )
, L
    ( Position 9 55 )
    ( TokSym "streams" )
, L
    ( Position 9 63 )
    ( TokSym "to" )
, L
    ( Position 9 66 )
    ( TokSym "implement" )
, L
    ( Position 9 76 )
    ( TokSym "simple" )
, L
    ( Position 10 1 )
    ( Indent 21 )
, L
    ( Position 10 22 )
    ( TokSym "shell" )
, L
    ( Position 10 28 )
    ( TokSym "progams" )
, L
    ( Position 10 36 )
    ( TokSym "can" )
, L
    ( Position 10 40 )
    ( TokSym "be" )
, L
    ( Position 10 43 )
    ( TokSym "found" )
, L
    ( Position 11 1 )
    ( Indent 21 )
, L
    ( Position 11 22 )
    ( TokOther "<" )
, L
    ( Position 11 23 )
    ( TokSym "https" )
, L
    ( Position 11 28 ) Colon
, L
    ( Position 11 29 )
    ( TokOther "//" )
, L
    ( Position 11 31 )
    ( TokSym "gist.github.com" )
, L
    ( Position 11 46 )
    ( TokOther "/" )
, L
    ( Position 11 47 )
    ( TokSym "michaelt" )
, L
    ( Position 11 55 )
    ( TokOther "/" )
, L
    ( Position 11 56 )
    ( TokSym "6c6843e6dd8030e95d58" )
, L
    ( Position 11 77 )
    ( TokSym "here" )
, L
    ( Position 11 81 )
    ( TokOther ">." )
, L
    ( Position 12 1 )
    ( Indent 21 )
, L
    ( Position 12 22 )
    ( TokSym "See" )
, L
    ( Position 12 26 )
    ( TokSym "also" )
, L
    ( Position 12 31 )
    ( TokSym "the" )
, L
    ( Position 12 35 )
    ( TokSym "illustrations" )
, L
    ( Position 12 49 )
    ( TokSym "of" )
, L
    ( Position 12 52 )
    ( TokSym "use" )
, L
    ( Position 12 56 )
    ( TokSym "with" )
, L
    ( Position 12 61 )
    ( TokSym "e.g." )
, L
    ( Position 12 66 )
    ( TokOther "@" )
, L
    ( Position 12 67 )
    ( TokSym "attoparsec" )
, L
    ( Position 12 77 )
    ( TokOther "@," )
, L
    ( Position 13 1 )
    ( Indent 21 )
, L
    ( Position 13 22 )
    ( TokOther "@" )
, L
    ( Position 13 23 )
    ( TokSym "aeson" )
, L
    ( Position 13 28 )
    ( TokOther "@," )
, L
    ( Position 13 31 )
    ( TokOther "@" )
, L
    ( Position 13 32 )
    ( TokSym "http-client" )
, L
    ( Position 13 43 )
    ( TokOther "@," )
, L
    ( Position 13 46 )
    ( TokOther "@" )
, L
    ( Position 13 47 )
    ( TokSym "zlib" )
, L
    ( Position 13 51 )
    ( TokOther "@" )
, L
    ( Position 13 53 )
    ( TokSym "etc." )
, L
    ( Position 13 58 )
    ( TokSym "in" )
, L
    ( Position 13 61 )
    ( TokSym "the" )
, L
    ( Position 14 1 )
    ( Indent 21 )
, L
    ( Position 14 22 )
    ( TokOther "<" )
, L
    ( Position 14 23 )
    ( TokSym "https" )
, L
    ( Position 14 28 ) Colon
, L
    ( Position 14 29 )
    ( TokOther "//" )
, L
    ( Position 14 31 )
    ( TokSym "hackage.haskell.org" )
, L
    ( Position 14 50 )
    ( TokOther "/" )
, L
    ( Position 14 51 )
    ( TokSym "package" )
, L
    ( Position 14 58 )
    ( TokOther "/" )
, L
    ( Position 14 59 )
    ( TokSym "streaming-utils" )
, L
    ( Position 14 75 )
    ( TokSym "streaming-utils" )
, L
    ( Position 14 90 )
    ( TokOther ">" )
, L
    ( Position 15 1 )
    ( Indent 21 )
, L
    ( Position 15 22 )
    ( TokSym "library." )
, L
    ( Position 15 32 )
    ( TokSym "Usage" )
, L
    ( Position 15 38 )
    ( TokSym "is" )
, L
    ( Position 15 41 )
    ( TokSym "as" )
, L
    ( Position 15 44 )
    ( TokSym "close" )
, L
    ( Position 15 50 )
    ( TokSym "as" )
, L
    ( Position 15 53 )
    ( TokSym "possible" )
, L
    ( Position 15 62 )
    ( TokSym "to" )
, L
    ( Position 15 65 )
    ( TokSym "that" )
, L
    ( Position 15 70 )
    ( TokSym "of" )
, L
    ( Position 15 73 )
    ( TokOther "@" )
, L
    ( Position 15 74 )
    ( TokSym "ByteString" )
, L
    ( Position 15 84 )
    ( TokOther "@" )
, L
    ( Position 16 1 )
    ( Indent 21 )
, L
    ( Position 16 22 )
    ( TokSym "and" )
, L
    ( Position 16 26 )
    ( TokSym "lazy" )
, L
    ( Position 16 31 )
    ( TokOther "@" )
, L
    ( Position 16 32 )
    ( TokSym "ByteString" )
, L
    ( Position 16 42 )
    ( TokOther "@." )
, L
    ( Position 17 1 )
    ( Indent 21 )
, L
    ( Position 17 22 )
    ( TokSym "." )
, L
    ( Position 18 1 )
    ( Indent 21 )
, L
    ( Position 18 22 )
    ( TokSym "A" )
, L
    ( Position 18 24 )
    ( TokOther "@" )
, L
    ( Position 18 25 )
    ( TokSym "ByteString" )
, L
    ( Position 18 36 )
    ( TokSym "IO" )
, L
    ( Position 18 39 )
    ( TokOther "(" )
, L
    ( Position 18 40 )
    ( TokOther ")" )
, L
    ( Position 18 41 )
    ( TokOther "@" )
, L
    ( Position 18 43 )
    ( TokSym "is" )
, L
    ( Position 18 46 )
    ( TokSym "the" )
, L
    ( Position 18 50 )
    ( TokSym "most" )
, L
    ( Position 18 55 )
    ( TokSym "natural" )
, L
    ( Position 18 63 )
    ( TokSym "representation" )
, L
    ( Position 18 78 )
    ( TokSym "of" )
, L
    ( Position 19 1 )
    ( Indent 21 )
, L
    ( Position 19 22 )
    ( TokSym "an" )
, L
    ( Position 19 25 )
    ( TokSym "effectful" )
, L
    ( Position 19 35 )
    ( TokSym "stream" )
, L
    ( Position 19 42 )
    ( TokSym "of" )
, L
    ( Position 19 45 )
    ( TokSym "bytes" )
, L
    ( Position 19 51 )
    ( TokSym "arising" )
, L
    ( Position 19 59 )
    ( TokSym "chunkwise" )
, L
    ( Position 19 69 )
    ( TokSym "from" )
, L
    ( Position 19 74 )
    ( TokSym "a" )
, L
    ( Position 19 76 )
    ( TokSym "handle." )
, L
    ( Position 20 1 )
    ( Indent 21 )
, L
    ( Position 20 22 )
    ( TokSym "Indeed" )
, L
    ( Position 20 28 )
    ( TokOther "," )
, L
    ( Position 20 30 )
    ( TokSym "the" )
, L
    ( Position 20 34 )
    ( TokSym "implementation" )
, L
    ( Position 20 49 )
    ( TokSym "follows" )
, L
    ( Position 20 57 )
    ( TokSym "the" )
, L
    ( Position 21 1 )
    ( Indent 21 )
, L
    ( Position 21 22 )
    ( TokSym "details" )
, L
    ( Position 21 30 )
    ( TokSym "of" )
, L
    ( Position 21 33 )
    ( TokOther "@" )
, L
    ( Position 21 34 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 21 54 )
    ( TokOther "@" )
, L
    ( Position 21 56 )
    ( TokSym "and" )
, L
    ( Position 21 60 )
    ( TokOther "@" )
, L
    ( Position 21 61 )
    ( TokSym "Data.ByteString.Lazy.Char8" )
, L
    ( Position 21 87 )
    ( TokOther "@" )
, L
    ( Position 22 1 )
    ( Indent 21 )
, L
    ( Position 22 22 )
    ( TokSym "in" )
, L
    ( Position 22 25 )
    ( TokSym "unrelenting" )
, L
    ( Position 22 37 )
    ( TokSym "detail" )
, L
    ( Position 22 43 )
    ( TokOther "," )
, L
    ( Position 22 45 )
    ( TokSym "omitting" )
, L
    ( Position 22 54 )
    ( TokSym "only" )
, L
    ( Position 22 59 )
    ( TokSym "transparently" )
, L
    ( Position 22 73 )
    ( TokSym "non-streaming" )
, L
    ( Position 23 1 )
    ( Indent 21 )
, L
    ( Position 23 22 )
    ( TokSym "operations" )
, L
    ( Position 23 33 )
    ( TokSym "like" )
, L
    ( Position 23 38 )
    ( TokOther "@" )
, L
    ( Position 23 39 )
    ( TokSym "reverse" )
, L
    ( Position 23 46 )
    ( TokOther "@." )
, L
    ( Position 23 49 )
    ( TokSym "It" )
, L
    ( Position 23 52 )
    ( TokSym "is" )
, L
    ( Position 23 55 )
    ( TokSym "just" )
, L
    ( Position 23 60 )
    ( TokSym "a" )
, L
    ( Position 23 62 )
    ( TokSym "question" )
, L
    ( Position 23 71 )
    ( TokSym "of" )
, L
    ( Position 23 74 )
    ( TokSym "replacing" )
, L
    ( Position 24 1 )
    ( Indent 21 )
, L
    ( Position 24 22 )
    ( TokSym "the" )
, L
    ( Position 24 26 )
    ( TokSym "lazy" )
, L
    ( Position 24 31 )
    ( TokSym "bytestring" )
, L
    ( Position 24 42 )
    ( TokSym "type" )
, L
    ( Position 24 46 ) Colon
, L
    ( Position 25 1 )
    ( Indent 21 )
, L
    ( Position 25 22 )
    ( TokSym "." )
, L
    ( Position 26 1 )
    ( Indent 21 )
, L
    ( Position 26 22 )
    ( TokOther ">" )
, L
    ( Position 26 24 )
    ( TokSym "data" )
, L
    ( Position 26 29 )
    ( TokSym "ByteString" )
, L
    ( Position 26 44 )
    ( TokOther "=" )
, L
    ( Position 26 46 )
    ( TokSym "Empty" )
, L
    ( Position 26 54 )
    ( TokOther "|" )
, L
    ( Position 26 56 )
    ( TokSym "Chunk" )
, L
    ( Position 26 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 26 80 )
    ( TokSym "ByteString" )
, L
    ( Position 27 1 )
    ( Indent 21 )
, L
    ( Position 27 22 )
    ( TokSym "." )
, L
    ( Position 28 1 )
    ( Indent 21 )
, L
    ( Position 28 22 )
    ( TokSym "with" )
, L
    ( Position 28 27 )
    ( TokSym "the" )
, L
    ( Position 28 31 )
    ( TokOther "/" )
, L
    ( Position 28 32 )
    ( TokSym "minimal" )
, L
    ( Position 28 39 )
    ( TokOther "/" )
, L
    ( Position 28 41 )
    ( TokSym "effectful" )
, L
    ( Position 28 51 )
    ( TokSym "variant" )
, L
    ( Position 28 58 ) Colon
, L
    ( Position 29 1 )
    ( Indent 21 )
, L
    ( Position 29 22 )
    ( TokSym "." )
, L
    ( Position 30 1 )
    ( Indent 21 )
, L
    ( Position 30 22 )
    ( TokOther ">" )
, L
    ( Position 30 24 )
    ( TokSym "data" )
, L
    ( Position 30 29 )
    ( TokSym "ByteString" )
, L
    ( Position 30 40 )
    ( TokSym "m" )
, L
    ( Position 30 42 )
    ( TokSym "r" )
, L
    ( Position 30 44 )
    ( TokOther "=" )
, L
    ( Position 30 46 )
    ( TokSym "Empty" )
, L
    ( Position 30 52 )
    ( TokSym "r" )
, L
    ( Position 30 54 )
    ( TokOther "|" )
, L
    ( Position 30 56 )
    ( TokSym "Chunk" )
, L
    ( Position 30 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 30 80 )
    ( TokOther "(" )
, L
    ( Position 30 81 )
    ( TokSym "ByteString" )
, L
    ( Position 30 92 )
    ( TokSym "m" )
, L
    ( Position 30 94 )
    ( TokSym "r" )
, L
    ( Position 30 95 )
    ( TokOther ")" )
, L
    ( Position 30 97 )
    ( TokOther "|" )
, L
    ( Position 30 99 )
    ( TokSym "Go" )
, L
    ( Position 30 102 )
    ( TokOther "(" )
, L
    ( Position 30 103 )
    ( TokSym "m" )
, L
    ( Position 30 105 )
    ( TokOther "(" )
, L
    ( Position 30 106 )
    ( TokSym "ByteString" )
, L
    ( Position 30 117 )
    ( TokSym "m" )
, L
    ( Position 30 119 )
    ( TokSym "r" )
, L
    ( Position 30 120 )
    ( TokOther ")" )
, L
    ( Position 30 121 )
    ( TokOther ")" )
, L
    ( Position 31 1 )
    ( Indent 21 )
, L
    ( Position 31 22 )
    ( TokSym "." )
, L
    ( Position 32 1 )
    ( Indent 21 )
, L
    ( Position 32 22 )
    ( TokOther "(" )
, L
    ( Position 32 23 )
    ( TokSym "Constructors" )
, L
    ( Position 32 36 )
    ( TokSym "are" )
, L
    ( Position 32 40 )
    ( TokSym "necessarily" )
, L
    ( Position 32 52 )
    ( TokSym "hidden" )
, L
    ( Position 32 59 )
    ( TokSym "in" )
, L
    ( Position 32 62 )
    ( TokSym "internal" )
, L
    ( Position 32 71 )
    ( TokSym "modules" )
, L
    ( Position 32 79 )
    ( TokSym "in" )
, L
    ( Position 32 82 )
    ( TokSym "both" )
, L
    ( Position 32 87 )
    ( TokSym "the" )
, L
    ( Position 32 91 )
    ( TokOther "@" )
, L
    ( Position 32 92 )
    ( TokSym "Lazy" )
, L
    ( Position 32 96 )
    ( TokOther "@" )
, L
    ( Position 32 98 )
    ( TokSym "and" )
, L
    ( Position 32 102 )
    ( TokSym "the" )
, L
    ( Position 32 106 )
    ( TokOther "@" )
, L
    ( Position 32 107 )
    ( TokSym "Streaming" )
, L
    ( Position 32 116 )
    ( TokOther "@." )
, L
    ( Position 32 118 )
    ( TokOther ")" )
, L
    ( Position 33 1 )
    ( Indent 21 )
, L
    ( Position 33 22 )
    ( TokSym "." )
, L
    ( Position 34 1 )
    ( Indent 21 )
, L
    ( Position 34 22 )
    ( TokSym "That's" )
, L
    ( Position 34 29 )
    ( TokSym "it." )
, L
    ( Position 34 33 )
    ( TokSym "As" )
, L
    ( Position 34 36 )
    ( TokSym "a" )
, L
    ( Position 34 38 )
    ( TokSym "lazy" )
, L
    ( Position 34 43 )
    ( TokSym "bytestring" )
, L
    ( Position 34 54 )
    ( TokSym "is" )
, L
    ( Position 34 57 )
    ( TokSym "implemented" )
, L
    ( Position 34 69 )
    ( TokSym "internally" )
, L
    ( Position 35 1 )
    ( Indent 21 )
, L
    ( Position 35 22 )
    ( TokSym "by" )
, L
    ( Position 35 25 )
    ( TokSym "a" )
, L
    ( Position 35 27 )
    ( TokSym "sort" )
, L
    ( Position 35 32 )
    ( TokSym "of" )
, L
    ( Position 35 35 )
    ( TokSym "list" )
, L
    ( Position 35 40 )
    ( TokSym "of" )
, L
    ( Position 35 43 )
    ( TokSym "strict" )
, L
    ( Position 35 50 )
    ( TokSym "bytestring" )
, L
    ( Position 35 61 )
    ( TokSym "chunks" )
, L
    ( Position 35 67 )
    ( TokOther "," )
, L
    ( Position 35 69 )
    ( TokSym "a" )
, L
    ( Position 35 71 )
    ( TokSym "streaming" )
, L
    ( Position 35 81 )
    ( TokSym "bytestring" )
, L
    ( Position 35 92 )
    ( TokSym "is" )
, L
    ( Position 36 1 )
    ( Indent 21 )
, L
    ( Position 36 22 )
    ( TokSym "simply" )
, L
    ( Position 36 29 )
    ( TokSym "implemented" )
, L
    ( Position 36 41 )
    ( TokSym "as" )
, L
    ( Position 36 44 )
    ( TokSym "a" )
, L
    ( Position 36 46 )
    ( TokOther "/" )
, L
    ( Position 36 47 )
    ( TokSym "producer" )
, L
    ( Position 36 55 )
    ( TokOther "/" )
, L
    ( Position 36 57 )
    ( TokSym "or" )
, L
    ( Position 36 60 )
    ( TokOther "/" )
, L
    ( Position 36 61 )
    ( TokSym "generator" )
, L
    ( Position 36 70 )
    ( TokOther "/" )
, L
    ( Position 36 72 )
    ( TokSym "of" )
, L
    ( Position 36 75 )
    ( TokSym "strict" )
, L
    ( Position 36 82 )
    ( TokSym "bytestring" )
, L
    ( Position 36 93 )
    ( TokSym "chunks." )
, L
    ( Position 37 1 )
    ( Indent 21 )
, L
    ( Position 37 22 )
    ( TokSym "Most" )
, L
    ( Position 37 27 )
    ( TokSym "operations" )
, L
    ( Position 37 38 )
    ( TokSym "are" )
, L
    ( Position 37 42 )
    ( TokSym "defined" )
, L
    ( Position 37 50 )
    ( TokSym "by" )
, L
    ( Position 37 53 )
    ( TokSym "simply" )
, L
    ( Position 37 60 )
    ( TokSym "adding" )
, L
    ( Position 37 67 )
    ( TokSym "a" )
, L
    ( Position 37 69 )
    ( TokSym "line" )
, L
    ( Position 37 74 )
    ( TokSym "to" )
, L
    ( Position 37 77 )
    ( TokSym "what" )
, L
    ( Position 37 82 )
    ( TokSym "we" )
, L
    ( Position 37 85 )
    ( TokSym "find" )
, L
    ( Position 37 90 )
    ( TokSym "in" )
, L
    ( Position 38 1 )
    ( Indent 21 )
, L
    ( Position 38 22 )
    ( TokOther "@" )
, L
    ( Position 38 23 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 38 43 )
    ( TokOther "@." )
, L
    ( Position 38 46 )
    ( TokSym "The" )
, L
    ( Position 38 50 )
    ( TokSym "only" )
, L
    ( Position 38 55 )
    ( TokSym "possible" )
, L
    ( Position 38 64 )
    ( TokSym "simplification" )
, L
    ( Position 38 79 )
    ( TokSym "would" )
, L
    ( Position 39 1 )
    ( Indent 21 )
, L
    ( Position 39 22 )
    ( TokSym "involve" )
, L
    ( Position 39 30 )
    ( TokSym "specializing" )
, L
    ( Position 39 43 )
    ( TokSym "to" )
, L
    ( Position 39 46 )
    ( TokOther "@" )
, L
    ( Position 39 47 )
    ( TokSym "IO" )
, L
    ( Position 39 49 )
    ( TokOther "@," )
, L
    ( Position 39 52 )
    ( TokSym "throughout" )
, L
    ( Position 39 63 )
    ( TokSym "-" )
, L
    ( Position 39 65 )
    ( TokSym "but" )
, L
    ( Position 39 69 )
    ( TokSym "this" )
, L
    ( Position 39 74 )
    ( TokSym "would" )
, L
    ( Position 39 80 )
    ( TokSym "e.g." )
, L
    ( Position 39 85 )
    ( TokSym "block" )
, L
    ( Position 40 1 )
    ( Indent 21 )
, L
    ( Position 40 22 )
    ( TokSym "the" )
, L
    ( Position 40 26 )
    ( TokSym "use" )
, L
    ( Position 40 30 )
    ( TokSym "of" )
, L
    ( Position 40 33 )
    ( TokOther "@" )
, L
    ( Position 40 34 )
    ( TokSym "ResourceT" )
, L
    ( Position 40 43 )
    ( TokOther "@" )
, L
    ( Position 40 45 )
    ( TokSym "to" )
, L
    ( Position 40 48 )
    ( TokSym "manage" )
, L
    ( Position 40 55 )
    ( TokSym "handles" )
, L
    ( Position 40 63 )
    ( TokSym "and" )
, L
    ( Position 40 67 )
    ( TokSym "the" )
, L
    ( Position 40 71 )
    ( TokSym "like" )
, L
    ( Position 40 75 )
    ( TokOther "," )
, L
    ( Position 40 77 )
    ( TokSym "and" )
, L
    ( Position 40 81 )
    ( TokSym "a" )
, L
    ( Position 40 83 )
    ( TokSym "number" )
, L
    ( Position 41 1 )
    ( Indent 21 )
, L
    ( Position 41 22 )
    ( TokSym "of" )
, L
    ( Position 41 25 )
    ( TokSym "other" )
, L
    ( Position 41 31 )
    ( TokSym "convenient" )
, L
    ( Position 41 42 )
    ( TokSym "operations" )
, L
    ( Position 41 53 )
    ( TokSym "like" )
, L
    ( Position 41 58 )
    ( TokOther "@" )
, L
    ( Position 41 59 )
    ( TokSym "copy" )
, L
    ( Position 41 63 )
    ( TokOther "@," )
, L
    ( Position 41 66 )
    ( TokSym "which" )
, L
    ( Position 41 72 )
    ( TokSym "permits" )
, L
    ( Position 41 80 )
    ( TokSym "one" )
, L
    ( Position 41 84 )
    ( TokSym "to" )
, L
    ( Position 42 1 )
    ( Indent 21 )
, L
    ( Position 42 22 )
    ( TokSym "apply" )
, L
    ( Position 42 28 )
    ( TokSym "two" )
, L
    ( Position 42 32 )
    ( TokSym "operations" )
, L
    ( Position 42 43 )
    ( TokSym "simultaneously" )
, L
    ( Position 42 58 )
    ( TokSym "over" )
, L
    ( Position 42 63 )
    ( TokSym "the" )
, L
    ( Position 42 67 )
    ( TokSym "length" )
, L
    ( Position 42 74 )
    ( TokSym "of" )
, L
    ( Position 42 77 )
    ( TokSym "the" )
, L
    ( Position 42 81 )
    ( TokSym "byte" )
, L
    ( Position 42 86 )
    ( TokSym "stream." )
, L
    ( Position 43 1 )
    ( Indent 21 )
, L
    ( Position 43 22 )
    ( TokSym "." )
, L
    ( Position 44 1 )
    ( Indent 21 )
, L
    ( Position 44 22 )
    ( TokSym "Something" )
, L
    ( Position 44 32 )
    ( TokSym "like" )
, L
    ( Position 44 37 )
    ( TokSym "this" )
, L
    ( Position 44 42 )
    ( TokSym "alteration" )
, L
    ( Position 44 53 )
    ( TokSym "of" )
, L
    ( Position 44 56 )
    ( TokSym "type" )
, L
    ( Position 44 61 )
    ( TokSym "is" )
, L
    ( Position 44 64 )
    ( TokSym "of" )
, L
    ( Position 44 67 )
    ( TokSym "course" )
, L
    ( Position 44 74 )
    ( TokSym "obvious" )
, L
    ( Position 44 82 )
    ( TokSym "and" )
, L
    ( Position 44 86 )
    ( TokSym "mechanical" )
, L
    ( Position 44 96 )
    ( TokOther "," )
, L
    ( Position 44 98 )
    ( TokSym "once" )
, L
    ( Position 44 103 )
    ( TokSym "the" )
, L
    ( Position 44 107 )
    ( TokSym "idea" )
, L
    ( Position 44 112 )
    ( TokSym "of" )
, L
    ( Position 45 1 )
    ( Indent 21 )
, L
    ( Position 45 22 )
    ( TokSym "an" )
, L
    ( Position 45 25 )
    ( TokSym "effectful" )
, L
    ( Position 45 35 )
    ( TokSym "bytestring" )
, L
    ( Position 45 46 )
    ( TokSym "type" )
, L
    ( Position 45 51 )
    ( TokSym "is" )
, L
    ( Position 45 54 )
    ( TokSym "contemplated" )
, L
    ( Position 45 67 )
    ( TokSym "and" )
, L
    ( Position 45 71 )
    ( TokSym "lazy" )
, L
    ( Position 45 76 )
    ( TokSym "io" )
, L
    ( Position 45 79 )
    ( TokSym "is" )
, L
    ( Position 45 82 )
    ( TokSym "rejected." )
, L
    ( Position 46 1 )
    ( Indent 21 )
, L
    ( Position 46 22 )
    ( TokSym "Indeed" )
, L
    ( Position 46 29 )
    ( TokSym "it" )
, L
    ( Position 46 32 )
    ( TokSym "seems" )
, L
    ( Position 46 38 )
    ( TokSym "that" )
, L
    ( Position 46 43 )
    ( TokSym "this" )
, L
    ( Position 46 48 )
    ( TokSym "is" )
, L
    ( Position 46 51 )
    ( TokSym "the" )
, L
    ( Position 46 55 )
    ( TokSym "proper" )
, L
    ( Position 46 62 )
    ( TokSym "expression" )
, L
    ( Position 46 73 )
    ( TokSym "of" )
, L
    ( Position 46 76 )
    ( TokSym "what" )
, L
    ( Position 46 81 )
    ( TokSym "was" )
, L
    ( Position 47 1 )
    ( Indent 21 )
, L
    ( Position 47 22 )
    ( TokSym "intended" )
, L
    ( Position 47 31 )
    ( TokSym "by" )
, L
    ( Position 47 34 )
    ( TokSym "lazy" )
, L
    ( Position 47 39 )
    ( TokSym "bytestrings" )
, L
    ( Position 47 51 )
    ( TokSym "to" )
, L
    ( Position 47 54 )
    ( TokSym "begin" )
, L
    ( Position 47 60 )
    ( TokSym "with." )
, L
    ( Position 47 66 )
    ( TokSym "The" )
, L
    ( Position 47 70 )
    ( TokSym "documentation" )
, L
    ( Position 47 83 )
    ( TokOther "," )
, L
    ( Position 47 85 )
    ( TokSym "after" )
, L
    ( Position 47 91 )
    ( TokSym "all" )
, L
    ( Position 47 94 )
    ( TokOther "," )
, L
    ( Position 48 1 )
    ( Indent 21 )
, L
    ( Position 48 22 )
    ( TokSym "reads" )
, L
    ( Position 49 1 )
    ( Indent 21 )
, L
    ( Position 49 22 )
    ( TokSym "." )
, L
    ( Position 50 1 )
    ( Indent 21 )
, L
    ( Position 50 22 )
    ( TokOther "*" )
, L
    ( Position 50 24 )
    ( TokOther "\" )
, L
    ( Position 50 96 )
    ( LexicalError "
                           unbounded streams of data without requiring the entire sequence to be 
                           resident in memory. To take advantage of this you have to write your 
                           functions in a lazy streaming style, e.g. classic pipeline composition. 
                           The default I/O chunk size is 32k, which should be good in most circumstances.\"
                         .
                         ... which is very much the idea of this library: the default chunk size for
                         'hGetContents' and the like follows @Data.ByteString.Lazy@; operations
                         like @lines@ and @append@ and so on are tailored not to increase chunk size. 
                         .
                         The present library is thus if you like nothing but /lazy bytestring done right/. 
                         The authors of @Data.ByteString.Lazy@ must have supposed that 
                         the directly monadic formulation of such their type 
                         would necessarily make things slower. This appears to be a prejudice. 
                         For example, passing a large file of short lines through
                         this benchmark transformation
                         .
                         > Lazy.unlines      . map    (\bs -> "!"       <> Lazy.drop 5 bs)       . Lazy.lines
                         > Streaming.unlines . S.maps (\bs -> chunk "!" >> Streaming.drop 5 bs)  . Streaming.lines
                         .
                         gives pleasing results like these
                         .
                         > $  time ./benchlines lazy >> /dev/null
                         > real\x90m2.097s
                         > ...
                         > $  time ./benchlines streaming >> /dev/null
                         > real\x90m1.930s
                         .
                         For a more sophisticated operation like
                         .
                         > Lazy.intercalate "!\n"      . Lazy.lines
                         > Streaming.intercalate "!\n" . Streaming.lines
                         .
                         we get results like these:
                         .
                         > time ./benchlines lazy >> /dev/null
                         > real\x90m1.250s
                         > ...
                         > time ./benchlines streaming >> /dev/null
                         > real\x90m1.531s
                         . 
                         The pipes environment would express the latter as 
                         .
                         > Pipes.intercalates (Pipes.yield "!\n") . view Pipes.lines 
                         .
                         meaning almost exactly what we mean above, but with results like this
                         .
                         >  time ./benchlines pipes >> /dev/null
                         >  real\x90m6.353s
                         .
                         The difference, however, /is emphatically not intrinsic to pipes/; 
                         it is just that 
                         this library depends the @streaming@ library, which is used in place 
                         of @free@ to express the 
                         <http://www.haskellforall.com/2013/09/perfect-streaming-using-pipes-bytestring.html "perfectly streaming">
                         splitting and iterated division or "chunking" of byte streams. 
                         .
                         These concepts belong to the ABCs of streaming; @lines@ is just
                         a textbook example, and it is of course handled correctly in 
                         @Data.ByteString.Lazy@.
                         But the concepts are /catastrophically mishandled/ in /all/ streaming io libraries 
                         other than pipes. Already the @enumerator@ and @iteratee@ libraries
                         were completely defeated by @lines@: 
                         see e.g. the @enumerator@ implementation of 
                         <http://hackage.haskell.org/package/enumerator-0.4.20/docs/Data-Enumerator-Text.html#v:splitWhen splitWhen and lines>.
                         This will concatenate strict text forever, if that's what is coming
                         in.  The rot spreads from there. 
                         It is just a fact that in all of the general streaming io 
                         frameworks other than pipes,it becomes torture to express elementary distinctions 
                         that are transparently and immediately contained in any 
                         idea of streaming whatsoever. 
                         .
                         Though, as was said above, we barely alter signatures in @Data.ByteString.Lazy@ 
                         more than is required by the types, the point of view that emerges 
                         is very much that of
                         @pipes-bytestring@ and @pipes-group@. In particular
                         we have these correspondences:
                         .
                         > Lazy.splitAt      :: Int -> ByteString              -> (ByteString, ByteString)
                         > Streaming.splitAt :: Int -> ByteString m r          -> ByteString m (ByteString m r)
                         > Pipes.splitAt     :: Int -> Producer ByteString m r -> Producer ByteString m (Producer ByteString m r)
                         .
                         and
                         .
                         > Lazy.lines      :: ByteString -> [ByteString]
                         > Streaming.lines :: ByteString m r -> Stream (ByteString m) m r
                         > Pipes.lines     :: Producer ByteString m r -> FreeT (Producer ByteString m) m r
                         .
                         where the @Stream@ type expresses the sequencing of @ByteString m _@ layers
                         with the usual \'free monad\' sequencing. 
                         .
                         Interoperation with @pipes-bytestring@ uses this isomorphism:
                         . 
                         > Streaming.ByteString.unfoldrChunks Pipes.next :: Monad m => Producer ByteString m r -> ByteString m r
                         > Pipes.unfoldr Streaming.ByteString.nextChunk  :: Monad m => ByteString m r -> Producer ByteString m r
                         .
                         Interoperation with @io-streams@ is thus:
                         .
                         > IOStreams.unfoldM Streaming.ByteString.unconsChunk :: ByteString IO () -> IO (InputStream ByteString)
                         > Streaming.ByteString.reread IOStreams.read         :: InputStream ByteString -> ByteString IO ()
                         .
                         and similarly for other rational streaming io libraries. 
                         .
                         Problems and questions about the library can be put as issues on 
                         the github page, or mailed to the 
                         <https://groups.google.com/forum/#!forum/haskell-pipes pipes list>.
                         .
                         A tutorial module is in the works; 
                         <https://gist.github.com/michaelt/6c6843e6dd8030e95d58 here>,
                         for the moment, 
                         is a sequence of simplified implementations of familiar shell utilities.  
                         The same programs are implemented at the end of the excellent
                           <http://hackage.haskell.org/package/io-streams-1.3.2.0/docs/System-IO-Streams-Tutorial.html io-streams tutorial>.
                           It is generally much simpler; in some case simpler than what
                           you would write with lazy bytestrings. 
                           <https://gist.github.com/michaelt/2dcea1ba32562c091357 Here>
                           is a simple GET request that returns a byte stream.
                           .

                        
    license:             BSD3
    license-file:        LICENSE
    author:              michaelt
    maintainer:          andrew.thaddeus@gmail.com, what_is_it_to_do_anything@yahoo.com
    -- copyright:           
    category:            Data, Pipes, Streaming
    build-type:          Simple
    extra-source-files:  README.md
    cabal-version:       >=1.10
    stability:           Experimental
    homepage:            https://github.com/haskell-streaming/streaming-bytestring
    bug-reports:         https://github.com/haskell-streaming/streaming-bytestring/issues
    source-repository head
        type: git
        location: https://github.com/michaelt/streaming-bytestring


    library
      exposed-modules:     Data.ByteString.Streaming
                           , Data.ByteString.Streaming.Char8
                           , Data.ByteString.Streaming.Internal

                           
      -- other-modules:       
      other-extensions:    CPP, BangPatterns, ForeignFunctionInterface, DeriveDataTypeable, Unsafe
      build-depends:       base  <4.11
                         , deepseq 
                         , bytestring
                         , mtl >=2.1 && <2.3
                         , mmorph >=1.0 && <1.2
                         , transformers >=0.3 && <0.6
                         , transformers-base
                         , streaming >=  0.1.4.0 && < 0.3
                         , resourcet
                         , exceptions
      if impl(ghc < 7.8) 
        build-depends:
                         bytestring < 0.10.4.0
                         , bytestring-builder
      else               
        build-depends:     
                         bytestring >= 0.10.4                     


      default-language:    Haskell2010
      ghc-options: -O2
      
    test-suite test
      default-language:
        Haskell2010
      type:
        exitcode-stdio-1.0
      hs-source-dirs:
        tests
      main-is:
        test.hs
      build-depends:
          base >= 4 && < 5
        , transformers
        , tasty >= 0.11.0.4
        , tasty-smallcheck >= 0.8.1
        , smallcheck >= 1.1.1
        , streaming
        , streaming-bytestring
        , bytestring
    " )
, L
    ( Position 50 25 ) EOF
]
