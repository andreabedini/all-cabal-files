[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 22 )
    ( TokSym "streaming-bytestring" )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 22 )
    ( TokSym "0.1.0.4" )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "synopsis" )
, L
    ( Position 3 9 ) Colon
, L
    ( Position 3 22 )
    ( TokSym "effectful" )
, L
    ( Position 3 32 )
    ( TokSym "byte" )
, L
    ( Position 3 37 )
    ( TokSym "steams" )
, L
    ( Position 3 43 )
    ( TokOther "," )
, L
    ( Position 3 45 )
    ( TokSym "or" )
, L
    ( Position 3 47 ) Colon
, L
    ( Position 3 49 )
    ( TokSym "lazy" )
, L
    ( Position 3 54 )
    ( TokSym "bytestring" )
, L
    ( Position 3 65 )
    ( TokSym "done" )
, L
    ( Position 3 70 )
    ( TokSym "right" )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "description" )
, L
    ( Position 4 12 ) Colon
, L
    ( Position 4 22 )
    ( TokSym "This" )
, L
    ( Position 4 27 )
    ( TokSym "is" )
, L
    ( Position 4 30 )
    ( TokSym "an" )
, L
    ( Position 4 33 )
    ( TokSym "implementation" )
, L
    ( Position 4 48 )
    ( TokSym "of" )
, L
    ( Position 4 51 )
    ( TokSym "effectful" )
, L
    ( Position 4 60 )
    ( TokOther "," )
, L
    ( Position 4 62 )
    ( TokSym "memory-constrained" )
, L
    ( Position 5 1 )
    ( Indent 21 )
, L
    ( Position 5 22 )
    ( TokSym "bytestrings" )
, L
    ( Position 5 34 )
    ( TokOther "(" )
, L
    ( Position 5 35 )
    ( TokSym "byte" )
, L
    ( Position 5 40 )
    ( TokSym "streams" )
, L
    ( Position 5 47 )
    ( TokOther ")" )
, L
    ( Position 5 49 )
    ( TokSym "and" )
, L
    ( Position 5 53 )
    ( TokSym "functions" )
, L
    ( Position 5 63 )
    ( TokSym "for" )
, L
    ( Position 5 67 )
    ( TokSym "streaming" )
, L
    ( Position 6 1 )
    ( Indent 21 )
, L
    ( Position 6 22 )
    ( TokSym "bytestring" )
, L
    ( Position 6 33 )
    ( TokSym "manipulation" )
, L
    ( Position 6 45 )
    ( TokOther "," )
, L
    ( Position 6 47 )
    ( TokSym "adequate" )
, L
    ( Position 6 56 )
    ( TokSym "for" )
, L
    ( Position 6 60 )
    ( TokSym "non-lazy-io." )
, L
    ( Position 7 1 )
    ( Indent 21 )
, L
    ( Position 7 22 )
    ( TokSym "." )
, L
    ( Position 8 1 )
    ( Indent 21 )
, L
    ( Position 8 22 )
    ( TokSym "Interoperation" )
, L
    ( Position 8 37 )
    ( TokSym "with" )
, L
    ( Position 8 42 )
    ( TokOther "@" )
, L
    ( Position 8 43 )
    ( TokSym "pipes" )
, L
    ( Position 8 48 )
    ( TokOther "@" )
, L
    ( Position 8 50 )
    ( TokSym "uses" )
, L
    ( Position 8 55 )
    ( TokSym "this" )
, L
    ( Position 8 60 )
    ( TokSym "isomorphism" )
, L
    ( Position 8 71 ) Colon
, L
    ( Position 9 1 )
    ( Indent 21 )
, L
    ( Position 9 22 )
    ( TokSym "." )
, L
    ( Position 10 1 )
    ( Indent 21 )
, L
    ( Position 10 22 )
    ( TokOther ">" )
, L
    ( Position 10 24 )
    ( TokSym "Streaming.unfoldrChunks" )
, L
    ( Position 10 48 )
    ( TokSym "Pipes.next" )
, L
    ( Position 10 59 ) Colon
, L
    ( Position 10 60 ) Colon
, L
    ( Position 10 62 )
    ( TokSym "Monad" )
, L
    ( Position 10 68 )
    ( TokSym "m" )
, L
    ( Position 10 70 )
    ( TokOther "=>" )
, L
    ( Position 10 73 )
    ( TokSym "Producer" )
, L
    ( Position 10 82 )
    ( TokSym "ByteString" )
, L
    ( Position 10 93 )
    ( TokSym "m" )
, L
    ( Position 10 95 )
    ( TokSym "r" )
, L
    ( Position 10 97 )
    ( TokOther "->" )
, L
    ( Position 10 100 )
    ( TokSym "ByteString" )
, L
    ( Position 10 111 )
    ( TokSym "m" )
, L
    ( Position 10 113 )
    ( TokSym "r" )
, L
    ( Position 11 1 )
    ( Indent 21 )
, L
    ( Position 11 22 )
    ( TokOther ">" )
, L
    ( Position 11 24 )
    ( TokSym "Pipes.unfoldr" )
, L
    ( Position 11 38 )
    ( TokSym "Streaming.nextChunk" )
, L
    ( Position 11 59 ) Colon
, L
    ( Position 11 60 ) Colon
, L
    ( Position 11 62 )
    ( TokSym "Monad" )
, L
    ( Position 11 68 )
    ( TokSym "m" )
, L
    ( Position 11 70 )
    ( TokOther "=>" )
, L
    ( Position 11 73 )
    ( TokSym "ByteString" )
, L
    ( Position 11 84 )
    ( TokSym "m" )
, L
    ( Position 11 86 )
    ( TokSym "r" )
, L
    ( Position 11 88 )
    ( TokOther "->" )
, L
    ( Position 11 91 )
    ( TokSym "Producer" )
, L
    ( Position 11 100 )
    ( TokSym "ByteString" )
, L
    ( Position 11 111 )
    ( TokSym "m" )
, L
    ( Position 11 113 )
    ( TokSym "r" )
, L
    ( Position 12 1 )
    ( Indent 21 )
, L
    ( Position 12 22 )
    ( TokSym "." )
, L
    ( Position 13 1 )
    ( Indent 21 )
, L
    ( Position 13 22 )
    ( TokSym "Interoperation" )
, L
    ( Position 13 37 )
    ( TokSym "with" )
, L
    ( Position 13 42 )
    ( TokOther "@" )
, L
    ( Position 13 43 )
    ( TokSym "io-streams" )
, L
    ( Position 13 53 )
    ( TokOther "@" )
, L
    ( Position 13 55 )
    ( TokSym "is" )
, L
    ( Position 13 58 )
    ( TokSym "thus" )
, L
    ( Position 13 62 ) Colon
, L
    ( Position 14 1 )
    ( Indent 21 )
, L
    ( Position 14 22 )
    ( TokSym "." )
, L
    ( Position 15 1 )
    ( Indent 21 )
, L
    ( Position 15 22 )
    ( TokOther ">" )
, L
    ( Position 15 24 )
    ( TokSym "IOStreams.unfoldM" )
, L
    ( Position 15 42 )
    ( TokSym "Streaming.unconsChunk" )
, L
    ( Position 15 64 ) Colon
, L
    ( Position 15 65 ) Colon
, L
    ( Position 15 67 )
    ( TokSym "ByteString" )
, L
    ( Position 15 78 )
    ( TokSym "IO" )
, L
    ( Position 15 81 )
    ( TokOther "(" )
, L
    ( Position 15 82 )
    ( TokOther ")" )
, L
    ( Position 15 84 )
    ( TokOther "->" )
, L
    ( Position 15 87 )
    ( TokSym "IO" )
, L
    ( Position 15 90 )
    ( TokOther "(" )
, L
    ( Position 15 91 )
    ( TokSym "InputStream" )
, L
    ( Position 15 103 )
    ( TokSym "ByteString" )
, L
    ( Position 15 113 )
    ( TokOther ")" )
, L
    ( Position 16 1 )
    ( Indent 21 )
, L
    ( Position 16 22 )
    ( TokOther ">" )
, L
    ( Position 16 24 )
    ( TokSym "Streaming.reread" )
, L
    ( Position 16 41 )
    ( TokSym "IOStreams.read" )
, L
    ( Position 16 64 ) Colon
, L
    ( Position 16 65 ) Colon
, L
    ( Position 16 67 )
    ( TokSym "InputStream" )
, L
    ( Position 16 79 )
    ( TokSym "ByteString" )
, L
    ( Position 16 90 )
    ( TokOther "->" )
, L
    ( Position 16 93 )
    ( TokSym "ByteString" )
, L
    ( Position 16 104 )
    ( TokSym "IO" )
, L
    ( Position 16 107 )
    ( TokOther "(" )
, L
    ( Position 16 108 )
    ( TokOther ")" )
, L
    ( Position 17 1 )
    ( Indent 21 )
, L
    ( Position 17 22 )
    ( TokSym "." )
, L
    ( Position 18 1 )
    ( Indent 21 )
, L
    ( Position 18 22 )
    ( TokSym "and" )
, L
    ( Position 18 26 )
    ( TokSym "similarly" )
, L
    ( Position 18 36 )
    ( TokSym "for" )
, L
    ( Position 18 40 )
    ( TokSym "other" )
, L
    ( Position 18 46 )
    ( TokSym "rational" )
, L
    ( Position 18 55 )
    ( TokSym "streaming" )
, L
    ( Position 18 65 )
    ( TokSym "io" )
, L
    ( Position 18 68 )
    ( TokSym "libraries." )
, L
    ( Position 19 1 )
    ( Indent 21 )
, L
    ( Position 19 22 )
    ( TokSym "." )
, L
    ( Position 20 1 )
    ( Indent 21 )
, L
    ( Position 20 22 )
    ( TokSym "A" )
, L
    ( Position 20 24 )
    ( TokSym "tutorial" )
, L
    ( Position 20 33 )
    ( TokSym "module" )
, L
    ( Position 20 40 )
    ( TokSym "is" )
, L
    ( Position 20 43 )
    ( TokSym "in" )
, L
    ( Position 20 46 )
    ( TokSym "the" )
, L
    ( Position 20 50 )
    ( TokSym "works;" )
, L
    ( Position 21 1 )
    ( Indent 21 )
, L
    ( Position 21 22 )
    ( TokOther "<" )
, L
    ( Position 21 23 )
    ( TokSym "https" )
, L
    ( Position 21 28 ) Colon
, L
    ( Position 21 29 )
    ( TokOther "//" )
, L
    ( Position 21 31 )
    ( TokSym "gist.github.com" )
, L
    ( Position 21 46 )
    ( TokOther "/" )
, L
    ( Position 21 47 )
    ( TokSym "michaelt" )
, L
    ( Position 21 55 )
    ( TokOther "/" )
, L
    ( Position 21 56 )
    ( TokSym "6c6843e6dd8030e95d58" )
, L
    ( Position 21 77 )
    ( TokSym "here" )
, L
    ( Position 21 81 )
    ( TokOther ">" )
, L
    ( Position 22 1 )
    ( Indent 21 )
, L
    ( Position 22 22 )
    ( TokSym "is" )
, L
    ( Position 22 25 )
    ( TokSym "a" )
, L
    ( Position 22 27 )
    ( TokSym "sequence" )
, L
    ( Position 22 36 )
    ( TokSym "of" )
, L
    ( Position 22 39 )
    ( TokSym "simplified" )
, L
    ( Position 22 50 )
    ( TokSym "implementations" )
, L
    ( Position 22 66 )
    ( TokSym "of" )
, L
    ( Position 22 69 )
    ( TokSym "familiar" )
, L
    ( Position 22 78 )
    ( TokSym "shell" )
, L
    ( Position 22 84 )
    ( TokSym "utilities." )
, L
    ( Position 23 1 )
    ( Indent 21 )
, L
    ( Position 23 22 )
    ( TokSym "It" )
, L
    ( Position 23 25 )
    ( TokSym "closely" )
, L
    ( Position 23 33 )
    ( TokSym "follows" )
, L
    ( Position 23 41 )
    ( TokSym "those" )
, L
    ( Position 23 47 )
    ( TokSym "at" )
, L
    ( Position 23 50 )
    ( TokSym "the" )
, L
    ( Position 23 54 )
    ( TokSym "end" )
, L
    ( Position 23 58 )
    ( TokSym "of" )
, L
    ( Position 23 61 )
    ( TokSym "the" )
, L
    ( Position 24 1 )
    ( Indent 21 )
, L
    ( Position 24 22 )
    ( TokOther "<" )
, L
    ( Position 24 23 )
    ( TokSym "http" )
, L
    ( Position 24 27 ) Colon
, L
    ( Position 24 28 )
    ( TokOther "//" )
, L
    ( Position 24 30 )
    ( TokSym "hackage.haskell.org" )
, L
    ( Position 24 49 )
    ( TokOther "/" )
, L
    ( Position 24 50 )
    ( TokSym "package" )
, L
    ( Position 24 57 )
    ( TokOther "/" )
, L
    ( Position 24 58 )
    ( TokSym "io-streams-1.3.2.0" )
, L
    ( Position 24 76 )
    ( TokOther "/" )
, L
    ( Position 24 77 )
    ( TokSym "docs" )
, L
    ( Position 24 81 )
    ( TokOther "/" )
, L
    ( Position 24 82 )
    ( TokSym "System-IO-Streams-Tutorial.html" )
, L
    ( Position 24 114 )
    ( TokSym "io-streams" )
, L
    ( Position 24 125 )
    ( TokSym "tutorial" )
, L
    ( Position 24 133 )
    ( TokOther ">." )
, L
    ( Position 25 1 )
    ( Indent 21 )
, L
    ( Position 25 22 )
    ( TokSym "It" )
, L
    ( Position 25 25 )
    ( TokSym "is" )
, L
    ( Position 25 28 )
    ( TokSym "generally" )
, L
    ( Position 25 38 )
    ( TokSym "much" )
, L
    ( Position 25 43 )
    ( TokSym "simpler;" )
, L
    ( Position 25 52 )
    ( TokSym "in" )
, L
    ( Position 25 55 )
    ( TokSym "some" )
, L
    ( Position 25 60 )
    ( TokSym "case" )
, L
    ( Position 25 65 )
    ( TokSym "simpler" )
, L
    ( Position 25 73 )
    ( TokSym "than" )
, L
    ( Position 25 78 )
    ( TokSym "what" )
, L
    ( Position 26 1 )
    ( Indent 21 )
, L
    ( Position 26 22 )
    ( TokSym "you" )
, L
    ( Position 26 26 )
    ( TokSym "would" )
, L
    ( Position 26 32 )
    ( TokSym "write" )
, L
    ( Position 26 38 )
    ( TokSym "with" )
, L
    ( Position 26 43 )
    ( TokSym "lazy" )
, L
    ( Position 26 48 )
    ( TokSym "bytestrings." )
, L
    ( Position 27 1 )
    ( Indent 21 )
, L
    ( Position 27 22 )
    ( TokOther "<" )
, L
    ( Position 27 23 )
    ( TokSym "https" )
, L
    ( Position 27 28 ) Colon
, L
    ( Position 27 29 )
    ( TokOther "//" )
, L
    ( Position 27 31 )
    ( TokSym "gist.github.com" )
, L
    ( Position 27 46 )
    ( TokOther "/" )
, L
    ( Position 27 47 )
    ( TokSym "michaelt" )
, L
    ( Position 27 55 )
    ( TokOther "/" )
, L
    ( Position 27 56 )
    ( TokSym "2dcea1ba32562c091357" )
, L
    ( Position 27 77 )
    ( TokSym "Here" )
, L
    ( Position 27 81 )
    ( TokOther ">" )
, L
    ( Position 28 1 )
    ( Indent 21 )
, L
    ( Position 28 22 )
    ( TokSym "is" )
, L
    ( Position 28 25 )
    ( TokSym "a" )
, L
    ( Position 28 27 )
    ( TokSym "simple" )
, L
    ( Position 28 34 )
    ( TokSym "GET" )
, L
    ( Position 28 38 )
    ( TokSym "request" )
, L
    ( Position 28 46 )
    ( TokSym "that" )
, L
    ( Position 28 51 )
    ( TokSym "returns" )
, L
    ( Position 28 59 )
    ( TokSym "a" )
, L
    ( Position 28 61 )
    ( TokSym "byte" )
, L
    ( Position 28 66 )
    ( TokSym "stream." )
, L
    ( Position 29 1 )
    ( Indent 21 )
, L
    ( Position 29 22 )
    ( TokSym "." )
, L
    ( Position 30 1 )
    ( Indent 21 )
, L
    ( Position 30 22 )
    ( TokSym "The" )
, L
    ( Position 30 26 )
    ( TokSym "implementation" )
, L
    ( Position 30 41 )
    ( TokSym "follows" )
, L
    ( Position 30 49 )
    ( TokSym "the" )
, L
    ( Position 31 1 )
    ( Indent 21 )
, L
    ( Position 31 22 )
    ( TokSym "details" )
, L
    ( Position 31 30 )
    ( TokSym "of" )
, L
    ( Position 31 33 )
    ( TokOther "@" )
, L
    ( Position 31 34 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 31 54 )
    ( TokOther "@" )
, L
    ( Position 31 56 )
    ( TokSym "and" )
, L
    ( Position 31 60 )
    ( TokOther "@" )
, L
    ( Position 31 61 )
    ( TokSym "Data.ByteString.Lazy.Char8" )
, L
    ( Position 31 87 )
    ( TokOther "@" )
, L
    ( Position 32 1 )
    ( Indent 21 )
, L
    ( Position 32 22 )
    ( TokSym "as" )
, L
    ( Position 32 25 )
    ( TokSym "far" )
, L
    ( Position 32 29 )
    ( TokSym "as" )
, L
    ( Position 32 32 )
    ( TokSym "is" )
, L
    ( Position 32 35 )
    ( TokSym "possible" )
, L
    ( Position 32 43 )
    ( TokOther "," )
, L
    ( Position 32 45 )
    ( TokSym "replacing" )
, L
    ( Position 32 55 )
    ( TokSym "the" )
, L
    ( Position 32 59 )
    ( TokSym "lazy" )
, L
    ( Position 32 64 )
    ( TokSym "bytestring" )
, L
    ( Position 32 75 )
    ( TokSym "type" )
, L
    ( Position 32 79 ) Colon
, L
    ( Position 33 1 )
    ( Indent 21 )
, L
    ( Position 33 22 )
    ( TokSym "." )
, L
    ( Position 34 1 )
    ( Indent 21 )
, L
    ( Position 34 22 )
    ( TokOther ">" )
, L
    ( Position 34 24 )
    ( TokSym "data" )
, L
    ( Position 34 29 )
    ( TokSym "ByteString" )
, L
    ( Position 34 44 )
    ( TokOther "=" )
, L
    ( Position 34 46 )
    ( TokSym "Empty" )
, L
    ( Position 34 54 )
    ( TokOther "|" )
, L
    ( Position 34 56 )
    ( TokSym "Chunk" )
, L
    ( Position 34 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 34 80 )
    ( TokSym "ByteString" )
, L
    ( Position 35 1 )
    ( Indent 21 )
, L
    ( Position 35 22 )
    ( TokSym "." )
, L
    ( Position 36 1 )
    ( Indent 21 )
, L
    ( Position 36 22 )
    ( TokSym "with" )
, L
    ( Position 36 27 )
    ( TokSym "the" )
, L
    ( Position 36 31 )
    ( TokOther "/" )
, L
    ( Position 36 32 )
    ( TokSym "minimal" )
, L
    ( Position 36 39 )
    ( TokOther "/" )
, L
    ( Position 36 41 )
    ( TokSym "effectful" )
, L
    ( Position 36 51 )
    ( TokSym "variant" )
, L
    ( Position 36 58 ) Colon
, L
    ( Position 37 1 )
    ( Indent 21 )
, L
    ( Position 37 22 )
    ( TokSym "." )
, L
    ( Position 38 1 )
    ( Indent 21 )
, L
    ( Position 38 22 )
    ( TokOther ">" )
, L
    ( Position 38 24 )
    ( TokSym "data" )
, L
    ( Position 38 29 )
    ( TokSym "ByteString" )
, L
    ( Position 38 40 )
    ( TokSym "m" )
, L
    ( Position 38 42 )
    ( TokSym "r" )
, L
    ( Position 38 44 )
    ( TokOther "=" )
, L
    ( Position 38 46 )
    ( TokSym "Empty" )
, L
    ( Position 38 52 )
    ( TokSym "r" )
, L
    ( Position 38 54 )
    ( TokOther "|" )
, L
    ( Position 38 56 )
    ( TokSym "Chunk" )
, L
    ( Position 38 62 )
    ( TokSym "Strict.ByteString" )
, L
    ( Position 38 80 )
    ( TokOther "(" )
, L
    ( Position 38 81 )
    ( TokSym "ByteString" )
, L
    ( Position 38 92 )
    ( TokSym "m" )
, L
    ( Position 38 94 )
    ( TokSym "r" )
, L
    ( Position 38 95 )
    ( TokOther ")" )
, L
    ( Position 38 97 )
    ( TokOther "|" )
, L
    ( Position 38 99 )
    ( TokSym "Go" )
, L
    ( Position 38 102 )
    ( TokOther "(" )
, L
    ( Position 38 103 )
    ( TokSym "m" )
, L
    ( Position 38 105 )
    ( TokOther "(" )
, L
    ( Position 38 106 )
    ( TokSym "ByteString" )
, L
    ( Position 38 117 )
    ( TokSym "m" )
, L
    ( Position 38 119 )
    ( TokSym "r" )
, L
    ( Position 38 120 )
    ( TokOther ")" )
, L
    ( Position 38 121 )
    ( TokOther ")" )
, L
    ( Position 39 1 )
    ( Indent 21 )
, L
    ( Position 39 22 )
    ( TokSym "." )
, L
    ( Position 40 1 )
    ( Indent 21 )
, L
    ( Position 40 22 )
    ( TokOther "(" )
, L
    ( Position 40 23 )
    ( TokSym "Constructors" )
, L
    ( Position 40 36 )
    ( TokSym "are" )
, L
    ( Position 40 40 )
    ( TokSym "necessarily" )
, L
    ( Position 40 52 )
    ( TokSym "hidden" )
, L
    ( Position 40 59 )
    ( TokSym "in" )
, L
    ( Position 40 62 )
    ( TokSym "internal" )
, L
    ( Position 40 71 )
    ( TokSym "modules" )
, L
    ( Position 40 79 )
    ( TokSym "in" )
, L
    ( Position 40 82 )
    ( TokSym "both" )
, L
    ( Position 40 87 )
    ( TokSym "cases." )
, L
    ( Position 40 93 )
    ( TokOther ")" )
, L
    ( Position 41 1 )
    ( Indent 21 )
, L
    ( Position 41 22 )
    ( TokSym "." )
, L
    ( Position 42 1 )
    ( Indent 21 )
, L
    ( Position 42 22 )
    ( TokSym "That's" )
, L
    ( Position 42 29 )
    ( TokSym "it." )
, L
    ( Position 42 33 )
    ( TokSym "As" )
, L
    ( Position 42 36 )
    ( TokSym "a" )
, L
    ( Position 42 38 )
    ( TokSym "lazy" )
, L
    ( Position 42 43 )
    ( TokSym "bytestring" )
, L
    ( Position 42 54 )
    ( TokSym "is" )
, L
    ( Position 42 57 )
    ( TokSym "implemented" )
, L
    ( Position 42 69 )
    ( TokSym "internally" )
, L
    ( Position 43 1 )
    ( Indent 21 )
, L
    ( Position 43 22 )
    ( TokSym "by" )
, L
    ( Position 43 25 )
    ( TokSym "a" )
, L
    ( Position 43 27 )
    ( TokSym "sort" )
, L
    ( Position 43 32 )
    ( TokSym "of" )
, L
    ( Position 43 35 )
    ( TokSym "list" )
, L
    ( Position 43 40 )
    ( TokSym "of" )
, L
    ( Position 43 43 )
    ( TokSym "strict" )
, L
    ( Position 43 50 )
    ( TokSym "bytestring" )
, L
    ( Position 43 61 )
    ( TokSym "chunks" )
, L
    ( Position 43 67 )
    ( TokOther "," )
, L
    ( Position 43 69 )
    ( TokSym "a" )
, L
    ( Position 43 71 )
    ( TokSym "streaming" )
, L
    ( Position 43 81 )
    ( TokSym "bytestring" )
, L
    ( Position 43 92 )
    ( TokSym "is" )
, L
    ( Position 44 1 )
    ( Indent 21 )
, L
    ( Position 44 22 )
    ( TokSym "simply" )
, L
    ( Position 44 29 )
    ( TokSym "implemented" )
, L
    ( Position 44 41 )
    ( TokSym "as" )
, L
    ( Position 44 44 )
    ( TokSym "a" )
, L
    ( Position 44 46 )
    ( TokOther "/" )
, L
    ( Position 44 47 )
    ( TokSym "producer" )
, L
    ( Position 44 55 )
    ( TokOther "/" )
, L
    ( Position 44 57 )
    ( TokSym "or" )
, L
    ( Position 44 60 )
    ( TokOther "/" )
, L
    ( Position 44 61 )
    ( TokSym "generator" )
, L
    ( Position 44 70 )
    ( TokOther "/" )
, L
    ( Position 44 72 )
    ( TokSym "of" )
, L
    ( Position 44 75 )
    ( TokSym "strict" )
, L
    ( Position 44 82 )
    ( TokSym "bytestring" )
, L
    ( Position 44 93 )
    ( TokSym "chunks." )
, L
    ( Position 45 1 )
    ( Indent 21 )
, L
    ( Position 45 22 )
    ( TokSym "Most" )
, L
    ( Position 45 27 )
    ( TokSym "operations" )
, L
    ( Position 45 38 )
    ( TokSym "are" )
, L
    ( Position 45 42 )
    ( TokSym "defined" )
, L
    ( Position 45 50 )
    ( TokSym "by" )
, L
    ( Position 45 53 )
    ( TokSym "simply" )
, L
    ( Position 45 60 )
    ( TokSym "adding" )
, L
    ( Position 45 67 )
    ( TokSym "a" )
, L
    ( Position 45 69 )
    ( TokSym "line" )
, L
    ( Position 45 74 )
    ( TokSym "to" )
, L
    ( Position 45 77 )
    ( TokSym "what" )
, L
    ( Position 45 82 )
    ( TokSym "we" )
, L
    ( Position 45 85 )
    ( TokSym "find" )
, L
    ( Position 45 90 )
    ( TokSym "in" )
, L
    ( Position 46 1 )
    ( Indent 21 )
, L
    ( Position 46 22 )
    ( TokOther "@" )
, L
    ( Position 46 23 )
    ( TokSym "Data.ByteString.Lazy" )
, L
    ( Position 46 43 )
    ( TokOther "@." )
, L
    ( Position 47 1 )
    ( Indent 21 )
, L
    ( Position 47 22 )
    ( TokSym "." )
, L
    ( Position 48 1 )
    ( Indent 21 )
, L
    ( Position 48 22 )
    ( TokSym "Something" )
, L
    ( Position 48 32 )
    ( TokSym "like" )
, L
    ( Position 48 37 )
    ( TokSym "this" )
, L
    ( Position 48 42 )
    ( TokSym "alteration" )
, L
    ( Position 48 53 )
    ( TokSym "of" )
, L
    ( Position 48 56 )
    ( TokSym "type" )
, L
    ( Position 48 61 )
    ( TokSym "is" )
, L
    ( Position 48 64 )
    ( TokSym "of" )
, L
    ( Position 48 67 )
    ( TokSym "course" )
, L
    ( Position 48 74 )
    ( TokSym "obvious" )
, L
    ( Position 48 82 )
    ( TokSym "and" )
, L
    ( Position 48 86 )
    ( TokSym "mechanical" )
, L
    ( Position 48 96 )
    ( TokOther "," )
, L
    ( Position 48 98 )
    ( TokSym "once" )
, L
    ( Position 48 103 )
    ( TokSym "the" )
, L
    ( Position 48 107 )
    ( TokSym "idea" )
, L
    ( Position 48 112 )
    ( TokSym "of" )
, L
    ( Position 49 1 )
    ( Indent 21 )
, L
    ( Position 49 22 )
    ( TokSym "an" )
, L
    ( Position 49 25 )
    ( TokSym "effectful" )
, L
    ( Position 49 35 )
    ( TokSym "bytestring" )
, L
    ( Position 49 46 )
    ( TokSym "type" )
, L
    ( Position 49 51 )
    ( TokSym "is" )
, L
    ( Position 49 54 )
    ( TokSym "contemplated" )
, L
    ( Position 49 67 )
    ( TokSym "and" )
, L
    ( Position 49 71 )
    ( TokSym "lazy" )
, L
    ( Position 49 76 )
    ( TokSym "io" )
, L
    ( Position 49 79 )
    ( TokSym "is" )
, L
    ( Position 49 82 )
    ( TokSym "rejected." )
, L
    ( Position 50 1 )
    ( Indent 21 )
, L
    ( Position 50 22 )
    ( TokSym "Indeed" )
, L
    ( Position 50 29 )
    ( TokSym "it" )
, L
    ( Position 50 32 )
    ( TokSym "seems" )
, L
    ( Position 50 38 )
    ( TokSym "that" )
, L
    ( Position 50 43 )
    ( TokSym "this" )
, L
    ( Position 50 48 )
    ( TokSym "is" )
, L
    ( Position 50 51 )
    ( TokSym "the" )
, L
    ( Position 50 55 )
    ( TokSym "proper" )
, L
    ( Position 50 62 )
    ( TokSym "expression" )
, L
    ( Position 50 73 )
    ( TokSym "of" )
, L
    ( Position 50 76 )
    ( TokSym "what" )
, L
    ( Position 50 81 )
    ( TokSym "was" )
, L
    ( Position 51 1 )
    ( Indent 21 )
, L
    ( Position 51 22 )
    ( TokSym "intended" )
, L
    ( Position 51 31 )
    ( TokSym "by" )
, L
    ( Position 51 34 )
    ( TokSym "lazy" )
, L
    ( Position 51 39 )
    ( TokSym "bytestrings" )
, L
    ( Position 51 51 )
    ( TokSym "to" )
, L
    ( Position 51 54 )
    ( TokSym "begin" )
, L
    ( Position 51 60 )
    ( TokSym "with." )
, L
    ( Position 51 66 )
    ( TokSym "The" )
, L
    ( Position 51 70 )
    ( TokSym "documentation" )
, L
    ( Position 51 83 )
    ( TokOther "," )
, L
    ( Position 51 85 )
    ( TokSym "after" )
, L
    ( Position 51 91 )
    ( TokSym "all" )
, L
    ( Position 51 94 )
    ( TokOther "," )
, L
    ( Position 52 1 )
    ( Indent 21 )
, L
    ( Position 52 22 )
    ( TokSym "reads" )
, L
    ( Position 53 1 )
    ( Indent 21 )
, L
    ( Position 53 22 )
    ( TokSym "." )
, L
    ( Position 54 1 )
    ( Indent 21 )
, L
    ( Position 54 22 )
    ( TokOther "*" )
, L
    ( Position 54 24 )
    ( TokOther "\" )
, L
    ( Position 54 96 )
    ( LexicalError "
                           unbounded streams of data without requiring the entire sequence to be 
                           resident in memory. To take advantage of this you have to write your 
                           functions in a lazy streaming style, e.g. classic pipeline composition. 
                           The default I/O chunk size is 32k, which should be good in most circumstances.\"
                         .
                         ... which is very much the idea of this library: the default chunk size for
                         'hGetContents' and the like follows @Data.ByteString.Lazy@ and operations
                         like @lines@ and @append@ and so on are tailored not to increase chunk size. 
                         .
                         It is natural to think that 
                         the direct, naive, monadic formulation of such a type 
                         would necessarily make things much slower. This appears to be a prejudice. 
                         For example, passing a large file of short lines through
                         this benchmark transformation
                         .
                         > Lazy.unlines      . map    (\bs -> "!"       <> Lazy.drop 5 bs)       . Lazy.lines
                         > Streaming.unlines . S.maps (\bs -> chunk "!" >> Streaming.drop 5 bs)  . Streaming.lines
                         .
                         gives pleasing results like these
                         .
                         > $  time ./benchlines lazy >> /dev/null
                         > real\x90m2.097s
                         > ...
                         > $  time ./benchlines streaming >> /dev/null
                         > real\x90m1.930s
                         .
                         More typical, perhaps, are the results for the more 
                         sophisticated operation 
                         .
                         > Lazy.intercalate "!\n"      . Lazy.lines
                         > Streaming.intercalate "!\n" . Streaming.lines
                         .
                         > time ./benchlines lazy >> /dev/null
                         > real\x90m1.250s
                         > ...
                         > time ./benchlines streaming >> /dev/null
                         > real\x90m1.531s
                         . 
                         The pipes environment would express the latter as 
                         .
                         > Pipes.intercalates (Pipes.yield "!\n") . view Pipes.lines 
                         .
                         meaning almost exactly what we mean above, but with results like this
                         .
                         >  time ./benchlines pipes >> /dev/null
                         >  real\x90m6.353s
                         .
                         The difference is not intrinsic to pipes, but is mostly that 
                         this library depends the @streaming@ library, which is used in place 
                         of @free@ to express the (streaming) splitting and division of byte streams. 
                         Those elementary concepts are catastrophically mishandled in the streaming io libraries 
                         other than pipes. Already the @enumerator@ and @iteratee@ libraries
                         were completely defeated by it: see e.g. the @enumerator@ implementation of 
                         <http://hackage.haskell.org/package/enumerator-0.4.20/docs/Data-Enumerator-Text.html#v:splitWhen splitWhen and lines>.
                         This will concatenate strict text forever, if that's what is coming
                         in.  It becomes torture to express elementary distinctions. 
                         .
                         Though we barely alter signatures in @Data.ByteString.Lazy@ 
                         more than is required  by the types, 
                         the point of view that emerges is very much that of
                         @pipes-bytestring@ and @pipes-group@. In particular
                         we have these correspondences:
                         .
                         > Lazy.splitAt      :: Int -> ByteString              -> (ByteString, ByteString)
                         > Streaming.splitAt :: Int -> ByteString m r          -> ByteString m (ByteString m r)
                         > Pipes.splitAt     :: Int -> Producer ByteString m r -> Producer ByteString m (Producer ByteString m r)
                         .
                         and
                         .
                         > Lazy.lines      :: ByteString -> [ByteString]
                         > Streaming.lines :: ByteString m r -> Stream (ByteString m) m r
                         > Pipes.lines     :: Producer ByteString m r -> FreeT (Producer ByteString m) m r
                         .
                         where the @Stream@ type expresses the sequencing of @ByteString m _@ layers
                         with the usual \'free monad\' sequencing. 
                         .
                         If you are unfamiliar with this
                         way of structuring material you might take a look at the tutorial for 
                         <http://hackage.haskell.org/package/pipes-group-1.0.2/docs/Pipes-Group-Tutorial.html pipes-group>
                         and the examples in the documentation for the streaming library. See also
                         <https://gist.github.com/michaelt/6c6843e6dd8030e95d58 simple implementations> 
                         of the shell-like examples mentioned above.

                        
    license:             BSD3
    license-file:        LICENSE
    author:              michaelt
    maintainer:          what_is_it_to_do_anything@yahoo.com
    -- copyright:           
    category:            Data
    build-type:          Simple
    extra-source-files:  ChangeLog.md
    cabal-version:       >=1.10

    library
      exposed-modules:     Data.ByteString.Streaming
                           , Data.ByteString.Streaming.Char8
                           , Data.ByteString.Streaming.Internal

                           
      -- other-modules:       
      other-extensions:    CPP, BangPatterns, ForeignFunctionInterface, DeriveDataTypeable, Unsafe
      build-depends:       base >=4.7 && <4.9
                         , bytestring >=0.10 && <0.11
                         , deepseq 
                         , mtl >=2.1 && <2.3
                         , mmorph >=1.0 && <1.2
                         , transformers >=0.3 && <0.5
                         , streaming > 0.1.0.8 && < 0.1.1

      -- hs-source-dirs:      
      default-language:    Haskell2010
      ghc-options: -O2" )
, L
    ( Position 54 25 ) EOF
]
