[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "Name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 6 )
    ( Whitespace "                " )
, L
    ( Position 1 22 )
    ( TokSym "pappy" )
, L
    ( Position 1 27 )
    ( Whitespace "
    " )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "Version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 9 )
    ( Whitespace "             " )
, L
    ( Position 2 22 )
    ( TokSym "0.1.0.2" )
, L
    ( Position 2 29 )
    ( Whitespace "
    " )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "Synopsis" )
, L
    ( Position 3 9 ) Colon
, L
    ( Position 3 10 )
    ( Whitespace "            " )
, L
    ( Position 3 22 )
    ( TokSym "Packrat" )
, L
    ( Position 3 29 )
    ( Whitespace " " )
, L
    ( Position 3 30 )
    ( TokSym "parsing;" )
, L
    ( Position 3 38 )
    ( Whitespace " " )
, L
    ( Position 3 39 )
    ( TokSym "linear-time" )
, L
    ( Position 3 50 )
    ( Whitespace " " )
, L
    ( Position 3 51 )
    ( TokSym "parsers" )
, L
    ( Position 3 58 )
    ( Whitespace " " )
, L
    ( Position 3 59 )
    ( TokSym "for" )
, L
    ( Position 3 62 )
    ( Whitespace " " )
, L
    ( Position 3 63 )
    ( TokSym "grammars" )
, L
    ( Position 3 71 )
    ( Whitespace " " )
, L
    ( Position 3 72 )
    ( TokSym "in" )
, L
    ( Position 3 74 )
    ( Whitespace " " )
, L
    ( Position 3 75 )
    ( TokSym "TDPL." )
, L
    ( Position 3 80 )
    ( Whitespace "
    " )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "Description" )
, L
    ( Position 4 12 ) Colon
, L
    ( Position 4 13 )
    ( Whitespace "         " )
, L
    ( Position 4 22 )
    ( TokSym "Packrat" )
, L
    ( Position 4 29 )
    ( Whitespace " " )
, L
    ( Position 4 30 )
    ( TokSym "parsing" )
, L
    ( Position 4 37 )
    ( Whitespace " " )
, L
    ( Position 4 38 )
    ( TokSym "is" )
, L
    ( Position 4 40 )
    ( Whitespace " " )
, L
    ( Position 4 41 )
    ( TokSym "a" )
, L
    ( Position 4 42 )
    ( Whitespace " " )
, L
    ( Position 4 43 )
    ( TokSym "novel" )
, L
    ( Position 4 48 )
    ( Whitespace " " )
, L
    ( Position 4 49 )
    ( TokSym "and" )
, L
    ( Position 4 52 )
    ( Whitespace " " )
, L
    ( Position 4 53 )
    ( TokSym "practical" )
, L
    ( Position 4 62 )
    ( Whitespace "
    " )
, L
    ( Position 5 1 )
    ( Indent 21 )
, L
    ( Position 5 22 )
    ( TokSym "method" )
, L
    ( Position 5 28 )
    ( Whitespace " " )
, L
    ( Position 5 29 )
    ( TokSym "for" )
, L
    ( Position 5 32 )
    ( Whitespace " " )
, L
    ( Position 5 33 )
    ( TokSym "implementing" )
, L
    ( Position 5 45 )
    ( Whitespace " " )
, L
    ( Position 5 46 )
    ( TokSym "linear-time" )
, L
    ( Position 5 57 )
    ( Whitespace " " )
, L
    ( Position 5 58 )
    ( TokSym "parsers" )
, L
    ( Position 5 65 )
    ( Whitespace "
    " )
, L
    ( Position 6 1 )
    ( Indent 21 )
, L
    ( Position 6 22 )
    ( TokSym "for" )
, L
    ( Position 6 25 )
    ( Whitespace " " )
, L
    ( Position 6 26 )
    ( TokSym "grammars" )
, L
    ( Position 6 34 )
    ( Whitespace " " )
, L
    ( Position 6 35 )
    ( TokSym "defined" )
, L
    ( Position 6 42 )
    ( Whitespace " " )
, L
    ( Position 6 43 )
    ( TokSym "in" )
, L
    ( Position 6 45 )
    ( Whitespace " " )
, L
    ( Position 6 46 )
    ( TokSym "Top-Down" )
, L
    ( Position 6 54 )
    ( Whitespace " " )
, L
    ( Position 6 55 )
    ( TokSym "Parsing" )
, L
    ( Position 6 62 )
    ( Whitespace "
    " )
, L
    ( Position 7 1 )
    ( Indent 21 )
, L
    ( Position 7 22 )
    ( TokSym "Language" )
, L
    ( Position 7 30 )
    ( Whitespace " " )
, L
    ( Position 7 31 )
    ( TokOther "(" )
, L
    ( Position 7 32 )
    ( TokSym "TDPL" )
, L
    ( Position 7 36 )
    ( TokOther ")" )
, L
    ( Position 7 37 )
    ( TokSym "." )
, L
    ( Position 7 38 )
    ( Whitespace " " )
, L
    ( Position 7 39 )
    ( TokSym "While" )
, L
    ( Position 7 44 )
    ( Whitespace " " )
, L
    ( Position 7 45 )
    ( TokSym "TDPL" )
, L
    ( Position 7 49 )
    ( Whitespace " " )
, L
    ( Position 7 50 )
    ( TokSym "was" )
, L
    ( Position 7 53 )
    ( Whitespace " " )
, L
    ( Position 7 54 )
    ( TokSym "originally" )
, L
    ( Position 7 64 )
    ( Whitespace "
    " )
, L
    ( Position 8 1 )
    ( Indent 21 )
, L
    ( Position 8 22 )
    ( TokSym "created" )
, L
    ( Position 8 29 )
    ( Whitespace " " )
, L
    ( Position 8 30 )
    ( TokSym "as" )
, L
    ( Position 8 32 )
    ( Whitespace " " )
, L
    ( Position 8 33 )
    ( TokSym "a" )
, L
    ( Position 8 34 )
    ( Whitespace " " )
, L
    ( Position 8 35 )
    ( TokSym "formal" )
, L
    ( Position 8 41 )
    ( Whitespace " " )
, L
    ( Position 8 42 )
    ( TokSym "model" )
, L
    ( Position 8 47 )
    ( Whitespace " " )
, L
    ( Position 8 48 )
    ( TokSym "for" )
, L
    ( Position 8 51 )
    ( Whitespace " " )
, L
    ( Position 8 52 )
    ( TokSym "top-down" )
, L
    ( Position 8 60 )
    ( Whitespace "
    " )
, L
    ( Position 9 1 )
    ( Indent 21 )
, L
    ( Position 9 22 )
    ( TokSym "parsers" )
, L
    ( Position 9 29 )
    ( Whitespace " " )
, L
    ( Position 9 30 )
    ( TokSym "with" )
, L
    ( Position 9 34 )
    ( Whitespace " " )
, L
    ( Position 9 35 )
    ( TokSym "backtracking" )
, L
    ( Position 9 47 )
    ( Whitespace " " )
, L
    ( Position 9 48 )
    ( TokSym "capability" )
, L
    ( Position 9 58 )
    ( TokOther "," )
, L
    ( Position 9 59 )
    ( Whitespace " " )
, L
    ( Position 9 60 )
    ( TokSym "this" )
, L
    ( Position 9 64 )
    ( Whitespace "
    " )
, L
    ( Position 10 1 )
    ( Indent 21 )
, L
    ( Position 10 22 )
    ( TokSym "thesis" )
, L
    ( Position 10 28 )
    ( Whitespace " " )
, L
    ( Position 10 29 )
    ( TokSym "extends" )
, L
    ( Position 10 36 )
    ( Whitespace " " )
, L
    ( Position 10 37 )
    ( TokSym "TDPL" )
, L
    ( Position 10 41 )
    ( Whitespace " " )
, L
    ( Position 10 42 )
    ( TokSym "into" )
, L
    ( Position 10 46 )
    ( Whitespace " " )
, L
    ( Position 10 47 )
    ( TokSym "a" )
, L
    ( Position 10 48 )
    ( Whitespace " " )
, L
    ( Position 10 49 )
    ( TokSym "powerful" )
, L
    ( Position 10 57 )
    ( Whitespace "
    " )
, L
    ( Position 11 1 )
    ( Indent 21 )
, L
    ( Position 11 22 )
    ( TokSym "general-purpose" )
, L
    ( Position 11 37 )
    ( Whitespace " " )
, L
    ( Position 11 38 )
    ( TokSym "notation" )
, L
    ( Position 11 46 )
    ( Whitespace " " )
, L
    ( Position 11 47 )
    ( TokSym "for" )
, L
    ( Position 11 50 )
    ( Whitespace " " )
, L
    ( Position 11 51 )
    ( TokSym "describing" )
, L
    ( Position 11 61 )
    ( Whitespace "
    " )
, L
    ( Position 12 1 )
    ( Indent 21 )
, L
    ( Position 12 22 )
    ( TokSym "language" )
, L
    ( Position 12 30 )
    ( Whitespace " " )
, L
    ( Position 12 31 )
    ( TokSym "syntax" )
, L
    ( Position 12 37 )
    ( TokOther "," )
, L
    ( Position 12 38 )
    ( Whitespace " " )
, L
    ( Position 12 39 )
    ( TokSym "providing" )
, L
    ( Position 12 48 )
    ( Whitespace " " )
, L
    ( Position 12 49 )
    ( TokSym "a" )
, L
    ( Position 12 50 )
    ( Whitespace " " )
, L
    ( Position 12 51 )
    ( TokSym "compelling" )
, L
    ( Position 12 61 )
    ( Whitespace "
    " )
, L
    ( Position 13 1 )
    ( Indent 21 )
, L
    ( Position 13 22 )
    ( TokSym "alternative" )
, L
    ( Position 13 33 )
    ( Whitespace " " )
, L
    ( Position 13 34 )
    ( TokSym "to" )
, L
    ( Position 13 36 )
    ( Whitespace " " )
, L
    ( Position 13 37 )
    ( TokSym "traditional" )
, L
    ( Position 13 48 )
    ( Whitespace " " )
, L
    ( Position 13 49 )
    ( TokSym "context-free" )
, L
    ( Position 13 61 )
    ( Whitespace "
    " )
, L
    ( Position 14 1 )
    ( Indent 21 )
, L
    ( Position 14 22 )
    ( TokSym "grammars" )
, L
    ( Position 14 30 )
    ( Whitespace " " )
, L
    ( Position 14 31 )
    ( TokOther "(" )
, L
    ( Position 14 32 )
    ( TokSym "CFGs" )
, L
    ( Position 14 36 )
    ( TokOther ")" )
, L
    ( Position 14 37 )
    ( TokSym "." )
, L
    ( Position 14 38 )
    ( Whitespace " " )
, L
    ( Position 14 39 )
    ( TokSym "Common" )
, L
    ( Position 14 45 )
    ( Whitespace " " )
, L
    ( Position 14 46 )
    ( TokSym "syntactic" )
, L
    ( Position 14 55 )
    ( Whitespace " " )
, L
    ( Position 14 56 )
    ( TokSym "idioms" )
, L
    ( Position 14 62 )
    ( Whitespace "
    " )
, L
    ( Position 15 1 )
    ( Indent 21 )
, L
    ( Position 15 22 )
    ( TokSym "that" )
, L
    ( Position 15 26 )
    ( Whitespace " " )
, L
    ( Position 15 27 )
    ( TokSym "cannot" )
, L
    ( Position 15 33 )
    ( Whitespace " " )
, L
    ( Position 15 34 )
    ( TokSym "be" )
, L
    ( Position 15 36 )
    ( Whitespace " " )
, L
    ( Position 15 37 )
    ( TokSym "represented" )
, L
    ( Position 15 48 )
    ( Whitespace " " )
, L
    ( Position 15 49 )
    ( TokSym "concisely" )
, L
    ( Position 15 58 )
    ( Whitespace " " )
, L
    ( Position 15 59 )
    ( TokSym "in" )
, L
    ( Position 15 61 )
    ( Whitespace " " )
, L
    ( Position 15 62 )
    ( TokSym "a" )
, L
    ( Position 15 63 )
    ( Whitespace "
    " )
, L
    ( Position 16 1 )
    ( Indent 21 )
, L
    ( Position 16 22 )
    ( TokSym "CFG" )
, L
    ( Position 16 25 )
    ( Whitespace " " )
, L
    ( Position 16 26 )
    ( TokSym "are" )
, L
    ( Position 16 29 )
    ( Whitespace " " )
, L
    ( Position 16 30 )
    ( TokSym "easily" )
, L
    ( Position 16 36 )
    ( Whitespace " " )
, L
    ( Position 16 37 )
    ( TokSym "expressed" )
, L
    ( Position 16 46 )
    ( Whitespace " " )
, L
    ( Position 16 47 )
    ( TokSym "in" )
, L
    ( Position 16 49 )
    ( Whitespace " " )
, L
    ( Position 16 50 )
    ( TokSym "TDPL" )
, L
    ( Position 16 54 )
    ( TokOther "," )
, L
    ( Position 16 55 )
    ( Whitespace " " )
, L
    ( Position 16 56 )
    ( TokSym "such" )
, L
    ( Position 16 60 )
    ( Whitespace " " )
, L
    ( Position 16 61 )
    ( TokSym "as" )
, L
    ( Position 16 63 )
    ( Whitespace "
    " )
, L
    ( Position 17 1 )
    ( Indent 21 )
, L
    ( Position 17 22 )
    ( TokSym "longest-match" )
, L
    ( Position 17 35 )
    ( Whitespace " " )
, L
    ( Position 17 36 )
    ( TokSym "disambiguation" )
, L
    ( Position 17 50 )
    ( Whitespace " " )
, L
    ( Position 17 51 )
    ( TokSym "and" )
, L
    ( Position 17 54 )
    ( Whitespace " " )
, L
    ( Position 17 65 )
    ( LexicalError "
                         predicates," making it possible to describe
                         the complete lexical and grammatical syntax
                         of a practical programming language in a
                         single TDPL grammar.

                         Packrat parsing is an adaptation of a
                         30-year-old tabular parsing algorithm that
                         was never put into practice until now. A
                         packrat parser can recognize any string
                         defined by a TDPL grammar in linear time,
                         providing the power and flexibility of a
                         backtracking recursive descent parser
                         without the attendant risk of exponential
                         parse time. A packrat parser can recognize
                         any LL(k) or LR(k) language, as well as many
                         languages requiring unlimited lookahead that
                         cannot be parsed by shift/reduce
                         parsers. Packrat parsing also provides
                         better composition properties than LL/LR
                         parsing, making it more suitable for dynamic
                         or extensible languages. The primary
                         disadvantage of packrat parsing is its
                         storage cost, which is a constant multiple
                         of the total input size rather than being
                         proportional to the nesting depth of the
                         syntactic constructs appearing in the input.

                         Monadic combinators and lazy evaluation
                         enable elegant and direct implementations of
                         packrat parsers in recent functional
                         programming languages such as Haskell. Three
                         different packrat parsers for the Java
                         language are presented here, demonstrating
                         the construction of packrat parsers in
                         Haskell using primitive pattern matching,
                         using monadic combinators, and by automatic
                         generation from a declarative parser
                         specification. The prototype packrat parser
                         generator developed for the third case
                         itself uses a packrat parser to read its
                         parser specifications, and supports full
                         TDPL notation extended with "semantic
                         predicates," allowing parsing decisions to
                         depend on the semantic values of other
                         syntactic entities. Experimental results
                         show that all of these packrat parsers run
                         reliably in linear time, efficiently support
                         "scannerless" parsing with integrated
                         lexical analysis, and provide the
                         user-friendly error-handling facilities
                         necessary in practical applications.

    Homepage:            http://pdos.csail.mit.edu/~baford/packrat/thesis/
    License:             BSD3
    License-file:        LICENSE
    Author:              Bryan Ford
    Maintainer:          Chris Done <chrisdone@gmail.com>
    Stability:           Alpha
    Category:            Text
    Build-type:          Simple
    Cabal-version:       >=1.2
    Executable pappy
         Main-is:        Main.hs
         Other-Modules:  Pos,
                         Parse,
                         Pappy,
                         ReadGrammar,
                         ReduceGrammar,
                         SimplifyGrammar,
                         MemoAnalysis,
                         WriteParser
         Hs-source-dirs: src
         Build-depends:  base >= 4 && < 5
    " )
, L
    ( Position 17 55 ) EOF
]
