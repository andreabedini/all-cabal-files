[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "Name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 22 )
    ( TokSym "first-class-patterns" )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "Version" )
, L
    ( Position 2 8 ) Colon
, L
    ( Position 2 22 )
    ( TokSym "0.3.2" )
, L
    ( Position 3 1 )
    ( Indent 0 )
, L
    ( Position 3 1 )
    ( TokSym "Author" )
, L
    ( Position 3 7 ) Colon
, L
    ( Position 3 22 )
    ( TokSym "Reiner" )
, L
    ( Position 3 29 )
    ( TokSym "Pope" )
, L
    ( Position 3 33 )
    ( TokOther "," )
, L
    ( Position 3 35 )
    ( TokSym "Brent" )
, L
    ( Position 3 41 )
    ( TokSym "Yorgey" )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "Maintainer" )
, L
    ( Position 4 11 ) Colon
, L
    ( Position 4 22 )
    ( TokSym "Brent" )
, L
    ( Position 4 28 )
    ( TokSym "Yorgey" )
, L
    ( Position 4 35 )
    ( TokOther "<" )
, L
    ( Position 4 36 )
    ( TokSym "byorgey" )
, L
    ( Position 4 43 )
    ( TokOther "@" )
, L
    ( Position 4 44 )
    ( TokSym "cis.upenn.edu" )
, L
    ( Position 4 57 )
    ( TokOther ">" )
, L
    ( Position 5 1 )
    ( Indent 0 )
, L
    ( Position 5 1 )
    ( TokSym "License" )
, L
    ( Position 5 8 ) Colon
, L
    ( Position 5 22 )
    ( TokSym "BSD3" )
, L
    ( Position 6 1 )
    ( Indent 0 )
, L
    ( Position 6 1 )
    ( TokSym "License-file" )
, L
    ( Position 6 13 ) Colon
, L
    ( Position 6 22 )
    ( TokSym "LICENSE" )
, L
    ( Position 7 1 )
    ( Indent 0 )
, L
    ( Position 7 1 )
    ( TokSym "Synopsis" )
, L
    ( Position 7 9 ) Colon
, L
    ( Position 7 22 )
    ( TokSym "First" )
, L
    ( Position 7 28 )
    ( TokSym "class" )
, L
    ( Position 7 34 )
    ( TokSym "patterns" )
, L
    ( Position 7 43 )
    ( TokSym "and" )
, L
    ( Position 7 47 )
    ( TokSym "pattern" )
, L
    ( Position 7 55 )
    ( TokSym "matching" )
, L
    ( Position 7 63 )
    ( TokOther "," )
, L
    ( Position 7 65 )
    ( TokSym "using" )
, L
    ( Position 7 71 )
    ( TokSym "type" )
, L
    ( Position 7 76 )
    ( TokSym "families" )
, L
    ( Position 8 1 )
    ( Indent 0 )
, L
    ( Position 8 1 )
    ( TokSym "Description" )
, L
    ( Position 8 12 ) Colon
, L
    ( Position 10 1 )
    ( Indent 1 )
, L
    ( Position 10 2 )
    ( TokSym "This" )
, L
    ( Position 10 7 )
    ( TokSym "package" )
, L
    ( Position 10 15 )
    ( TokSym "implements" )
, L
    ( Position 10 26 )
    ( TokSym "a" )
, L
    ( Position 10 28 )
    ( TokSym "library" )
, L
    ( Position 10 36 )
    ( TokSym "of" )
, L
    ( Position 10 39 )
    ( TokSym "first" )
, L
    ( Position 10 45 )
    ( TokSym "class" )
, L
    ( Position 10 51 )
    ( TokSym "patterns." )
, L
    ( Position 10 61 )
    ( TokSym "The" )
, L
    ( Position 11 1 )
    ( Indent 1 )
, L
    ( Position 11 2 )
    ( TokSym "initial" )
, L
    ( Position 11 10 )
    ( TokSym "basis" )
, L
    ( Position 11 16 )
    ( TokSym "for" )
, L
    ( Position 11 20 )
    ( TokSym "this" )
, L
    ( Position 11 25 )
    ( TokSym "library" )
, L
    ( Position 11 33 )
    ( TokSym "was" )
, L
    ( Position 11 37 )
    ( TokSym "Morten" )
, L
    ( Position 11 44 )
    ( TokSym "Rhiger's" )
, L
    ( Position 11 53 )
    ( TokOther "\" )
, L
    ( Position 11 64 )
    ( LexicalError "
    \x9pattern combinators\"; the patterns can be used in an almost
    \x9identical way to those of Morten Rhiger. In a series of blog
    \x9posts at
    \x9<http://reinerp.wordpress.com/category/pattern-combinators/>
    \x9the types of patterns were made more revealing using type
    \x9families, and a simpler implementation was used which avoids
    \x9some book-keeping.
    \x9.
    \x9The library reimplements most of Haskell's built-in
    \x9pattern matching facilities, plus some more. The pattern
    \x9matches of this library are lightweight: when GHC's
    \x9optimisation is turned on, all overhead should be optimised
    \x9away, leaving a standard Haskell pattern match.
            .
    \x9If you're just reading the documentation for this library for
    \x9the first time, start with "Data.Pattern".

    Cabal-Version:       >= 1.10
    Category:            Data
    Build-Type:          Simple
    Stability:           experimental
    homepage:            https://github.com/reinerp/first-class-patterns
    bug-reports:         https://github.com/reinerp/first-class-patterns/issues

    source-repository head
      type:                 git
      location:             git://github.com/reinerp/first-class-patterns.git

    library
      Build-Depends:
        base >= 4.5 && < 5,
        transformers >= 0.1.0 && < 0.4
      Exposed-modules:     Data.Pattern
                           Data.Pattern.Base
                           Data.Pattern.Base.TypeList
                           Data.Pattern.Base.Tuple
                           Data.Pattern.Common
      Other-modules:       Data.Pattern.Base.Difference
      Default-extensions:  TypeFamilies,
                           GADTs,
                           ScopedTypeVariables,
                           TypeOperators,
                           EmptyDataDecls,
                           Rank2Types,
                           GeneralizedNewtypeDeriving,
                           FlexibleInstances
      Default-language:    Haskell2010

      -- necessary to get all the patterns properly inlined. Note that putting
      -- {-# INLINE #-} pragmas every doesn't seem to work, due to some subtlety
      -- of the inliner.
      ghc-options:
                         -funfolding-use-threshold=1000
                         -funfolding-creation-threshold=1000
    " )
, L
    ( Position 11 54 ) EOF
]
