[ L
    ( Position 1 1 )
    ( Indent 0 )
, L
    ( Position 1 1 )
    ( TokSym "Name" )
, L
    ( Position 1 5 ) Colon
, L
    ( Position 1 6 )
    ( Whitespace " " )
, L
    ( Position 1 7 )
    ( TokSym "PCLT-DB" )
, L
    ( Position 1 14 )
    ( Whitespace "
    " )
, L
    ( Position 2 1 )
    ( Indent 0 )
, L
    ( Position 2 1 )
    ( TokSym "Synopsis" )
, L
    ( Position 2 9 ) Colon
, L
    ( Position 2 10 )
    ( Whitespace " " )
, L
    ( Position 2 11 )
    ( Whitespace "
    " )
, L
    ( Position 3 1 )
    ( Indent 8 )
, L
    ( Position 3 9 )
    ( TokSym "An" )
, L
    ( Position 3 11 )
    ( Whitespace " " )
, L
    ( Position 3 12 )
    ( TokSym "addon" )
, L
    ( Position 3 17 )
    ( Whitespace " " )
, L
    ( Position 3 18 )
    ( TokSym "to" )
, L
    ( Position 3 20 )
    ( Whitespace " " )
, L
    ( Position 3 21 )
    ( TokSym "PCLT" )
, L
    ( Position 3 25 )
    ( Whitespace " " )
, L
    ( Position 3 26 )
    ( TokSym "package" )
, L
    ( Position 3 33 ) Colon
, L
    ( Position 3 34 )
    ( Whitespace " " )
, L
    ( Position 3 35 )
    ( TokSym "enchance" )
, L
    ( Position 3 43 )
    ( Whitespace " " )
, L
    ( Position 3 44 )
    ( TokSym "PCLT" )
, L
    ( Position 3 48 )
    ( Whitespace " " )
, L
    ( Position 3 49 )
    ( TokSym "catalog" )
, L
    ( Position 3 56 )
    ( Whitespace " " )
, L
    ( Position 3 57 )
    ( TokSym "with" )
, L
    ( Position 3 61 )
    ( Whitespace " " )
, L
    ( Position 3 62 )
    ( TokSym "PostgreSQL" )
, L
    ( Position 3 72 )
    ( Whitespace " " )
, L
    ( Position 3 73 )
    ( TokSym "powers." )
, L
    ( Position 3 80 )
    ( Whitespace "
    " )
, L
    ( Position 4 1 )
    ( Indent 0 )
, L
    ( Position 4 1 )
    ( TokSym "Description" )
, L
    ( Position 4 12 ) Colon
, L
    ( Position 4 13 )
    ( Whitespace "
    " )
, L
    ( Position 5 1 )
    ( Indent 8 )
, L
    ( Position 5 9 )
    ( TokOther "\" )
, L
    ( Position 5 10 )
    ( TokStr "PCLT\" is an abbreviation for \" )
, L
    ( Position 5 43 )
    ( TokSym "Parametric" )
, L
    ( Position 5 53 )
    ( Whitespace " " )
, L
    ( Position 5 54 )
    ( TokSym "Composable" )
, L
    ( Position 5 64 )
    ( Whitespace " " )
, L
    ( Position 5 65 )
    ( TokSym "Localizable" )
, L
    ( Position 5 76 )
    ( Whitespace " " )
, L
    ( Position 5 77 )
    ( Whitespace "
    " )
, L
    ( Position 6 1 )
    ( Indent 8 )
, L
    ( Position 6 9 )
    ( TokSym "Templates" )
, L
    ( Position 6 18 )
    ( TokOther "\" )
, L
    ( Position 6 64 )
    ( LexicalError "
            Term \"Detailizable content (message)\" in this package 
            has a following meaning: some content, representing which 
            it is possible to regulate, in how much details it is represented.
            .
            Conceptually, this package is a powerful extension to the well known 
            Show class, that (extension) is thought to be embeded in any 
            Haskell program, which requires multilanguage support, and/or where 
            messages should be detailizable. 
            .
            For more information about PCLT, read in it's description in it's own 
            Cabal file.
            .
            _________
            .
            By the base package (PCLT <http://hackage.haskell.org/package/PCLT>) 
            the templates are provided to be stored 
            statically in module declarations using 
            'Text.PCLT.HasStaticRawPCLTs.HasStaticRawPCLTs' class instaniations. 
            .
            The PCST-DB package adds a possibility to store templates in DB 
            (under PostgreSQL v8.4. (not less)). ER diagram: 
            <http://i1.fastpic.ru/big/2009/1212/f0/5b9845716e5a6984e9bc9d62a61928f0.png>
            .
            The following units are storable in DB:
            .
            * localizable templates 
            .
            * localized templates
            .
            * languages
            .
            * collections of localizable templates 
            .
            * collections (of localizable templates) compositions
            .
            * catalogs
            .
            * configurations of PCLT catalogs
            .
            * localizable templates detalization policies 
            .
            For each catalog in DB there is stored a special flag \"catalog data
            or config changed\". The flag gets raised by an army of triggers, 
            that watches every table, and is thought to get dropped by a program, 
            which uses DB catalog. Drop the flag right before catalog update 
            from DB.
            .
            Unfortunately, the current implementation of this flagging system 
            constraints the number of agents that update their catalogs from DB 
            by only one (because, when agent updates it's catalog, it drops 
            the flag, and other agents don't know that flag was risen, so they 
            can't know if version of catalog in their operative memory is older 
            then in DB or not).
            .
            But this limitation removal is planned as a first ToDo in the next 
            version of PCLT-DB.
    Version: 0.1.1
    Copyright: Copyright (c) 2009 Andrejs Sisojevs
    License: LGPL
    License-File: COPYRIGHT
    Author: Andrejs Sisojevs <andrejs.sisojevs@nextmail.ru>
    Maintainer: Andrejs Sisojevs <andrejs.sisojevs@nextmail.ru>
    Stability: alpha
    Homepage: http://github.com/Andrey-Sisoyev/PCLT-DB
    Category: Database
    Tested-With: GHC == 6.10.4
    Cabal-Version: >= 1.6
    Build-Type: Simple

    Extra-Source-Files:
        COPYRIGHT
        COPYING
        NEWS
        doinst.sh
        db/db_inst.sh
        db/data.sql
        db/pclt.sql
        db/pclt_meta.sql
        db/view.sql
        db/local_test/tests.sql
        initial_data/PCLT-DB.PCLTCatalog.ods
        models/PCLT-DB.ERD.v0.1.odg
        models/PCLT-DB.ERD.v0.1.odg.png      
        examples/HelloWorld/HelloWorld.hs
        examples/HelloWorld/HelloWorld__.hs
        examples/HelloWorld/HelloWorld_Data.hs
        examples/HelloWorld/HelloWorld.PCLTCatalog.ods
        examples/HelloWorld/HelloWorld.sql

    Library
        Build-Depends:
            base >= 4 && < 5, bytestring, containers, convertible >= 1.0.6, mtl, HDBC >= 2.2.1, HDBC-postgresql >= 2.2.0.0, PCLT
        Exposed-Modules:
            Database.ReadableFromDB
            Database.ReadableFromDB__
            Database.PCLT
            Database.PCLT.InterfaceWithDB
            Database.PCLT.InterfaceWithDB__
            Database.PCLT.UpdatableCatalog
        Other-Modules:
            Data.MyHelpers
            Data.MyHelpers_" )
, L
    ( Position 6 19 ) EOF
]
